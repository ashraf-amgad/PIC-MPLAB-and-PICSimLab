

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 18 07:28:36 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    67                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    68                           	psect	maintext_split_3,global,class=CODE,split=1,delta=2
    69                           	psect	maintext_split_4,global,class=CODE,split=1,delta=2
    70                           	psect	maintext_split_5,global,class=CODE,split=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.20
    74                           ; Generated 12/02/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F877A Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0008                     	;# 
   356  0009                     	;# 
   357  000A                     	;# 
   358  000B                     	;# 
   359  000C                     	;# 
   360  000D                     	;# 
   361  000E                     	;# 
   362  000E                     	;# 
   363  000F                     	;# 
   364  0010                     	;# 
   365  0011                     	;# 
   366  0012                     	;# 
   367  0013                     	;# 
   368  0014                     	;# 
   369  0015                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001D                     	;# 
   380  001E                     	;# 
   381  001F                     	;# 
   382  0081                     	;# 
   383  0085                     	;# 
   384  0086                     	;# 
   385  0087                     	;# 
   386  0088                     	;# 
   387  0089                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0093                     	;# 
   394  0094                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  010C                     	;# 
   402  010D                     	;# 
   403  010E                     	;# 
   404  010F                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0088                     	;# 
   447  0089                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0098                     	;# 
   456  0099                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  000E                     	;# 
   483  000F                     	;# 
   484  0010                     	;# 
   485  0011                     	;# 
   486  0012                     	;# 
   487  0013                     	;# 
   488  0014                     	;# 
   489  0015                     	;# 
   490  0015                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  001A                     	;# 
   496  001B                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  001D                     	;# 
   500  001E                     	;# 
   501  001F                     	;# 
   502  0081                     	;# 
   503  0085                     	;# 
   504  0086                     	;# 
   505  0087                     	;# 
   506  0088                     	;# 
   507  0089                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0098                     	;# 
   516  0099                     	;# 
   517  009C                     	;# 
   518  009D                     	;# 
   519  009E                     	;# 
   520  009F                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  0000                     	;# 
   528  0001                     	;# 
   529  0002                     	;# 
   530  0003                     	;# 
   531  0004                     	;# 
   532  0005                     	;# 
   533  0006                     	;# 
   534  0007                     	;# 
   535  0008                     	;# 
   536  0009                     	;# 
   537  000A                     	;# 
   538  000B                     	;# 
   539  000C                     	;# 
   540  000D                     	;# 
   541  000E                     	;# 
   542  000E                     	;# 
   543  000F                     	;# 
   544  0010                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0013                     	;# 
   548  0014                     	;# 
   549  0015                     	;# 
   550  0015                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001B                     	;# 
   558  001C                     	;# 
   559  001D                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  0081                     	;# 
   563  0085                     	;# 
   564  0086                     	;# 
   565  0087                     	;# 
   566  0088                     	;# 
   567  0089                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  009F                     	;# 
   581  010C                     	;# 
   582  010D                     	;# 
   583  010E                     	;# 
   584  010F                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000D                     	;# 
   601  000E                     	;# 
   602  000E                     	;# 
   603  000F                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0014                     	;# 
   609  0015                     	;# 
   610  0015                     	;# 
   611  0016                     	;# 
   612  0017                     	;# 
   613  0018                     	;# 
   614  0019                     	;# 
   615  001A                     	;# 
   616  001B                     	;# 
   617  001B                     	;# 
   618  001C                     	;# 
   619  001D                     	;# 
   620  001E                     	;# 
   621  001F                     	;# 
   622  0081                     	;# 
   623  0085                     	;# 
   624  0086                     	;# 
   625  0087                     	;# 
   626  0088                     	;# 
   627  0089                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0093                     	;# 
   634  0094                     	;# 
   635  0098                     	;# 
   636  0099                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  009F                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647                           
   648                           	psect	idataBANK0
   649  1F8A                     __pidataBANK0:
   650                           
   651                           ;initializer for _Screen_Status
   652  1F8A  3408               	retlw	8
   653                           
   654                           ;initializer for _Selection_Part
   655  1F8B  3401               	retlw	1
   656                           
   657                           ;initializer for _Current_Event
   658  1F8C  3401               	retlw	1
   659                           
   660                           ;initializer for _Set_Time_Blinking_flag
   661  1F8D  3401               	retlw	1
   662                           
   663                           ;initializer for _Waiting_Minutes
   664  1F8E  340F               	retlw	15
   665                           
   666                           ;initializer for _LCD_Time
   667  1F8F  3468               	retlw	104
   668  1F90  3468               	retlw	104
   669  1F91  343A               	retlw	58
   670  1F92  346D               	retlw	109
   671  1F93  346D               	retlw	109
   672  1F94  343A               	retlw	58
   673  1F95  3473               	retlw	115
   674  1F96  3473               	retlw	115
   675  1F97  3400               	retlw	0
   676                           
   677                           ;initializer for _LCD_Eventmsg
   678  1F98  3445               	retlw	69
   679  1F99  3400               	retlw	0
   680                           
   681                           	psect	idataBANK1
   682  1226                     __pidataBANK1:
   683                           
   684                           ;initializer for _Embedded_Password
   685  1226  3430               	retlw	48
   686  1227  3430               	retlw	48
   687  1228  3430               	retlw	48
   688  1229  3430               	retlw	48
   689  122A  3400               	retlw	0
   690                           
   691                           ;initializer for _Blocked_Sreen_Line2_msg
   692  122B  3457               	retlw	87
   693  122C  3461               	retlw	97
   694  122D  3469               	retlw	105
   695  122E  3474               	retlw	116
   696  122F  342E               	retlw	46
   697  1230  342E               	retlw	46
   698  1231  342E               	retlw	46
   699  1232  3420               	retlw	32
   700  1233  3431               	retlw	49
   701  1234  3435               	retlw	53
   702  1235  3420               	retlw	32
   703  1236  344D               	retlw	77
   704  1237  3469               	retlw	105
   705  1238  346E               	retlw	110
   706  1239  3400               	retlw	0
   707                           
   708                           ;initializer for _Passwordmsg
   709  123A  3445               	retlw	69
   710  123B  344E               	retlw	78
   711  123C  3454               	retlw	84
   712  123D  3445               	retlw	69
   713  123E  3452               	retlw	82
   714  123F  3420               	retlw	32
   715  1240  3450               	retlw	80
   716  1241  3441               	retlw	65
   717  1242  3453               	retlw	83
   718  1243  3453               	retlw	83
   719  1244  3457               	retlw	87
   720  1245  344F               	retlw	79
   721  1246  3452               	retlw	82
   722  1247  3444               	retlw	68
   723  1248  3400               	retlw	0
   724                           
   725                           ;initializer for _Clear_Events_msg2
   726  1249  3453               	retlw	83
   727  124A  3475               	retlw	117
   728  124B  3463               	retlw	99
   729  124C  3463               	retlw	99
   730  124D  3465               	retlw	101
   731  124E  3473               	retlw	115
   732  124F  3473               	retlw	115
   733  1250  3466               	retlw	102
   734  1251  3475               	retlw	117
   735  1252  346C               	retlw	108
   736  1253  346C               	retlw	108
   737  1254  3479               	retlw	121
   738  1255  3400               	retlw	0
   739                           
   740                           ;initializer for _passwordChangedSuccessfullymsg
   741  1256  3443               	retlw	67
   742  1257  3468               	retlw	104
   743  1258  3461               	retlw	97
   744  1259  346E               	retlw	110
   745  125A  3467               	retlw	103
   746  125B  3465               	retlw	101
   747  125C  3464               	retlw	100
   748  125D  3400               	retlw	0
   749                           
   750                           ;initializer for _LCD_Logsmsg
   751  125E  344C               	retlw	76
   752  125F  346F               	retlw	111
   753  1260  3467               	retlw	103
   754  1261  3473               	retlw	115
   755  1262  3400               	retlw	0
   756                           
   757                           ;initializer for _LCD_Timemsg
   758  1263  3454               	retlw	84
   759  1264  3469               	retlw	105
   760  1265  346D               	retlw	109
   761  1266  3465               	retlw	101
   762  1267  3400               	retlw	0
   763                           
   764                           ;initializer for _LCD_NoLogsmsg
   765  1268  344E               	retlw	78
   766  1269  346F               	retlw	111
   767  126A  3400               	retlw	0
   768                           
   769                           ;initializer for _LCD_Speedmsg
   770  126B  3453               	retlw	83
   771  126C  3450               	retlw	80
   772  126D  3400               	retlw	0
   773                           
   774                           	psect	idataBANK2
   775  12C9                     __pidataBANK2:
   776                           
   777                           ;initializer for _Main_Menu
   778  12C9  3456               	retlw	86
   779  12CA  3469               	retlw	105
   780  12CB  3465               	retlw	101
   781  12CC  3477               	retlw	119
   782  12CD  3420               	retlw	32
   783  12CE  344C               	retlw	76
   784  12CF  346F               	retlw	111
   785  12D0  3467               	retlw	103
   786  12D1  3400               	retlw	0
   787  12D2  3400               	retlw	0
   788  12D3  3400               	retlw	0
   789  12D4  3400               	retlw	0
   790  12D5  3400               	retlw	0
   791  12D6  3443               	retlw	67
   792  12D7  346C               	retlw	108
   793  12D8  3465               	retlw	101
   794  12D9  3461               	retlw	97
   795  12DA  3472               	retlw	114
   796  12DB  3420               	retlw	32
   797  12DC  344C               	retlw	76
   798  12DD  346F               	retlw	111
   799  12DE  3467               	retlw	103
   800  12DF  3400               	retlw	0
   801  12E0  3400               	retlw	0
   802  12E1  3400               	retlw	0
   803  12E2  3400               	retlw	0
   804  12E3  3444               	retlw	68
   805  12E4  346F               	retlw	111
   806  12E5  3477               	retlw	119
   807  12E6  346E               	retlw	110
   808  12E7  346C               	retlw	108
   809  12E8  346F               	retlw	111
   810  12E9  3461               	retlw	97
   811  12EA  3464               	retlw	100
   812  12EB  3420               	retlw	32
   813  12EC  344C               	retlw	76
   814  12ED  346F               	retlw	111
   815  12EE  3467               	retlw	103
   816  12EF  3400               	retlw	0
   817  12F0  3453               	retlw	83
   818  12F1  3465               	retlw	101
   819  12F2  3474               	retlw	116
   820  12F3  3420               	retlw	32
   821  12F4  3454               	retlw	84
   822  12F5  3469               	retlw	105
   823  12F6  346D               	retlw	109
   824  12F7  3465               	retlw	101
   825  12F8  3400               	retlw	0
   826  12F9  3400               	retlw	0
   827  12FA  3400               	retlw	0
   828  12FB  3400               	retlw	0
   829  12FC  3400               	retlw	0
   830  12FD  3443               	retlw	67
   831  12FE  3468               	retlw	104
   832  12FF  3461               	retlw	97
   833  1300  346E               	retlw	110
   834  1301  3467               	retlw	103
   835  1302  3465               	retlw	101
   836  1303  3420               	retlw	32
   837  1304  3470               	retlw	112
   838  1305  3477               	retlw	119
   839  1306  3464               	retlw	100
   840  1307  3400               	retlw	0
   841  1308  3400               	retlw	0
   842  1309  3400               	retlw	0
   843                           
   844                           ;initializer for _Events_Strings
   845  130A  3420               	retlw	32
   846  130B  3400               	retlw	0
   847  130C  3400               	retlw	0
   848  130D  344F               	retlw	79
   849  130E  344E               	retlw	78
   850  130F  3400               	retlw	0
   851  1310  3447               	retlw	71
   852  1311  3431               	retlw	49
   853  1312  3400               	retlw	0
   854  1313  3447               	retlw	71
   855  1314  3432               	retlw	50
   856  1315  3400               	retlw	0
   857  1316  3447               	retlw	71
   858  1317  3433               	retlw	51
   859  1318  3400               	retlw	0
   860  1319  3447               	retlw	71
   861  131A  3434               	retlw	52
   862  131B  3400               	retlw	0
   863  131C  3447               	retlw	71
   864  131D  3452               	retlw	82
   865  131E  3400               	retlw	0
   866  131F  3447               	retlw	71
   867  1320  344E               	retlw	78
   868  1321  3400               	retlw	0
   869  1322  3443               	retlw	67
   870  1323  3420               	retlw	32
   871  1324  3400               	retlw	0
   872  1325  3400               	retlw	0
   873  1326  3400               	retlw	0
   874  1327  3400               	retlw	0
   875                           
   876                           	psect	idataBANK3
   877  080C                     __pidataBANK3:
   878                           
   879                           ;initializer for _DOW_To_String
   880  080C  3453               	retlw	83
   881  080D  3475               	retlw	117
   882  080E  3400               	retlw	0
   883  080F  344D               	retlw	77
   884  0810  346F               	retlw	111
   885  0811  3400               	retlw	0
   886  0812  3454               	retlw	84
   887  0813  3475               	retlw	117
   888  0814  3400               	retlw	0
   889  0815  3457               	retlw	87
   890  0816  3465               	retlw	101
   891  0817  3400               	retlw	0
   892  0818  3454               	retlw	84
   893  0819  3468               	retlw	104
   894  081A  3400               	retlw	0
   895  081B  3446               	retlw	70
   896  081C  3472               	retlw	114
   897  081D  3400               	retlw	0
   898  081E  3453               	retlw	83
   899  081F  3461               	retlw	97
   900  0820  3400               	retlw	0
   901  0821  3400               	retlw	0
   902  0822  3400               	retlw	0
   903  0823  3400               	retlw	0
   904                           
   905                           ;initializer for _Password_Trails_msg
   906  0824  3433               	retlw	51
   907  0825  3420               	retlw	32
   908  0826  3441               	retlw	65
   909  0827  3474               	retlw	116
   910  0828  3474               	retlw	116
   911  0829  3465               	retlw	101
   912  082A  346D               	retlw	109
   913  082B  3470               	retlw	112
   914  082C  3474               	retlw	116
   915  082D  3420               	retlw	32
   916  082E  3472               	retlw	114
   917  082F  3465               	retlw	101
   918  0830  346D               	retlw	109
   919  0831  3461               	retlw	97
   920  0832  3469               	retlw	105
   921  0833  346E               	retlw	110
   922  0834  3400               	retlw	0
   923                           
   924                           ;initializer for _Clear_Events_msg1
   925  0835  344C               	retlw	76
   926  0836  346F               	retlw	111
   927  0837  3467               	retlw	103
   928  0838  3473               	retlw	115
   929  0839  3420               	retlw	32
   930  083A  3443               	retlw	67
   931  083B  346C               	retlw	108
   932  083C  3465               	retlw	101
   933  083D  3461               	retlw	97
   934  083E  3472               	retlw	114
   935  083F  3465               	retlw	101
   936  0840  3464               	retlw	100
   937  0841  342E               	retlw	46
   938  0842  342E               	retlw	46
   939  0843  342E               	retlw	46
   940  0844  3400               	retlw	0
   941                           
   942                           ;initializer for _Blocked_Sreen_Line1_msg
   943  0845  3459               	retlw	89
   944  0846  346F               	retlw	111
   945  0847  3475               	retlw	117
   946  0848  3420               	retlw	32
   947  0849  3461               	retlw	97
   948  084A  3472               	retlw	114
   949  084B  3465               	retlw	101
   950  084C  3420               	retlw	32
   951  084D  3442               	retlw	66
   952  084E  346C               	retlw	108
   953  084F  346F               	retlw	111
   954  0850  3463               	retlw	99
   955  0851  346B               	retlw	107
   956  0852  3465               	retlw	101
   957  0853  3464               	retlw	100
   958  0854  3400               	retlw	0
   959  000E                     _TMR1	set	14
   960  0019                     _TXREG	set	25
   961  0013                     _SSPBUF	set	19
   962  0014                     _SSPCON	set	20
   963  0009                     _PORTE	set	9
   964  0008                     _PORTD	set	8
   965  0007                     _PORTC	set	7
   966  0006                     _PORTB	set	6
   967  0005                     _PORTA	set	5
   968  001F                     _ADCON0bits	set	31
   969  001E                     _ADRESH	set	30
   970  001F                     _ADCON0	set	31
   971  0034                     _RB4	set	52
   972  0033                     _RB3	set	51
   973  0032                     _RB2	set	50
   974  0031                     _RB1	set	49
   975  0030                     _RB0	set	48
   976  005F                     _GIE	set	95
   977  005E                     _PEIE	set	94
   978  0080                     _TMR1ON	set	128
   979  0085                     _T1CKPS1	set	133
   980  0084                     _T1CKPS0	set	132
   981  0081                     _TMR1CS	set	129
   982  00C7                     _SPEN	set	199
   983  0060                     _TMR1IF	set	96
   984  0049                     _RE1	set	73
   985  004A                     _RE2	set	74
   986  00FA                     _GO_DONE	set	250
   987  0099                     _SPBRG	set	153
   988  0089                     _TRISEbits	set	137
   989  0093                     _SSPADD	set	147
   990  0094                     _SSPSTAT	set	148
   991  0091                     _SSPCON2	set	145
   992  0089                     _TRISE	set	137
   993  0088                     _TRISD	set	136
   994  0087                     _TRISC	set	135
   995  0086                     _TRISB	set	134
   996  0085                     _TRISA	set	133
   997  0086                     _TRISBbits	set	134
   998  009E                     _ADRESL	set	158
   999  009F                     _ADCON1	set	159
  1000  0460                     _TMR1IE	set	1120
  1001  04C1                     _TRMT	set	1217
  1002  04C5                     _TXEN	set	1221
  1003  043F                     _TRISC7	set	1087
  1004  043E                     _TRISC6	set	1086
  1005  04C4                     _SYNC	set	1220
  1006  04C2                     _BRGH	set	1218
  1007  048B                     _RCEN	set	1163
  1008  048E                     _ACKSTAT	set	1166
  1009  048C                     _ACKEN	set	1164
  1010  048D                     _ACKDT	set	1165
  1011  048A                     _PEN	set	1162
  1012  0488                     _SEN	set	1160
  1013  043C                     _TRISC4	set	1084
  1014  043B                     _TRISC3	set	1083
  1015                           
  1016                           	psect	cinit
  1017  0013                     start_initialization:	
  1018                           ; #config settings
  1019                           
  1020  0013                     __initialization:
  1021                           
  1022                           ; Initialize objects allocated to BANK3
  1023  0013  1783               	bsf	3,7	;select IRP bank2
  1024  0014  30D9               	movlw	low (__pdataBANK3+73)
  1025  0015  00FD               	movwf	btemp+-1
  1026  0016  3008               	movlw	high __pidataBANK3
  1027  0017  00FE               	movwf	btemp
  1028  0018  300C               	movlw	low __pidataBANK3
  1029  0019  00FF               	movwf	btemp+1
  1030  001A  3090               	movlw	low __pdataBANK3
  1031  001B  0084               	movwf	4
  1032  001C  160A  118A  2004  120A  118A  	fcall	init_ram0
  1033                           
  1034                           ; Initialize objects allocated to BANK2
  1035  0021  306F               	movlw	low (__pdataBANK2+95)
  1036  0022  00FD               	movwf	btemp+-1
  1037  0023  3012               	movlw	high __pidataBANK2
  1038  0024  00FE               	movwf	btemp
  1039  0025  30C9               	movlw	low __pidataBANK2
  1040  0026  00FF               	movwf	btemp+1
  1041  0027  3010               	movlw	low __pdataBANK2
  1042  0028  0084               	movwf	4
  1043  0029  160A  118A  2004  120A  118A  	fcall	init_ram0
  1044                           
  1045                           ; Initialize objects allocated to BANK1
  1046  002E  1383               	bcf	3,7	;select IRP bank0
  1047  002F  30E8               	movlw	low (__pdataBANK1+72)
  1048  0030  00FD               	movwf	btemp+-1
  1049  0031  3012               	movlw	high __pidataBANK1
  1050  0032  00FE               	movwf	btemp
  1051  0033  3026               	movlw	low __pidataBANK1
  1052  0034  00FF               	movwf	btemp+1
  1053  0035  30A0               	movlw	low __pdataBANK1
  1054  0036  0084               	movwf	4
  1055  0037  160A  118A  2004  120A  118A  	fcall	init_ram0
  1056                           
  1057                           ; Initialize objects allocated to BANK0
  1058  003C  3061               	movlw	low (__pdataBANK0+16)
  1059  003D  00FD               	movwf	btemp+-1
  1060  003E  301F               	movlw	high __pidataBANK0
  1061  003F  00FE               	movwf	btemp
  1062  0040  308A               	movlw	low __pidataBANK0
  1063  0041  00FF               	movwf	btemp+1
  1064  0042  3051               	movlw	low __pdataBANK0
  1065  0043  0084               	movwf	4
  1066  0044  160A  118A  2004  120A  118A  	fcall	init_ram0
  1067                           
  1068                           ; Clear objects allocated to BANK1
  1069  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1070  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1071  004B  01E8               	clrf	__pbssBANK1& (0+127)
  1072  004C  01E9               	clrf	(__pbssBANK1+1)& (0+127)
  1073  004D  01EA               	clrf	(__pbssBANK1+2)& (0+127)
  1074  004E  01EB               	clrf	(__pbssBANK1+3)& (0+127)
  1075  004F  01EC               	clrf	(__pbssBANK1+4)& (0+127)
  1076  0050  01ED               	clrf	(__pbssBANK1+5)& (0+127)
  1077  0051  01EE               	clrf	(__pbssBANK1+6)& (0+127)
  1078                           
  1079                           ; Clear objects allocated to BANK0
  1080  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0054  01E1               	clrf	__pbssBANK0& (0+127)
  1083  0055  01E2               	clrf	(__pbssBANK0+1)& (0+127)
  1084  0056  01E3               	clrf	(__pbssBANK0+2)& (0+127)
  1085                           
  1086                           ; Clear objects allocated to COMMON
  1087  0057  01F8               	clrf	__pbssCOMMON& (0+127)
  1088  0058  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1089  0059  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1090  005A                     end_of_initialization:	
  1091                           ;End of C runtime variable initialization code
  1092                           
  1093  005A                     __end_of__initialization:
  1094  005A  0183               	clrf	3
  1095  005B  120A  158A  2C82   	ljmp	_main	;jump to C main() function
  1096                           
  1097                           	psect	bssCOMMON
  1098  0078                     __pbssCOMMON:
  1099  0078                     _Timer_Counter:
  1100  0078                     	ds	2
  1101  007A                     _Gear_Counter:
  1102  007A                     	ds	1
  1103                           
  1104                           	psect	bssBANK0
  1105  0061                     __pbssBANK0:
  1106  0061                     _Main_Menu_Offset:
  1107  0061                     	ds	1
  1108  0062                     _Password_Waiting_Time:
  1109  0062                     	ds	1
  1110  0063                     _New_Password_Offset:
  1111  0063                     	ds	1
  1112                           
  1113                           	psect	dataBANK0
  1114  0051                     __pdataBANK0:
  1115  0051                     _Screen_Status:
  1116  0051                     	ds	1
  1117  0052                     _Selection_Part:
  1118  0052                     	ds	1
  1119  0053                     _Current_Event:
  1120  0053                     	ds	1
  1121  0054                     _Set_Time_Blinking_flag:
  1122  0054                     	ds	1
  1123  0055                     _Waiting_Minutes:
  1124  0055                     	ds	1
  1125  0056                     _LCD_Time:
  1126  0056                     	ds	9
  1127  005F                     _LCD_Eventmsg:
  1128  005F                     	ds	2
  1129                           
  1130                           	psect	bssBANK1
  1131  00E8                     __pbssBANK1:
  1132  00E8                     _Input_Password:
  1133  00E8                     	ds	5
  1134  00ED                     _Selection_Part_flag:
  1135  00ED                     	ds	2
  1136                           
  1137                           	psect	dataBANK1
  1138  00A0                     __pdataBANK1:
  1139  00A0                     _Embedded_Password:
  1140  00A0                     	ds	5
  1141  00A5                     _Blocked_Sreen_Line2_msg:
  1142  00A5                     	ds	15
  1143  00B4                     _Passwordmsg:
  1144  00B4                     	ds	15
  1145  00C3                     _Clear_Events_msg2:
  1146  00C3                     	ds	13
  1147  00D0                     _passwordChangedSuccessfullymsg:
  1148  00D0                     	ds	8
  1149  00D8                     _LCD_Logsmsg:
  1150  00D8                     	ds	5
  1151  00DD                     _LCD_Timemsg:
  1152  00DD                     	ds	5
  1153  00E2                     _LCD_NoLogsmsg:
  1154  00E2                     	ds	3
  1155  00E5                     _LCD_Speedmsg:
  1156  00E5                     	ds	3
  1157                           
  1158                           	psect	dataBANK3
  1159  0190                     __pdataBANK3:
  1160  0190                     _DOW_To_String:
  1161  0190                     	ds	24
  1162  01A8                     _Password_Trails_msg:
  1163  01A8                     	ds	17
  1164  01B9                     _Clear_Events_msg1:
  1165  01B9                     	ds	16
  1166  01C9                     _Blocked_Sreen_Line1_msg:
  1167  01C9                     	ds	16
  1168                           
  1169                           	psect	dataBANK2
  1170  0110                     __pdataBANK2:
  1171  0110                     _Main_Menu:
  1172  0110                     	ds	65
  1173  0151                     _Events_Strings:
  1174  0151                     	ds	30
  1175                           
  1176                           	psect	inittext
  1177  1000                     init_fetch0:	
  1178                           ;	Called with low address in FSR and high address in W
  1179                           
  1180  1000  087E               	movf	btemp,w
  1181  1001  008A               	movwf	10
  1182  1002  087F               	movf	btemp+1,w
  1183  1003  0082               	movwf	2
  1184  1004                     init_ram0:	
  1185                           ;Called with:
  1186                           ;	high address of idata address in btemp 
  1187                           ;	low address of idata address in btemp+1 
  1188                           ;	low address of data in FSR
  1189                           ;	high address + 1 of data in btemp-1
  1190                           
  1191  1004  160A  118A  2000  160A  118A  	fcall	init_fetch0
  1192  1009  0080               	movwf	0
  1193  100A  0A84               	incf	4,f
  1194  100B  0804               	movf	4,w
  1195  100C  067D               	xorwf	btemp+-1,w
  1196  100D  1903               	btfsc	3,2
  1197  100E  3400               	retlw	0
  1198  100F  0AFF               	incf	btemp+1,f
  1199  1010  1903               	btfsc	3,2
  1200  1011  0AFE               	incf	btemp,f
  1201  1012  2804               	goto	init_ram0
  1202                           
  1203                           	psect	cstackBANK3
  1204  01D9                     __pcstackBANK3:
  1205  01D9                     main@RTC_Date:
  1206                           
  1207                           ; 14 bytes @ 0x0
  1208  01D9                     	ds	14
  1209                           
  1210                           	psect	cstackCOMMON
  1211  0070                     __pcstackCOMMON:
  1212  0070                     ?_Dio_Init:
  1213  0070                     ?_I2C_Master_Init:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_I2C_Start:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_I2C_Write:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_I2C_Stop:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_I2C_Read:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_LCD_SendCMD:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_RTC_DS1307_Init:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_RTC_DS1307_Read:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_RTC_DS1307_Get_Date:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_RTC_DS1307_DOW_To_String:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_Adc_Init:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_Button_Init:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_Button_Read:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_E2PROM_24C04_Init:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_I2C_Wait:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_I2C_NACK:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_LCD_Init:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_LCD_DisChar:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_LCD_Display_Current_Event:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_Check_Password:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_ISR:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ??_ISR:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_Clear_Events:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_UART_TX_Init:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_UART_Write:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_UART_WriteStr:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_UART_Send_Current_Event:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_main:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_RTC_DS1307_BCD_To_Decimal_MSB:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_RTC_DS1307_BCD_To_Decimal_LSB:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303                           
  1304                           ; 1 bytes @ 0x0
  1305  0070                     	ds	3
  1306  0073                     ??_Dio_Init:
  1307  0073                     ??_I2C_Master_Init:	
  1308                           ; 1 bytes @ 0x3
  1309                           
  1310  0073                     ??_I2C_Start:	
  1311                           ; 1 bytes @ 0x3
  1312                           
  1313  0073                     ??_I2C_Write:	
  1314                           ; 1 bytes @ 0x3
  1315                           
  1316  0073                     ??_I2C_Stop:	
  1317                           ; 1 bytes @ 0x3
  1318                           
  1319  0073                     ??_I2C_Read:	
  1320                           ; 1 bytes @ 0x3
  1321                           
  1322  0073                     ??_LCD_SendCMD:	
  1323                           ; 1 bytes @ 0x3
  1324                           
  1325  0073                     ??_RTC_DS1307_Init:	
  1326                           ; 1 bytes @ 0x3
  1327                           
  1328  0073                     ??_Adc_Init:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331  0073                     ??_Button_Init:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334  0073                     ??_Button_Read:	
  1335                           ; 1 bytes @ 0x3
  1336                           
  1337  0073                     ??_E2PROM_24C04_Init:	
  1338                           ; 1 bytes @ 0x3
  1339                           
  1340  0073                     ??_I2C_Wait:	
  1341                           ; 1 bytes @ 0x3
  1342                           
  1343  0073                     ??_I2C_NACK:	
  1344                           ; 1 bytes @ 0x3
  1345                           
  1346  0073                     ??_LCD_DisChar:	
  1347                           ; 1 bytes @ 0x3
  1348                           
  1349  0073                     ??_UART_TX_Init:	
  1350                           ; 1 bytes @ 0x3
  1351                           
  1352  0073                     ??_UART_Write:	
  1353                           ; 1 bytes @ 0x3
  1354                           
  1355  0073                     ??_RTC_DS1307_BCD_To_Decimal_MSB:	
  1356                           ; 1 bytes @ 0x3
  1357                           
  1358  0073                     ??_RTC_DS1307_BCD_To_Decimal_LSB:	
  1359                           ; 1 bytes @ 0x3
  1360                           
  1361  0073                     ??___lmul:	
  1362                           ; 1 bytes @ 0x3
  1363                           
  1364  0073                     ?___bmul:	
  1365                           ; 1 bytes @ 0x3
  1366                           
  1367  0073                     ?_Adc_Read:	
  1368                           ; 1 bytes @ 0x3
  1369                           
  1370  0073                     ?___awdiv:	
  1371                           ; 2 bytes @ 0x3
  1372                           
  1373  0073                     ?___awmod:	
  1374                           ; 2 bytes @ 0x3
  1375                           
  1376  0073                     I2C_Write@Data:	
  1377                           ; 2 bytes @ 0x3
  1378                           
  1379  0073                     I2C_Read@Data:	
  1380                           ; 1 bytes @ 0x3
  1381                           
  1382  0073                     UART_Write@data:	
  1383                           ; 1 bytes @ 0x3
  1384                           
  1385  0073                     RTC_DS1307_BCD_To_Decimal_LSB@BCD_Number:	
  1386                           ; 1 bytes @ 0x3
  1387                           
  1388  0073                     ___bmul@multiplicand:	
  1389                           ; 1 bytes @ 0x3
  1390                           
  1391  0073                     ___awdiv@divisor:	
  1392                           ; 1 bytes @ 0x3
  1393                           
  1394  0073                     ___awmod@divisor:	
  1395                           ; 2 bytes @ 0x3
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x3
  1399  0073                     	ds	1
  1400  0074                     ??_RTC_DS1307_Read:
  1401  0074                     ?_RTC_DS1307_Write:	
  1402                           ; 1 bytes @ 0x4
  1403                           
  1404  0074                     ?_E2PROM_24C04_Write:	
  1405                           ; 1 bytes @ 0x4
  1406                           
  1407  0074                     ?_E2PROM_24C04_Read:	
  1408                           ; 1 bytes @ 0x4
  1409                           
  1410  0074                     ??_UART_WriteStr:	
  1411                           ; 1 bytes @ 0x4
  1412                           
  1413  0074                     ??___bmul:	
  1414                           ; 1 bytes @ 0x4
  1415                           
  1416  0074                     E2PROM_24C04_Write@word_Address:	
  1417                           ; 1 bytes @ 0x4
  1418                           
  1419  0074                     E2PROM_24C04_Read@word_Address:	
  1420                           ; 1 bytes @ 0x4
  1421                           
  1422  0074                     RTC_DS1307_Write@Data:	
  1423                           ; 1 bytes @ 0x4
  1424                           
  1425  0074                     RTC_DS1307_Read@word_Address:	
  1426                           ; 1 bytes @ 0x4
  1427                           
  1428  0074                     RTC_DS1307_BCD_To_Decimal_MSB@BCD_Number:	
  1429                           ; 1 bytes @ 0x4
  1430                           
  1431  0074                     RTC_DS1307_BCD_To_Decimal_LSB@temp:	
  1432                           ; 1 bytes @ 0x4
  1433                           
  1434  0074                     ___bmul@product:	
  1435                           ; 1 bytes @ 0x4
  1436                           
  1437  0074                     ___lmul@product:	
  1438                           ; 1 bytes @ 0x4
  1439                           
  1440                           
  1441                           ; 4 bytes @ 0x4
  1442  0074                     	ds	1
  1443  0075                     ??_RTC_DS1307_Write:
  1444  0075                     ??_Adc_Read:	
  1445                           ; 1 bytes @ 0x5
  1446                           
  1447  0075                     ??_E2PROM_24C04_Read:	
  1448                           ; 1 bytes @ 0x5
  1449                           
  1450  0075                     Button_Read@Button:	
  1451                           ; 1 bytes @ 0x5
  1452                           
  1453  0075                     E2PROM_24C04_Write@Data:	
  1454                           ; 1 bytes @ 0x5
  1455                           
  1456  0075                     E2PROM_24C04_Read@Device_Address:	
  1457                           ; 1 bytes @ 0x5
  1458                           
  1459  0075                     LCD_SendCMD@COMMAND:	
  1460                           ; 1 bytes @ 0x5
  1461                           
  1462  0075                     LCD_DisChar@DATA:	
  1463                           ; 1 bytes @ 0x5
  1464                           
  1465  0075                     UART_WriteStr@String:	
  1466                           ; 1 bytes @ 0x5
  1467                           
  1468  0075                     RTC_DS1307_Write@word_Address:	
  1469                           ; 1 bytes @ 0x5
  1470                           
  1471  0075                     RTC_DS1307_Read@temp_Device_Address:	
  1472                           ; 1 bytes @ 0x5
  1473                           
  1474  0075                     RTC_DS1307_BCD_To_Decimal_MSB@temp:	
  1475                           ; 1 bytes @ 0x5
  1476                           
  1477  0075                     ___bmul@multiplier:	
  1478                           ; 1 bytes @ 0x5
  1479                           
  1480  0075                     Adc_Read@adc_value:	
  1481                           ; 1 bytes @ 0x5
  1482                           
  1483  0075                     ___awdiv@dividend:	
  1484                           ; 2 bytes @ 0x5
  1485                           
  1486  0075                     ___awmod@dividend:	
  1487                           ; 2 bytes @ 0x5
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x5
  1491  0075                     	ds	1
  1492  0076                     ??_RTC_DS1307_DOW_To_String:
  1493  0076                     ??_E2PROM_24C04_Write:	
  1494                           ; 1 bytes @ 0x6
  1495                           
  1496  0076                     ??_LCD_Init:	
  1497                           ; 1 bytes @ 0x6
  1498                           
  1499  0076                     ?_LCD_DisStr:	
  1500                           ; 1 bytes @ 0x6
  1501                           
  1502  0076                     ?_LCD_GotoRC:	
  1503                           ; 1 bytes @ 0x6
  1504                           
  1505  0076                     E2PROM_24C04_Write@Device_Address:	
  1506                           ; 1 bytes @ 0x6
  1507                           
  1508  0076                     E2PROM_24C04_Read@temp:	
  1509                           ; 1 bytes @ 0x6
  1510                           
  1511  0076                     LCD_GotoRC@column:	
  1512                           ; 1 bytes @ 0x6
  1513                           
  1514  0076                     UART_WriteStr@i:	
  1515                           ; 1 bytes @ 0x6
  1516                           
  1517  0076                     RTC_DS1307_DOW_To_String@Day_Of_The_Week_Integer:	
  1518                           ; 1 bytes @ 0x6
  1519                           
  1520  0076                     LCD_DisStr@str:	
  1521                           ; 1 bytes @ 0x6
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x6
  1525  0076                     	ds	1
  1526  0077                     ??_RTC_DS1307_Get_Date:
  1527  0077                     ??_LCD_2DigitIntToStr:	
  1528                           ; 1 bytes @ 0x7
  1529                           
  1530  0077                     ??_LCD_GotoRC:	
  1531                           ; 1 bytes @ 0x7
  1532                           
  1533  0077                     ??_Check_Password:	
  1534                           ; 1 bytes @ 0x7
  1535                           
  1536  0077                     ??_Save_Event_to_24c04:	
  1537                           ; 1 bytes @ 0x7
  1538                           
  1539  0077                     ??_Clear_Events:	
  1540                           ; 1 bytes @ 0x7
  1541                           
  1542  0077                     ??_UART_Send_Current_Event:	
  1543                           ; 1 bytes @ 0x7
  1544                           
  1545  0077                     ??___awdiv:	
  1546                           ; 1 bytes @ 0x7
  1547                           
  1548  0077                     ??___awmod:	
  1549                           ; 1 bytes @ 0x7
  1550                           
  1551  0077                     LCD_2DigitIntToStr@Integer:	
  1552                           ; 1 bytes @ 0x7
  1553                           
  1554  0077                     LCD_GotoRC@row:	
  1555                           ; 1 bytes @ 0x7
  1556                           
  1557  0077                     Clear_Events@i:	
  1558                           ; 1 bytes @ 0x7
  1559                           
  1560  0077                     UART_Send_Current_Event@Current_Event:	
  1561                           ; 1 bytes @ 0x7
  1562                           
  1563                           
  1564                           ; 1 bytes @ 0x7
  1565  0077                     	ds	1
  1566  0078                     ??_LCD_DisStrRC:
  1567  0078                     ??_LCD_Display_Current_Event:	
  1568                           ; 1 bytes @ 0x8
  1569                           
  1570                           
  1571                           	psect	cstackBANK0
  1572  0020                     __pcstackBANK0:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575  0020                     ??_LCD_DisStr:
  1576  0020                     ?_Save_Event_to_24c04:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0020                     ?___lmul:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0020                     Check_Password@temp:	
  1583                           ; 4 bytes @ 0x0
  1584                           
  1585  0020                     RTC_DS1307_Get_Date@Date_Structure:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0020                     ___awdiv@counter:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0020                     ___awmod@counter:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0020                     ___lmul@multiplier:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0020                     Save_Event_to_24c04@RTC_Date:	
  1598                           ; 4 bytes @ 0x0
  1599                           
  1600                           
  1601                           ; 14 bytes @ 0x0
  1602  0020                     	ds	1
  1603  0021                     Check_Password@i:
  1604  0021                     ___awdiv@sign:	
  1605                           ; 1 bytes @ 0x1
  1606                           
  1607  0021                     ___awmod@sign:	
  1608                           ; 1 bytes @ 0x1
  1609                           
  1610  0021                     RTC_DS1307_Get_Date@temp:	
  1611                           ; 1 bytes @ 0x1
  1612                           
  1613                           
  1614                           ; 8 bytes @ 0x1
  1615  0021                     	ds	1
  1616  0022                     LCD_DisStr@i:
  1617  0022                     ___awdiv@quotient:	
  1618                           ; 1 bytes @ 0x2
  1619                           
  1620                           
  1621                           ; 2 bytes @ 0x2
  1622  0022                     	ds	1
  1623  0023                     ?_LCD_DisStrRC:
  1624  0023                     LCD_DisStrRC@str:	
  1625                           ; 1 bytes @ 0x3
  1626                           
  1627                           
  1628                           ; 2 bytes @ 0x3
  1629  0023                     	ds	1
  1630  0024                     ?_LCD_2DigitIntToStr:
  1631  0024                     LCD_2DigitIntToStr@str:	
  1632                           ; 1 bytes @ 0x4
  1633                           
  1634  0024                     ___lmul@multiplicand:	
  1635                           ; 1 bytes @ 0x4
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0x4
  1639  0024                     	ds	1
  1640  0025                     LCD_DisStrRC@row:
  1641                           
  1642                           ; 1 bytes @ 0x5
  1643  0025                     	ds	1
  1644  0026                     LCD_DisStrRC@column:
  1645                           
  1646                           ; 1 bytes @ 0x6
  1647  0026                     	ds	1
  1648  0027                     LCD_Display_Current_Event@Current_Event:
  1649                           
  1650                           ; 1 bytes @ 0x7
  1651  0027                     	ds	1
  1652  0028                     ?___lldiv:
  1653  0028                     ___lldiv@divisor:	
  1654                           ; 4 bytes @ 0x8
  1655                           
  1656                           
  1657                           ; 4 bytes @ 0x8
  1658  0028                     	ds	4
  1659  002C                     ___lldiv@dividend:
  1660                           
  1661                           ; 4 bytes @ 0xC
  1662  002C                     	ds	2
  1663  002E                     Save_Event_to_24c04@Event:
  1664                           
  1665                           ; 1 bytes @ 0xE
  1666  002E                     	ds	1
  1667  002F                     Save_Event_to_24c04@Speed:
  1668                           
  1669                           ; 1 bytes @ 0xF
  1670  002F                     	ds	1
  1671  0030                     ??___lldiv:
  1672  0030                     Save_Event_to_24c04@Memory_Offset:	
  1673                           ; 1 bytes @ 0x10
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0x10
  1677  0030                     	ds	1
  1678  0031                     ___lldiv@quotient:
  1679                           
  1680                           ; 4 bytes @ 0x11
  1681  0031                     	ds	4
  1682  0035                     ___lldiv@counter:
  1683                           
  1684                           ; 1 bytes @ 0x15
  1685  0035                     	ds	1
  1686  0036                     ??_main:
  1687                           
  1688                           ; 1 bytes @ 0x16
  1689  0036                     	ds	4
  1690  003A                     main@Password_Trails:
  1691                           
  1692                           ; 1 bytes @ 0x1A
  1693  003A                     	ds	1
  1694  003B                     main@Button_4_counter:
  1695                           
  1696                           ; 2 bytes @ 0x1B
  1697  003B                     	ds	2
  1698  003D                     main@Button_5_counter:
  1699                           
  1700                           ; 2 bytes @ 0x1D
  1701  003D                     	ds	2
  1702  003F                     main@Adc_Str:
  1703                           
  1704                           ; 5 bytes @ 0x1F
  1705  003F                     	ds	5
  1706  0044                     main@Adc_Return_Value:
  1707                           
  1708                           ; 4 bytes @ 0x24
  1709  0044                     	ds	4
  1710  0048                     main@Car_Speed:
  1711                           
  1712                           ; 4 bytes @ 0x28
  1713  0048                     	ds	4
  1714  004C                     main@Pass_Offset:
  1715                           
  1716                           ; 1 bytes @ 0x2C
  1717  004C                     	ds	1
  1718  004D                     main@Download_Log_Counter:
  1719                           
  1720                           ; 1 bytes @ 0x2D
  1721  004D                     	ds	1
  1722  004E                     main@View_Log_Counter:
  1723                           
  1724                           ; 1 bytes @ 0x2E
  1725  004E                     	ds	1
  1726  004F                     main@temp_:
  1727                           
  1728                           ; 1 bytes @ 0x2F
  1729  004F                     	ds	1
  1730  0050                     main@Memory_Offset:
  1731                           
  1732                           ; 1 bytes @ 0x30
  1733  0050                     	ds	1
  1734                           
  1735                           	psect	maintext
  1736  0C82                     __pmaintext:	
  1737 ;;
  1738 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1739 ;;
  1740 ;; *************** function _main *****************
  1741 ;; Defined at:
  1742 ;;		line 178 in file "main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  RTC_Date       14    0[BANK3 ] struct .
  1747 ;;  Adc_Str         5   31[BANK0 ] unsigned char [5]
  1748 ;;  Car_Speed       4   40[BANK0 ] unsigned long 
  1749 ;;  Adc_Return_V    4   36[BANK0 ] unsigned long 
  1750 ;;  Button_5_cou    2   29[BANK0 ] unsigned int 
  1751 ;;  Button_4_cou    2   27[BANK0 ] unsigned int 
  1752 ;;  Memory_Offse    1   48[BANK0 ] unsigned char 
  1753 ;;  temp_           1   47[BANK0 ] unsigned char 
  1754 ;;  View_Log_Cou    1   46[BANK0 ] char 
  1755 ;;  Download_Log    1   45[BANK0 ] unsigned char 
  1756 ;;  Pass_Offset     1   44[BANK0 ] unsigned char 
  1757 ;;  Password_Tra    1   26[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : B00/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0      23       0      14       0
  1769 ;;      Temps:          0       4       0       0       0
  1770 ;;      Totals:         0      27       0      14       0
  1771 ;;Total ram usage:       41 bytes
  1772 ;; Hardware stack levels required when called:    6
  1773 ;; This function calls:
  1774 ;;		_Adc_Init
  1775 ;;		_Adc_Read
  1776 ;;		_Button_Init
  1777 ;;		_Button_Read
  1778 ;;		_Check_Password
  1779 ;;		_Clear_Events
  1780 ;;		_Dio_Init
  1781 ;;		_E2PROM_24C04_Init
  1782 ;;		_E2PROM_24C04_Read
  1783 ;;		_E2PROM_24C04_Write
  1784 ;;		_LCD_2DigitIntToStr
  1785 ;;		_LCD_DisChar
  1786 ;;		_LCD_DisStrRC
  1787 ;;		_LCD_Display_Current_Event
  1788 ;;		_LCD_GotoRC
  1789 ;;		_LCD_Init
  1790 ;;		_LCD_SendCMD
  1791 ;;		_RTC_DS1307_Get_Date
  1792 ;;		_RTC_DS1307_Init
  1793 ;;		_RTC_DS1307_Read
  1794 ;;		_RTC_DS1307_Write
  1795 ;;		_Save_Event_to_24c04
  1796 ;;		_UART_Send_Current_Event
  1797 ;;		_UART_TX_Init
  1798 ;;		_UART_Write
  1799 ;;		___awdiv
  1800 ;;		___awmod
  1801 ;;		___bmul
  1802 ;;		___lldiv
  1803 ;;		___lmul
  1804 ;; This function is called by:
  1805 ;;		Startup code after reset
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _main
  1811  0C82                     _main:
  1812  0C82                     l4450:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1815                           
  1816                           
  1817                           ;main.c: 180:     uint32_t Adc_Return_Value;;main.c: 181:     uint32_t Car_Speed;;main.c
      +                          : 182:     uint8_t Adc_Str[5];;main.c: 183:     RTC_Date_Typedef RTC_Date;;main.c: 184: 
      +                              uint8_t Pass_Offset = 0;
  1818  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0C84  01CC               	clrf	main@Pass_Offset
  1821  0C85                     l4452:
  1822                           
  1823                           ;main.c: 185:     uint8_t Password_Trails = 3;
  1824  0C85  3003               	movlw	3
  1825  0C86  00FF               	movwf	btemp+1
  1826  0C87  087F               	movf	btemp+1,w
  1827  0C88  00BA               	movwf	main@Password_Trails
  1828  0C89                     l4454:
  1829                           
  1830                           ;main.c: 186:     uint16_t Button_4_counter = 0;
  1831  0C89  01BB               	clrf	main@Button_4_counter
  1832  0C8A  01BC               	clrf	main@Button_4_counter+1
  1833  0C8B                     l4456:
  1834                           
  1835                           ;main.c: 187:     uint16_t Button_5_counter = 0;
  1836  0C8B  01BD               	clrf	main@Button_5_counter
  1837  0C8C  01BE               	clrf	main@Button_5_counter+1
  1838  0C8D                     l4458:
  1839                           
  1840                           ;main.c: 188:     uint8_t Memory_Offset = 0;
  1841  0C8D  01D0               	clrf	main@Memory_Offset
  1842  0C8E                     l4460:
  1843                           
  1844                           ;main.c: 189:     int8_t View_Log_Counter = 0;
  1845  0C8E  01CE               	clrf	main@View_Log_Counter
  1846  0C8F                     l4462:
  1847                           
  1848                           ;main.c: 190:     uint8_t Download_Log_Counter = 0;
  1849  0C8F  01CD               	clrf	main@Download_Log_Counter
  1850  0C90                     l4464:
  1851                           
  1852                           ;main.c: 192:     Adc_Init();
  1853  0C90  160A  158A  274D  120A  158A  	fcall	_Adc_Init
  1854  0C95                     l4466:
  1855                           
  1856                           ;main.c: 193:     Dio_Init();
  1857  0C95  160A  158A  27BF  120A  158A  	fcall	_Dio_Init
  1858  0C9A                     l4468:
  1859                           
  1860                           ;main.c: 194:     Button_Init();
  1861  0C9A  160A  158A  2719  120A  158A  	fcall	_Button_Init
  1862  0C9F                     l4470:
  1863                           
  1864                           ;main.c: 195:     E2PROM_24C04_Init();
  1865  0C9F  160A  158A  26F2  120A  158A  	fcall	_E2PROM_24C04_Init
  1866  0CA4                     l4472:
  1867                           
  1868                           ;main.c: 196:     LCD_Init();
  1869  0CA4  160A  118A  2094  120A  158A  	fcall	_LCD_Init
  1870  0CA9                     l4474:
  1871                           
  1872                           ;main.c: 197:     RTC_DS1307_Init();
  1873  0CA9  160A  158A  26F8  120A  158A  	fcall	_RTC_DS1307_Init
  1874  0CAE                     l4476:
  1875                           
  1876                           ;main.c: 198:     UART_TX_Init();
  1877  0CAE  160A  158A  275B  120A  158A  	fcall	_UART_TX_Init
  1878  0CB3                     l4478:
  1879                           
  1880                           ;main.c: 202:     TMR1 = 65536 - 50000;
  1881  0CB3  303C               	movlw	60
  1882  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0CB6  008F               	movwf	15	;volatile
  1885  0CB7  30B0               	movlw	176
  1886  0CB8  008E               	movwf	14	;volatile
  1887  0CB9                     l4480:
  1888                           
  1889                           ;main.c: 204:     TMR1CS = 0;
  1890  0CB9  1090               	bcf	16,1	;volatile
  1891  0CBA                     l4482:
  1892                           
  1893                           ;main.c: 206:     T1CKPS0 = 1;
  1894  0CBA  1610               	bsf	16,4	;volatile
  1895  0CBB                     l4484:
  1896                           
  1897                           ;main.c: 207:     T1CKPS1 = 1;
  1898  0CBB  1690               	bsf	16,5	;volatile
  1899  0CBC                     l4486:
  1900                           
  1901                           ;main.c: 209:     TMR1ON = 0;
  1902  0CBC  1010               	bcf	16,0	;volatile
  1903  0CBD                     l4488:
  1904                           
  1905                           ;main.c: 211:     TMR1IE = 1;
  1906  0CBD  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0CBE  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0CBF  140C               	bsf	12,0	;volatile
  1909  0CC0                     l4490:
  1910                           
  1911                           ;main.c: 212:     TMR1IF = 0;
  1912  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0CC2  100C               	bcf	12,0	;volatile
  1915  0CC3                     l4492:
  1916                           
  1917                           ;main.c: 213:     PEIE = 1;
  1918  0CC3  170B               	bsf	11,6	;volatile
  1919  0CC4                     l4494:
  1920                           
  1921                           ;main.c: 214:     GIE = 1;
  1922  0CC4  178B               	bsf	11,7	;volatile
  1923  0CC5                     l4496:
  1924                           
  1925                           ;main.c: 216:     if (E2PROM_24C04_Read(0xA0, 0x00) != 0xAA) {
  1926  0CC5  01F4               	clrf	E2PROM_24C04_Read@word_Address
  1927  0CC6  30A0               	movlw	160
  1928  0CC7  160A  118A  21A8  120A  158A  	fcall	_E2PROM_24C04_Read
  1929  0CCC  3AAA               	xorlw	170
  1930  0CCD  1903               	skipnz
  1931  0CCE  2CD0               	goto	u3261
  1932  0CCF  2CD1               	goto	u3260
  1933  0CD0                     u3261:
  1934  0CD0  2D1C               	goto	l365
  1935  0CD1                     u3260:
  1936  0CD1                     l4498:
  1937                           
  1938                           ;main.c: 217:         E2PROM_24C04_Write(0xA0, 0x05, Embedded_Password[0]);
  1939  0CD1  3005               	movlw	5
  1940  0CD2  00FF               	movwf	btemp+1
  1941  0CD3  087F               	movf	btemp+1,w
  1942  0CD4  00F4               	movwf	E2PROM_24C04_Write@word_Address
  1943  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0CD7  0820               	movf	_Embedded_Password^(0+128),w
  1946  0CD8  00FF               	movwf	btemp+1
  1947  0CD9  087F               	movf	btemp+1,w
  1948  0CDA  00F5               	movwf	E2PROM_24C04_Write@Data
  1949  0CDB  30A0               	movlw	160
  1950  0CDC  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  1951                           
  1952                           ;main.c: 218:         E2PROM_24C04_Write(0xA0, 0x06, Embedded_Password[1]);
  1953  0CE1  3006               	movlw	6
  1954  0CE2  00FF               	movwf	btemp+1
  1955  0CE3  087F               	movf	btemp+1,w
  1956  0CE4  00F4               	movwf	E2PROM_24C04_Write@word_Address
  1957  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0CE7  0821               	movf	(_Embedded_Password^(0+128)+1),w
  1960  0CE8  00FF               	movwf	btemp+1
  1961  0CE9  087F               	movf	btemp+1,w
  1962  0CEA  00F5               	movwf	E2PROM_24C04_Write@Data
  1963  0CEB  30A0               	movlw	160
  1964  0CEC  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  1965                           
  1966                           ;main.c: 219:         E2PROM_24C04_Write(0xA0, 0x07, Embedded_Password[2]);
  1967  0CF1  3007               	movlw	7
  1968  0CF2  00FF               	movwf	btemp+1
  1969  0CF3  087F               	movf	btemp+1,w
  1970  0CF4  00F4               	movwf	E2PROM_24C04_Write@word_Address
  1971  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0CF7  0822               	movf	(_Embedded_Password^(0+128)+2),w
  1974  0CF8  00FF               	movwf	btemp+1
  1975  0CF9  087F               	movf	btemp+1,w
  1976  0CFA  00F5               	movwf	E2PROM_24C04_Write@Data
  1977  0CFB  30A0               	movlw	160
  1978  0CFC  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  1979                           
  1980                           ;main.c: 220:         E2PROM_24C04_Write(0xA0, 0x08, Embedded_Password[3]);
  1981  0D01  3008               	movlw	8
  1982  0D02  00FF               	movwf	btemp+1
  1983  0D03  087F               	movf	btemp+1,w
  1984  0D04  00F4               	movwf	E2PROM_24C04_Write@word_Address
  1985  0D05  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0D06  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0D07  0823               	movf	(_Embedded_Password^(0+128)+3),w
  1988  0D08  00FF               	movwf	btemp+1
  1989  0D09  087F               	movf	btemp+1,w
  1990  0D0A  00F5               	movwf	E2PROM_24C04_Write@Data
  1991  0D0B  30A0               	movlw	160
  1992  0D0C  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  1993                           
  1994                           ;main.c: 221:         E2PROM_24C04_Write(0xA0, 0x00, 0xAA);
  1995  0D11  01F4               	clrf	E2PROM_24C04_Write@word_Address
  1996  0D12  30AA               	movlw	170
  1997  0D13  00FF               	movwf	btemp+1
  1998  0D14  087F               	movf	btemp+1,w
  1999  0D15  00F5               	movwf	E2PROM_24C04_Write@Data
  2000  0D16  30A0               	movlw	160
  2001  0D17  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2002  0D1C                     l365:	
  2003                           ;main.c: 222:     }
  2004                           
  2005                           
  2006                           ;main.c: 226:     uint8_t temp_;;main.c: 227:     temp_ = RTC_DS1307_Read(0x02);
  2007  0D1C  3002               	movlw	2
  2008  0D1D  160A  118A  20EE  120A  158A  	fcall	_RTC_DS1307_Read
  2009  0D22  00FF               	movwf	btemp+1
  2010  0D23  087F               	movf	btemp+1,w
  2011  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0D26  00CF               	movwf	main@temp_
  2014  0D27                     l4500:
  2015                           
  2016                           ;main.c: 228:     temp_ &= ~0b01000000;
  2017  0D27  30BF               	movlw	191
  2018  0D28  00FF               	movwf	btemp+1
  2019  0D29  087F               	movf	btemp+1,w
  2020  0D2A  05CF               	andwf	main@temp_,f
  2021  0D2B                     l4502:
  2022                           
  2023                           ;main.c: 229:     RTC_DS1307_Write(0x02, temp_);
  2024  0D2B  084F               	movf	main@temp_,w
  2025  0D2C  00FF               	movwf	btemp+1
  2026  0D2D  087F               	movf	btemp+1,w
  2027  0D2E  00F4               	movwf	RTC_DS1307_Write@Data
  2028  0D2F  3002               	movlw	2
  2029  0D30  160A  118A  20B2  120A  158A  	fcall	_RTC_DS1307_Write
  2030  0D35                     l4504:
  2031                           
  2032                           ;main.c: 231:     if (E2PROM_24C04_Read(0xA0, 0x02) != 0xAA) {
  2033  0D35  3002               	movlw	2
  2034  0D36  00FF               	movwf	btemp+1
  2035  0D37  087F               	movf	btemp+1,w
  2036  0D38  00F4               	movwf	E2PROM_24C04_Read@word_Address
  2037  0D39  30A0               	movlw	160
  2038  0D3A  160A  118A  21A8  120A  158A  	fcall	_E2PROM_24C04_Read
  2039  0D3F  3AAA               	xorlw	170
  2040  0D40  1903               	skipnz
  2041  0D41  2D43               	goto	u3271
  2042  0D42  2D44               	goto	u3270
  2043  0D43                     u3271:
  2044  0D43  2D5B               	goto	l4510
  2045  0D44                     u3270:
  2046  0D44                     l4506:
  2047                           
  2048                           ;main.c: 232:         E2PROM_24C04_Write(0xA0, 0x01, 0x00);
  2049  0D44  01F4               	clrf	E2PROM_24C04_Write@word_Address
  2050  0D45  0AF4               	incf	E2PROM_24C04_Write@word_Address,f
  2051  0D46  01F5               	clrf	E2PROM_24C04_Write@Data
  2052  0D47  30A0               	movlw	160
  2053  0D48  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2054  0D4D                     l4508:
  2055                           
  2056                           ;main.c: 233:         E2PROM_24C04_Write(0xA0, 0x02, 0xAA);
  2057  0D4D  3002               	movlw	2
  2058  0D4E  00FF               	movwf	btemp+1
  2059  0D4F  087F               	movf	btemp+1,w
  2060  0D50  00F4               	movwf	E2PROM_24C04_Write@word_Address
  2061  0D51  30AA               	movlw	170
  2062  0D52  00FF               	movwf	btemp+1
  2063  0D53  087F               	movf	btemp+1,w
  2064  0D54  00F5               	movwf	E2PROM_24C04_Write@Data
  2065  0D55  30A0               	movlw	160
  2066  0D56  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2067  0D5B                     l4510:
  2068                           
  2069                           ;main.c: 236:     Memory_Offset = E2PROM_24C04_Read(0xA0, 0x01);
  2070  0D5B  01F4               	clrf	E2PROM_24C04_Read@word_Address
  2071  0D5C  0AF4               	incf	E2PROM_24C04_Read@word_Address,f
  2072  0D5D  30A0               	movlw	160
  2073  0D5E  160A  118A  21A8  120A  158A  	fcall	_E2PROM_24C04_Read
  2074  0D63  00FF               	movwf	btemp+1
  2075  0D64  087F               	movf	btemp+1,w
  2076  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0D67  00D0               	movwf	main@Memory_Offset
  2079  0D68                     l367:	
  2080                           ;main.c: 238:     while (1) {
  2081                           
  2082                           
  2083                           ;main.c: 241:         if (Button_Read(RB0) == 0) {
  2084  0D68  3000               	movlw	0
  2085  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0D6B  1806               	btfsc	6,0	;volatile
  2088  0D6C  3001               	movlw	1
  2089  0D6D  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2090  0D72  3A00               	xorlw	0
  2091  0D73  1D03               	skipz
  2092  0D74  2D76               	goto	u3281
  2093  0D75  2D77               	goto	u3280
  2094  0D76                     u3281:
  2095  0D76  2E3C               	goto	l4536
  2096  0D77                     u3280:
  2097  0D77                     l4514:
  2098  0D77  3000               	movlw	0
  2099  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0D7A  1806               	btfsc	6,0	;volatile
  2102  0D7B  3001               	movlw	1
  2103  0D7C  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2104  0D81  3A00               	xorlw	0
  2105  0D82  1903               	skipnz
  2106  0D83  2D85               	goto	u3291
  2107  0D84  2D86               	goto	u3290
  2108  0D85                     u3291:
  2109  0D85  2D77               	goto	l4514
  2110  0D86                     u3290:
  2111  0D86                     l4516:
  2112                           
  2113                           ;main.c: 243:             Current_Event = 8;
  2114  0D86  3008               	movlw	8
  2115  0D87  00FF               	movwf	btemp+1
  2116  0D88  087F               	movf	btemp+1,w
  2117  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0D8B  00D3               	movwf	_Current_Event
  2120  0D8C                     l4518:
  2121                           
  2122                           ;main.c: 245:             Adc_Return_Value = Adc_Read();
  2123  0D8C  160A  158A  27AC  120A  158A  	fcall	_Adc_Read
  2124  0D91  0873               	movf	?_Adc_Read,w
  2125  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0D94  00C4               	movwf	main@Adc_Return_Value
  2128  0D95  0874               	movf	?_Adc_Read+1,w
  2129  0D96  00C5               	movwf	main@Adc_Return_Value+1
  2130  0D97  01C6               	clrf	main@Adc_Return_Value+2
  2131  0D98  01C7               	clrf	main@Adc_Return_Value+3
  2132  0D99                     l4520:
  2133                           
  2134                           ;main.c: 246:             Car_Speed = (Adc_Return_Value * 99) / 1023;
  2135  0D99  3000               	movlw	0
  2136  0D9A  00AB               	movwf	___lldiv@divisor+3
  2137  0D9B  3000               	movlw	0
  2138  0D9C  00AA               	movwf	___lldiv@divisor+2
  2139  0D9D  3003               	movlw	3
  2140  0D9E  00A9               	movwf	___lldiv@divisor+1
  2141  0D9F  30FF               	movlw	255
  2142  0DA0  00A8               	movwf	___lldiv@divisor
  2143  0DA1  0847               	movf	main@Adc_Return_Value+3,w
  2144  0DA2  00A3               	movwf	___lmul@multiplier+3
  2145  0DA3  0846               	movf	main@Adc_Return_Value+2,w
  2146  0DA4  00A2               	movwf	___lmul@multiplier+2
  2147  0DA5  0845               	movf	main@Adc_Return_Value+1,w
  2148  0DA6  00A1               	movwf	___lmul@multiplier+1
  2149  0DA7  0844               	movf	main@Adc_Return_Value,w
  2150  0DA8  00A0               	movwf	___lmul@multiplier
  2151  0DA9  3000               	movlw	0
  2152  0DAA  00A7               	movwf	___lmul@multiplicand+3
  2153  0DAB  3000               	movlw	0
  2154  0DAC  00A6               	movwf	___lmul@multiplicand+2
  2155  0DAD  3000               	movlw	0
  2156  0DAE  00A5               	movwf	___lmul@multiplicand+1
  2157  0DAF  3063               	movlw	99
  2158  0DB0  00A4               	movwf	___lmul@multiplicand
  2159  0DB1  160A  118A  21DE  120A  158A  	fcall	___lmul
  2160  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0DB8  0823               	movf	?___lmul+3,w
  2163  0DB9  00AF               	movwf	___lldiv@dividend+3
  2164  0DBA  0822               	movf	?___lmul+2,w
  2165  0DBB  00AE               	movwf	___lldiv@dividend+2
  2166  0DBC  0821               	movf	?___lmul+1,w
  2167  0DBD  00AD               	movwf	___lldiv@dividend+1
  2168  0DBE  0820               	movf	?___lmul,w
  2169  0DBF  00AC               	movwf	___lldiv@dividend
  2170  0DC0  160A  118A  23EE  120A  158A  	fcall	___lldiv
  2171  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0DC7  082B               	movf	?___lldiv+3,w
  2174  0DC8  00CB               	movwf	main@Car_Speed+3
  2175  0DC9  082A               	movf	?___lldiv+2,w
  2176  0DCA  00CA               	movwf	main@Car_Speed+2
  2177  0DCB  0829               	movf	?___lldiv+1,w
  2178  0DCC  00C9               	movwf	main@Car_Speed+1
  2179  0DCD  0828               	movf	?___lldiv,w
  2180  0DCE  00C8               	movwf	main@Car_Speed
  2181  0DCF                     l4522:
  2182                           
  2183                           ;main.c: 247:             LCD_2DigitIntToStr(Car_Speed, Adc_Str);
  2184  0DCF  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2185  0DD0  00FF               	movwf	btemp+1
  2186  0DD1  087F               	movf	btemp+1,w
  2187  0DD2  00A4               	movwf	LCD_2DigitIntToStr@str
  2188  0DD3  0848               	movf	main@Car_Speed,w
  2189  0DD4  160A  118A  24BF  120A  158A  	fcall	_LCD_2DigitIntToStr
  2190  0DD9                     l4524:
  2191                           
  2192                           ;main.c: 248:             RTC_DS1307_Get_Date(&RTC_Date);
  2193  0DD9  30D9               	movlw	(low (main@RTC_Date| (0+256)))& (0+255)
  2194  0DDA  160A  118A  26DA  120A  158A  	fcall	_RTC_DS1307_Get_Date
  2195  0DDF                     l4526:
  2196                           
  2197                           ;main.c: 249:             Save_Event_to_24c04(RTC_Date, Current_Event, Adc_Str, Memory_O
      +                          ffset);
  2198  0DDF  3020               	movlw	Save_Event_to_24c04@RTC_Date& (0+255)
  2199  0DE0  0084               	movwf	4
  2200  0DE1  30D9               	movlw	low main@RTC_Date
  2201  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0DE4  00B6               	movwf	??_main
  2204  0DE5  0804               	movf	4,w
  2205  0DE6  00B7               	movwf	??_main+1
  2206  0DE7  300E               	movlw	14
  2207  0DE8  00B8               	movwf	??_main+2
  2208  0DE9                     u3300:
  2209  0DE9  0836               	movf	??_main,w
  2210  0DEA  0084               	movwf	4
  2211  0DEB  1783               	bsf	3,7	;select IRP bank3
  2212  0DEC  0800               	movf	0,w
  2213  0DED  00B9               	movwf	??_main+3
  2214  0DEE  0AB6               	incf	??_main,f
  2215  0DEF  0837               	movf	??_main+1,w
  2216  0DF0  0084               	movwf	4
  2217  0DF1  1383               	bcf	3,7	;select IRP bank0
  2218  0DF2  0839               	movf	??_main+3,w
  2219  0DF3  0080               	movwf	0
  2220  0DF4  0AB7               	incf	??_main+1,f
  2221  0DF5  0BB8               	decfsz	??_main+2,f
  2222  0DF6  2DE9               	goto	u3300
  2223  0DF7  0853               	movf	_Current_Event,w
  2224  0DF8  00FF               	movwf	btemp+1
  2225  0DF9  087F               	movf	btemp+1,w
  2226  0DFA  00AE               	movwf	Save_Event_to_24c04@Event
  2227  0DFB  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2228  0DFC  00FF               	movwf	btemp+1
  2229  0DFD  087F               	movf	btemp+1,w
  2230  0DFE  00AF               	movwf	Save_Event_to_24c04@Speed
  2231  0DFF  0850               	movf	main@Memory_Offset,w
  2232  0E00  00FF               	movwf	btemp+1
  2233  0E01  087F               	movf	btemp+1,w
  2234  0E02  00B0               	movwf	Save_Event_to_24c04@Memory_Offset
  2235  0E03  160A  118A  252B  120A  158A  	fcall	_Save_Event_to_24c04
  2236  0E08                     l4528:
  2237                           
  2238                           ;main.c: 250:             Memory_Offset += 16;
  2239  0E08  3010               	movlw	16
  2240  0E09  00FF               	movwf	btemp+1
  2241  0E0A  087F               	movf	btemp+1,w
  2242  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0E0D  07D0               	addwf	main@Memory_Offset,f
  2245  0E0E                     l4530:
  2246                           
  2247                           ;main.c: 251:             if (Memory_Offset / 16 > 10) {
  2248  0E0E  3010               	movlw	16
  2249  0E0F  00F3               	movwf	___awdiv@divisor
  2250  0E10  3000               	movlw	0
  2251  0E11  00F4               	movwf	___awdiv@divisor+1
  2252  0E12  0850               	movf	main@Memory_Offset,w
  2253  0E13  00B6               	movwf	??_main
  2254  0E14  01B7               	clrf	??_main+1
  2255  0E15  0836               	movf	??_main,w
  2256  0E16  00F5               	movwf	___awdiv@dividend
  2257  0E17  0837               	movf	??_main+1,w
  2258  0E18  00F6               	movwf	___awdiv@dividend+1
  2259  0E19  160A  118A  2456  120A  158A  	fcall	___awdiv
  2260  0E1E  0874               	movf	?___awdiv+1,w
  2261  0E1F  3A80               	xorlw	128
  2262  0E20  00FF               	movwf	btemp+1
  2263  0E21  3080               	movlw	128
  2264  0E22  027F               	subwf	btemp+1,w
  2265  0E23  1D03               	skipz
  2266  0E24  2E27               	goto	u3315
  2267  0E25  300B               	movlw	11
  2268  0E26  0273               	subwf	?___awdiv,w
  2269  0E27                     u3315:
  2270  0E27  1C03               	skipc
  2271  0E28  2E2A               	goto	u3311
  2272  0E29  2E2B               	goto	u3310
  2273  0E2A                     u3311:
  2274  0E2A  2E2E               	goto	l4534
  2275  0E2B                     u3310:
  2276  0E2B                     l4532:
  2277                           
  2278                           ;main.c: 252:                 Memory_Offset = 0;
  2279  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0E2D  01D0               	clrf	main@Memory_Offset
  2282  0E2E                     l4534:
  2283                           
  2284                           ;main.c: 255:             E2PROM_24C04_Write(0xA0, 0x01, Memory_Offset);
  2285  0E2E  01F4               	clrf	E2PROM_24C04_Write@word_Address
  2286  0E2F  0AF4               	incf	E2PROM_24C04_Write@word_Address,f
  2287  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0E32  0850               	movf	main@Memory_Offset,w
  2290  0E33  00FF               	movwf	btemp+1
  2291  0E34  087F               	movf	btemp+1,w
  2292  0E35  00F5               	movwf	E2PROM_24C04_Write@Data
  2293  0E36  30A0               	movlw	160
  2294  0E37  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2295  0E3C                     l4536:
  2296                           
  2297                           ;main.c: 258:         if (Button_Read(RB1) == 0) {
  2298  0E3C  3000               	movlw	0
  2299  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0E3F  1886               	btfsc	6,1	;volatile
  2302  0E40  3001               	movlw	1
  2303  0E41  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2304  0E46  3A00               	xorlw	0
  2305  0E47  1D03               	skipz
  2306  0E48  2E4A               	goto	u3321
  2307  0E49  2E4B               	goto	u3320
  2308  0E4A                     u3321:
  2309  0E4A  2F1A               	goto	l4566
  2310  0E4B                     u3320:
  2311  0E4B                     l4540:
  2312  0E4B  3000               	movlw	0
  2313  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0E4E  1886               	btfsc	6,1	;volatile
  2316  0E4F  3001               	movlw	1
  2317  0E50  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2318  0E55  3A00               	xorlw	0
  2319  0E56  1903               	skipnz
  2320  0E57  2E59               	goto	u3331
  2321  0E58  2E5A               	goto	u3330
  2322  0E59                     u3331:
  2323  0E59  2E4B               	goto	l4540
  2324  0E5A                     u3330:
  2325  0E5A                     l4542:
  2326                           
  2327                           ;main.c: 260:             Current_Event++;
  2328  0E5A  3001               	movlw	1
  2329  0E5B  00FF               	movwf	btemp+1
  2330  0E5C  087F               	movf	btemp+1,w
  2331  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0E5F  07D3               	addwf	_Current_Event,f
  2334  0E60                     l4544:
  2335                           
  2336                           ;main.c: 261:             if (Current_Event > 6) {
  2337  0E60  3007               	movlw	7
  2338  0E61  0253               	subwf	_Current_Event,w
  2339  0E62  1C03               	skipc
  2340  0E63  2E65               	goto	u3341
  2341  0E64  2E66               	goto	u3340
  2342  0E65                     u3341:
  2343  0E65  2E6A               	goto	l4548
  2344  0E66                     u3340:
  2345  0E66                     l4546:
  2346                           
  2347                           ;main.c: 262:                 Current_Event = 2;
  2348  0E66  3002               	movlw	2
  2349  0E67  00FF               	movwf	btemp+1
  2350  0E68  087F               	movf	btemp+1,w
  2351  0E69  00D3               	movwf	_Current_Event
  2352  0E6A                     l4548:
  2353                           
  2354                           ;main.c: 265:             Adc_Return_Value = Adc_Read();
  2355  0E6A  160A  158A  27AC  120A  158A  	fcall	_Adc_Read
  2356  0E6F  0873               	movf	?_Adc_Read,w
  2357  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0E72  00C4               	movwf	main@Adc_Return_Value
  2360  0E73  0874               	movf	?_Adc_Read+1,w
  2361  0E74  00C5               	movwf	main@Adc_Return_Value+1
  2362  0E75  01C6               	clrf	main@Adc_Return_Value+2
  2363  0E76  01C7               	clrf	main@Adc_Return_Value+3
  2364  0E77                     l4550:
  2365                           
  2366                           ;main.c: 266:             Car_Speed = (Adc_Return_Value * 99) / 1023;
  2367  0E77  3000               	movlw	0
  2368  0E78  00AB               	movwf	___lldiv@divisor+3
  2369  0E79  3000               	movlw	0
  2370  0E7A  00AA               	movwf	___lldiv@divisor+2
  2371  0E7B  3003               	movlw	3
  2372  0E7C  00A9               	movwf	___lldiv@divisor+1
  2373  0E7D  30FF               	movlw	255
  2374  0E7E  00A8               	movwf	___lldiv@divisor
  2375  0E7F  0847               	movf	main@Adc_Return_Value+3,w
  2376  0E80  00A3               	movwf	___lmul@multiplier+3
  2377  0E81  0846               	movf	main@Adc_Return_Value+2,w
  2378  0E82  00A2               	movwf	___lmul@multiplier+2
  2379  0E83  0845               	movf	main@Adc_Return_Value+1,w
  2380  0E84  00A1               	movwf	___lmul@multiplier+1
  2381  0E85  0844               	movf	main@Adc_Return_Value,w
  2382  0E86  00A0               	movwf	___lmul@multiplier
  2383  0E87  3000               	movlw	0
  2384  0E88  00A7               	movwf	___lmul@multiplicand+3
  2385  0E89  3000               	movlw	0
  2386  0E8A  00A6               	movwf	___lmul@multiplicand+2
  2387  0E8B  3000               	movlw	0
  2388  0E8C  00A5               	movwf	___lmul@multiplicand+1
  2389  0E8D  3063               	movlw	99
  2390  0E8E  00A4               	movwf	___lmul@multiplicand
  2391  0E8F  160A  118A  21DE  120A  158A  	fcall	___lmul
  2392  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0E96  0823               	movf	?___lmul+3,w
  2395  0E97  00AF               	movwf	___lldiv@dividend+3
  2396  0E98  0822               	movf	?___lmul+2,w
  2397  0E99  00AE               	movwf	___lldiv@dividend+2
  2398  0E9A  0821               	movf	?___lmul+1,w
  2399  0E9B  00AD               	movwf	___lldiv@dividend+1
  2400  0E9C  0820               	movf	?___lmul,w
  2401  0E9D  00AC               	movwf	___lldiv@dividend
  2402  0E9E  160A  118A  23EE  120A  158A  	fcall	___lldiv
  2403  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0EA5  082B               	movf	?___lldiv+3,w
  2406  0EA6  00CB               	movwf	main@Car_Speed+3
  2407  0EA7  082A               	movf	?___lldiv+2,w
  2408  0EA8  00CA               	movwf	main@Car_Speed+2
  2409  0EA9  0829               	movf	?___lldiv+1,w
  2410  0EAA  00C9               	movwf	main@Car_Speed+1
  2411  0EAB  0828               	movf	?___lldiv,w
  2412  0EAC  00C8               	movwf	main@Car_Speed
  2413  0EAD                     l4552:
  2414                           
  2415                           ;main.c: 267:             LCD_2DigitIntToStr(Car_Speed, Adc_Str);
  2416  0EAD  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2417  0EAE  00FF               	movwf	btemp+1
  2418  0EAF  087F               	movf	btemp+1,w
  2419  0EB0  00A4               	movwf	LCD_2DigitIntToStr@str
  2420  0EB1  0848               	movf	main@Car_Speed,w
  2421  0EB2  160A  118A  24BF  120A  158A  	fcall	_LCD_2DigitIntToStr
  2422  0EB7                     l4554:
  2423                           
  2424                           ;main.c: 268:             RTC_DS1307_Get_Date(&RTC_Date);
  2425  0EB7  30D9               	movlw	(low (main@RTC_Date| (0+256)))& (0+255)
  2426  0EB8  160A  118A  26DA  120A  158A  	fcall	_RTC_DS1307_Get_Date
  2427  0EBD                     l4556:
  2428                           
  2429                           ;main.c: 269:             Save_Event_to_24c04(RTC_Date, Current_Event, Adc_Str, Memory_O
      +                          ffset);
  2430  0EBD  3020               	movlw	Save_Event_to_24c04@RTC_Date& (0+255)
  2431  0EBE  0084               	movwf	4
  2432  0EBF  30D9               	movlw	low main@RTC_Date
  2433  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0EC2  00B6               	movwf	??_main
  2436  0EC3  0804               	movf	4,w
  2437  0EC4  00B7               	movwf	??_main+1
  2438  0EC5  300E               	movlw	14
  2439  0EC6  00B8               	movwf	??_main+2
  2440  0EC7                     u3350:
  2441  0EC7  0836               	movf	??_main,w
  2442  0EC8  0084               	movwf	4
  2443  0EC9  1783               	bsf	3,7	;select IRP bank3
  2444  0ECA  0800               	movf	0,w
  2445  0ECB  00B9               	movwf	??_main+3
  2446  0ECC  0AB6               	incf	??_main,f
  2447  0ECD  0837               	movf	??_main+1,w
  2448  0ECE  0084               	movwf	4
  2449  0ECF  1383               	bcf	3,7	;select IRP bank0
  2450  0ED0  0839               	movf	??_main+3,w
  2451  0ED1  0080               	movwf	0
  2452  0ED2  0AB7               	incf	??_main+1,f
  2453  0ED3  0BB8               	decfsz	??_main+2,f
  2454  0ED4  2EC7               	goto	u3350
  2455  0ED5  0853               	movf	_Current_Event,w
  2456  0ED6  00FF               	movwf	btemp+1
  2457  0ED7  087F               	movf	btemp+1,w
  2458  0ED8  00AE               	movwf	Save_Event_to_24c04@Event
  2459  0ED9  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2460  0EDA  00FF               	movwf	btemp+1
  2461  0EDB  087F               	movf	btemp+1,w
  2462  0EDC  00AF               	movwf	Save_Event_to_24c04@Speed
  2463  0EDD  0850               	movf	main@Memory_Offset,w
  2464  0EDE  00FF               	movwf	btemp+1
  2465  0EDF  087F               	movf	btemp+1,w
  2466  0EE0  00B0               	movwf	Save_Event_to_24c04@Memory_Offset
  2467  0EE1  160A  118A  252B  120A  158A  	fcall	_Save_Event_to_24c04
  2468  0EE6                     l4558:
  2469                           
  2470                           ;main.c: 270:             Memory_Offset += 16;
  2471  0EE6  3010               	movlw	16
  2472  0EE7  00FF               	movwf	btemp+1
  2473  0EE8  087F               	movf	btemp+1,w
  2474  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0EEB  07D0               	addwf	main@Memory_Offset,f
  2477  0EEC                     l4560:
  2478                           
  2479                           ;main.c: 271:             if (Memory_Offset / 16 > 10) {
  2480  0EEC  3010               	movlw	16
  2481  0EED  00F3               	movwf	___awdiv@divisor
  2482  0EEE  3000               	movlw	0
  2483  0EEF  00F4               	movwf	___awdiv@divisor+1
  2484  0EF0  0850               	movf	main@Memory_Offset,w
  2485  0EF1  00B6               	movwf	??_main
  2486  0EF2  01B7               	clrf	??_main+1
  2487  0EF3  0836               	movf	??_main,w
  2488  0EF4  00F5               	movwf	___awdiv@dividend
  2489  0EF5  0837               	movf	??_main+1,w
  2490  0EF6  00F6               	movwf	___awdiv@dividend+1
  2491  0EF7  160A  118A  2456  120A  158A  	fcall	___awdiv
  2492  0EFC  0874               	movf	?___awdiv+1,w
  2493  0EFD  3A80               	xorlw	128
  2494  0EFE  00FF               	movwf	btemp+1
  2495  0EFF  3080               	movlw	128
  2496  0F00  027F               	subwf	btemp+1,w
  2497  0F01  1D03               	skipz
  2498  0F02  2F05               	goto	u3365
  2499  0F03  300B               	movlw	11
  2500  0F04  0273               	subwf	?___awdiv,w
  2501  0F05                     u3365:
  2502  0F05  1C03               	skipc
  2503  0F06  2F08               	goto	u3361
  2504  0F07  2F09               	goto	u3360
  2505  0F08                     u3361:
  2506  0F08  2F0C               	goto	l4564
  2507  0F09                     u3360:
  2508  0F09                     l4562:
  2509                           
  2510                           ;main.c: 272:                 Memory_Offset = 0;
  2511  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0F0B  01D0               	clrf	main@Memory_Offset
  2514  0F0C                     l4564:
  2515                           
  2516                           ;main.c: 275:             E2PROM_24C04_Write(0xA0, 0x01, Memory_Offset);
  2517  0F0C  01F4               	clrf	E2PROM_24C04_Write@word_Address
  2518  0F0D  0AF4               	incf	E2PROM_24C04_Write@word_Address,f
  2519  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0F10  0850               	movf	main@Memory_Offset,w
  2522  0F11  00FF               	movwf	btemp+1
  2523  0F12  087F               	movf	btemp+1,w
  2524  0F13  00F5               	movwf	E2PROM_24C04_Write@Data
  2525  0F14  30A0               	movlw	160
  2526  0F15  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2527  0F1A                     l4566:
  2528                           
  2529                           ;main.c: 278:         if (Button_Read(RB2) == 0) {
  2530  0F1A  3000               	movlw	0
  2531  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0F1D  1906               	btfsc	6,2	;volatile
  2534  0F1E  3001               	movlw	1
  2535  0F1F  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2536  0F24  3A00               	xorlw	0
  2537  0F25  1D03               	skipz
  2538  0F26  2F28               	goto	u3371
  2539  0F27  2F29               	goto	u3370
  2540  0F28                     u3371:
  2541  0F28  2FF5               	goto	l4594
  2542  0F29                     u3370:
  2543  0F29                     l4570:
  2544  0F29  3000               	movlw	0
  2545  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0F2C  1906               	btfsc	6,2	;volatile
  2548  0F2D  3001               	movlw	1
  2549  0F2E  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  2550  0F33  3A00               	xorlw	0
  2551  0F34  1903               	skipnz
  2552  0F35  2F37               	goto	u3381
  2553  0F36  2F38               	goto	u3380
  2554  0F37                     u3381:
  2555  0F37  2F29               	goto	l4570
  2556  0F38                     u3380:
  2557  0F38                     l4572:
  2558                           
  2559                           ;main.c: 280:             Current_Event--;
  2560  0F38  3001               	movlw	1
  2561  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0F3B  02D3               	subwf	_Current_Event,f
  2564                           
  2565                           ;main.c: 281:             if (Current_Event < 1) {
  2566  0F3C  0853               	movf	_Current_Event,w
  2567  0F3D  1D03               	btfss	3,2
  2568  0F3E  2F40               	goto	u3391
  2569  0F3F  2F41               	goto	u3390
  2570  0F40                     u3391:
  2571  0F40  2F45               	goto	l4576
  2572  0F41                     u3390:
  2573  0F41                     l4574:
  2574                           
  2575                           ;main.c: 282:                 Current_Event = 7;
  2576  0F41  3007               	movlw	7
  2577  0F42  00FF               	movwf	btemp+1
  2578  0F43  087F               	movf	btemp+1,w
  2579  0F44  00D3               	movwf	_Current_Event
  2580  0F45                     l4576:
  2581                           
  2582                           ;main.c: 285:             Adc_Return_Value = Adc_Read();
  2583  0F45  160A  158A  27AC  120A  158A  	fcall	_Adc_Read
  2584  0F4A  0873               	movf	?_Adc_Read,w
  2585  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0F4D  00C4               	movwf	main@Adc_Return_Value
  2588  0F4E  0874               	movf	?_Adc_Read+1,w
  2589  0F4F  00C5               	movwf	main@Adc_Return_Value+1
  2590  0F50  01C6               	clrf	main@Adc_Return_Value+2
  2591  0F51  01C7               	clrf	main@Adc_Return_Value+3
  2592  0F52                     l4578:
  2593                           
  2594                           ;main.c: 286:             Car_Speed = (Adc_Return_Value * 99) / 1023;
  2595  0F52  3000               	movlw	0
  2596  0F53  00AB               	movwf	___lldiv@divisor+3
  2597  0F54  3000               	movlw	0
  2598  0F55  00AA               	movwf	___lldiv@divisor+2
  2599  0F56  3003               	movlw	3
  2600  0F57  00A9               	movwf	___lldiv@divisor+1
  2601  0F58  30FF               	movlw	255
  2602  0F59  00A8               	movwf	___lldiv@divisor
  2603  0F5A  0847               	movf	main@Adc_Return_Value+3,w
  2604  0F5B  00A3               	movwf	___lmul@multiplier+3
  2605  0F5C  0846               	movf	main@Adc_Return_Value+2,w
  2606  0F5D  00A2               	movwf	___lmul@multiplier+2
  2607  0F5E  0845               	movf	main@Adc_Return_Value+1,w
  2608  0F5F  00A1               	movwf	___lmul@multiplier+1
  2609  0F60  0844               	movf	main@Adc_Return_Value,w
  2610  0F61  00A0               	movwf	___lmul@multiplier
  2611  0F62  3000               	movlw	0
  2612  0F63  00A7               	movwf	___lmul@multiplicand+3
  2613  0F64  3000               	movlw	0
  2614  0F65  00A6               	movwf	___lmul@multiplicand+2
  2615  0F66  3000               	movlw	0
  2616  0F67  00A5               	movwf	___lmul@multiplicand+1
  2617  0F68  3063               	movlw	99
  2618  0F69  00A4               	movwf	___lmul@multiplicand
  2619  0F6A  160A  118A  21DE  120A  158A  	fcall	___lmul
  2620  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0F71  0823               	movf	?___lmul+3,w
  2623  0F72  00AF               	movwf	___lldiv@dividend+3
  2624  0F73  0822               	movf	?___lmul+2,w
  2625  0F74  00AE               	movwf	___lldiv@dividend+2
  2626  0F75  0821               	movf	?___lmul+1,w
  2627  0F76  00AD               	movwf	___lldiv@dividend+1
  2628  0F77  0820               	movf	?___lmul,w
  2629  0F78  00AC               	movwf	___lldiv@dividend
  2630  0F79  160A  118A  23EE  120A  158A  	fcall	___lldiv
  2631  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0F80  082B               	movf	?___lldiv+3,w
  2634  0F81  00CB               	movwf	main@Car_Speed+3
  2635  0F82  082A               	movf	?___lldiv+2,w
  2636  0F83  00CA               	movwf	main@Car_Speed+2
  2637  0F84  0829               	movf	?___lldiv+1,w
  2638  0F85  00C9               	movwf	main@Car_Speed+1
  2639  0F86  0828               	movf	?___lldiv,w
  2640  0F87  00C8               	movwf	main@Car_Speed
  2641  0F88                     l4580:
  2642                           
  2643                           ;main.c: 287:             LCD_2DigitIntToStr(Car_Speed, Adc_Str);
  2644  0F88  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2645  0F89  00FF               	movwf	btemp+1
  2646  0F8A  087F               	movf	btemp+1,w
  2647  0F8B  00A4               	movwf	LCD_2DigitIntToStr@str
  2648  0F8C  0848               	movf	main@Car_Speed,w
  2649  0F8D  160A  118A  24BF  120A  158A  	fcall	_LCD_2DigitIntToStr
  2650  0F92                     l4582:
  2651                           
  2652                           ;main.c: 288:             RTC_DS1307_Get_Date(&RTC_Date);
  2653  0F92  30D9               	movlw	(low (main@RTC_Date| (0+256)))& (0+255)
  2654  0F93  160A  118A  26DA  120A  158A  	fcall	_RTC_DS1307_Get_Date
  2655  0F98                     l4584:
  2656                           
  2657                           ;main.c: 289:             Save_Event_to_24c04(RTC_Date, Current_Event, Adc_Str, Memory_O
      +                          ffset);
  2658  0F98  3020               	movlw	Save_Event_to_24c04@RTC_Date& (0+255)
  2659  0F99  0084               	movwf	4
  2660  0F9A  30D9               	movlw	low main@RTC_Date
  2661  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0F9D  00B6               	movwf	??_main
  2664  0F9E  0804               	movf	4,w
  2665  0F9F  00B7               	movwf	??_main+1
  2666  0FA0  300E               	movlw	14
  2667  0FA1  00B8               	movwf	??_main+2
  2668  0FA2                     u3400:
  2669  0FA2  0836               	movf	??_main,w
  2670  0FA3  0084               	movwf	4
  2671  0FA4  1783               	bsf	3,7	;select IRP bank3
  2672  0FA5  0800               	movf	0,w
  2673  0FA6  00B9               	movwf	??_main+3
  2674  0FA7  0AB6               	incf	??_main,f
  2675  0FA8  0837               	movf	??_main+1,w
  2676  0FA9  0084               	movwf	4
  2677  0FAA  1383               	bcf	3,7	;select IRP bank0
  2678  0FAB  0839               	movf	??_main+3,w
  2679  0FAC  0080               	movwf	0
  2680  0FAD  0AB7               	incf	??_main+1,f
  2681  0FAE  0BB8               	decfsz	??_main+2,f
  2682  0FAF  2FA2               	goto	u3400
  2683  0FB0  0853               	movf	_Current_Event,w
  2684  0FB1  00FF               	movwf	btemp+1
  2685  0FB2  087F               	movf	btemp+1,w
  2686  0FB3  00AE               	movwf	Save_Event_to_24c04@Event
  2687  0FB4  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  2688  0FB5  00FF               	movwf	btemp+1
  2689  0FB6  087F               	movf	btemp+1,w
  2690  0FB7  00AF               	movwf	Save_Event_to_24c04@Speed
  2691  0FB8  0850               	movf	main@Memory_Offset,w
  2692  0FB9  00FF               	movwf	btemp+1
  2693  0FBA  087F               	movf	btemp+1,w
  2694  0FBB  00B0               	movwf	Save_Event_to_24c04@Memory_Offset
  2695  0FBC  160A  118A  252B  120A  158A  	fcall	_Save_Event_to_24c04
  2696  0FC1                     l4586:
  2697                           
  2698                           ;main.c: 290:             Memory_Offset += 16;
  2699  0FC1  3010               	movlw	16
  2700  0FC2  00FF               	movwf	btemp+1
  2701  0FC3  087F               	movf	btemp+1,w
  2702  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0FC6  07D0               	addwf	main@Memory_Offset,f
  2705  0FC7                     l4588:
  2706                           
  2707                           ;main.c: 291:             if (Memory_Offset / 16 > 10) {
  2708  0FC7  3010               	movlw	16
  2709  0FC8  00F3               	movwf	___awdiv@divisor
  2710  0FC9  3000               	movlw	0
  2711  0FCA  00F4               	movwf	___awdiv@divisor+1
  2712  0FCB  0850               	movf	main@Memory_Offset,w
  2713  0FCC  00B6               	movwf	??_main
  2714  0FCD  01B7               	clrf	??_main+1
  2715  0FCE  0836               	movf	??_main,w
  2716  0FCF  00F5               	movwf	___awdiv@dividend
  2717  0FD0  0837               	movf	??_main+1,w
  2718  0FD1  00F6               	movwf	___awdiv@dividend+1
  2719  0FD2  160A  118A  2456  120A  158A  	fcall	___awdiv
  2720  0FD7  0874               	movf	?___awdiv+1,w
  2721  0FD8  3A80               	xorlw	128
  2722  0FD9  00FF               	movwf	btemp+1
  2723  0FDA  3080               	movlw	128
  2724  0FDB  027F               	subwf	btemp+1,w
  2725  0FDC  1D03               	skipz
  2726  0FDD  2FE0               	goto	u3415
  2727  0FDE  300B               	movlw	11
  2728  0FDF  0273               	subwf	?___awdiv,w
  2729  0FE0                     u3415:
  2730  0FE0  1C03               	skipc
  2731  0FE1  2FE3               	goto	u3411
  2732  0FE2  2FE4               	goto	u3410
  2733  0FE3                     u3411:
  2734  0FE3  2FE7               	goto	l4592
  2735  0FE4                     u3410:
  2736  0FE4                     l4590:
  2737                           
  2738                           ;main.c: 292:                 Memory_Offset = 0;
  2739  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0FE6  01D0               	clrf	main@Memory_Offset
  2742  0FE7                     l4592:
  2743                           
  2744                           ;main.c: 295:             E2PROM_24C04_Write(0xA0, 0x01, Memory_Offset);
  2745  0FE7  01F4               	clrf	E2PROM_24C04_Write@word_Address
  2746  0FE8  0AF4               	incf	E2PROM_24C04_Write@word_Address,f
  2747  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0FEB  0850               	movf	main@Memory_Offset,w
  2750  0FEC  00FF               	movwf	btemp+1
  2751  0FED  087F               	movf	btemp+1,w
  2752  0FEE  00F5               	movwf	E2PROM_24C04_Write@Data
  2753  0FEF  30A0               	movlw	160
  2754  0FF0  160A  118A  2076  120A  158A  	fcall	_E2PROM_24C04_Write
  2755  0FF5                     l4594:
  2756                           
  2757                           ;main.c: 299:         if (Password_Trails == 0) {
  2758  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0FF7  083A               	movf	main@Password_Trails,w
  2761  0FF8  1D03               	btfss	3,2
  2762  0FF9  2FFD               	goto	u3421
  2763  0FFA  120A  158A  297C   	goto	u3420
  2764  0FFD                     u3421:
  2765  0FFD  120A  158A  2980   	goto	l4598
  2766                           
  2767                           	psect	text1
  2768  11DE                     __ptext1:	
  2769 ;; *************** function ___lmul *****************
  2770 ;; Defined at:
  2771 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2774 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  product         4    4[COMMON] unsigned long 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  4    0[BANK0 ] unsigned long 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       8       0       0       0
  2787 ;;      Locals:         4       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0
  2789 ;;      Totals:         5       8       0       0       0
  2790 ;;Total ram usage:       13 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function ___lmul
  2802  11DE                     ___lmul:
  2803  11DE                     l4410:	
  2804                           ;incstack = 0
  2805                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2806                           
  2807  11DE  3000               	movlw	0
  2808  11DF  00F7               	movwf	___lmul@product+3
  2809  11E0  3000               	movlw	0
  2810  11E1  00F6               	movwf	___lmul@product+2
  2811  11E2  3000               	movlw	0
  2812  11E3  00F5               	movwf	___lmul@product+1
  2813  11E4  3000               	movlw	0
  2814  11E5  00F4               	movwf	___lmul@product
  2815  11E6                     l4412:
  2816  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  2817  11E7  1303               	bcf	3,6	;RP1=0, select bank0
  2818  11E8  1C20               	btfss	___lmul@multiplier,0
  2819  11E9  29EB               	goto	u3141
  2820  11EA  29EC               	goto	u3140
  2821  11EB                     u3141:
  2822  11EB  2A03               	goto	l4416
  2823  11EC                     u3140:
  2824  11EC                     l4414:
  2825  11EC  0824               	movf	___lmul@multiplicand,w
  2826  11ED  07F4               	addwf	___lmul@product,f
  2827  11EE  0825               	movf	___lmul@multiplicand+1,w
  2828  11EF  1103               	clrz
  2829  11F0  1803               	skipnc
  2830  11F1  3E01               	addlw	1
  2831  11F2  1903               	skipnz
  2832  11F3  29F5               	goto	u3151
  2833  11F4  07F5               	addwf	___lmul@product+1,f
  2834  11F5                     u3151:
  2835  11F5  0826               	movf	___lmul@multiplicand+2,w
  2836  11F6  1103               	clrz
  2837  11F7  1803               	skipnc
  2838  11F8  3E01               	addlw	1
  2839  11F9  1903               	skipnz
  2840  11FA  29FC               	goto	u3152
  2841  11FB  07F6               	addwf	___lmul@product+2,f
  2842  11FC                     u3152:
  2843  11FC  0827               	movf	___lmul@multiplicand+3,w
  2844  11FD  1103               	clrz
  2845  11FE  1803               	skipnc
  2846  11FF  3E01               	addlw	1
  2847  1200  1903               	skipnz
  2848  1201  2A03               	goto	u3153
  2849  1202  07F7               	addwf	___lmul@product+3,f
  2850  1203                     u3153:
  2851  1203                     l4416:
  2852  1203  3001               	movlw	1
  2853  1204  00F3               	movwf	??___lmul
  2854  1205                     u3165:
  2855  1205  1003               	clrc
  2856  1206  0DA4               	rlf	___lmul@multiplicand,f
  2857  1207  0DA5               	rlf	___lmul@multiplicand+1,f
  2858  1208  0DA6               	rlf	___lmul@multiplicand+2,f
  2859  1209  0DA7               	rlf	___lmul@multiplicand+3,f
  2860  120A  0BF3               	decfsz	??___lmul,f
  2861  120B  2A05               	goto	u3165
  2862  120C                     l4418:
  2863  120C  3001               	movlw	1
  2864  120D                     u3175:
  2865  120D  1003               	clrc
  2866  120E  0CA3               	rrf	___lmul@multiplier+3,f
  2867  120F  0CA2               	rrf	___lmul@multiplier+2,f
  2868  1210  0CA1               	rrf	___lmul@multiplier+1,f
  2869  1211  0CA0               	rrf	___lmul@multiplier,f
  2870  1212  3EFF               	addlw	-1
  2871  1213  1D03               	skipz
  2872  1214  2A0D               	goto	u3175
  2873  1215  0823               	movf	___lmul@multiplier+3,w
  2874  1216  0422               	iorwf	___lmul@multiplier+2,w
  2875  1217  0421               	iorwf	___lmul@multiplier+1,w
  2876  1218  0420               	iorwf	___lmul@multiplier,w
  2877  1219  1D03               	skipz
  2878  121A  2A1C               	goto	u3181
  2879  121B  2A1D               	goto	u3180
  2880  121C                     u3181:
  2881  121C  29E6               	goto	l4412
  2882  121D                     u3180:
  2883  121D                     l4420:
  2884  121D  0877               	movf	___lmul@product+3,w
  2885  121E  00A3               	movwf	?___lmul+3
  2886  121F  0876               	movf	___lmul@product+2,w
  2887  1220  00A2               	movwf	?___lmul+2
  2888  1221  0875               	movf	___lmul@product+1,w
  2889  1222  00A1               	movwf	?___lmul+1
  2890  1223  0874               	movf	___lmul@product,w
  2891  1224  00A0               	movwf	?___lmul
  2892  1225                     l652:
  2893  1225  0008               	return
  2894  1226                     __end_of___lmul:
  2895                           
  2896                           	psect	text2
  2897  13EE                     __ptext2:	
  2898 ;; *************** function ___lldiv *****************
  2899 ;; Defined at:
  2900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  divisor         4    8[BANK0 ] unsigned long 
  2903 ;;  dividend        4   12[BANK0 ] unsigned long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  quotient        4   17[BANK0 ] unsigned long 
  2906 ;;  counter         1   21[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  4    8[BANK0 ] unsigned long 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, btemp+1
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       8       0       0       0
  2917 ;;      Locals:         0       5       0       0       0
  2918 ;;      Temps:          0       1       0       0       0
  2919 ;;      Totals:         0      14       0       0       0
  2920 ;;Total ram usage:       14 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function ___lldiv
  2932  13EE                     ___lldiv:
  2933  13EE                     l4424:	
  2934                           ;incstack = 0
  2935                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2936                           
  2937  13EE  3000               	movlw	0
  2938  13EF  1283               	bcf	3,5	;RP0=0, select bank0
  2939  13F0  1303               	bcf	3,6	;RP1=0, select bank0
  2940  13F1  00B4               	movwf	___lldiv@quotient+3
  2941  13F2  3000               	movlw	0
  2942  13F3  00B3               	movwf	___lldiv@quotient+2
  2943  13F4  3000               	movlw	0
  2944  13F5  00B2               	movwf	___lldiv@quotient+1
  2945  13F6  3000               	movlw	0
  2946  13F7  00B1               	movwf	___lldiv@quotient
  2947  13F8  082B               	movf	___lldiv@divisor+3,w
  2948  13F9  042A               	iorwf	___lldiv@divisor+2,w
  2949  13FA  0429               	iorwf	___lldiv@divisor+1,w
  2950  13FB  0428               	iorwf	___lldiv@divisor,w
  2951  13FC  1903               	skipnz
  2952  13FD  2BFF               	goto	u3191
  2953  13FE  2C00               	goto	u3190
  2954  13FF                     u3191:
  2955  13FF  2C4D               	goto	l4446
  2956  1400                     u3190:
  2957  1400                     l4426:
  2958  1400  01B5               	clrf	___lldiv@counter
  2959  1401  0AB5               	incf	___lldiv@counter,f
  2960  1402  2C10               	goto	l4432
  2961  1403                     l4428:
  2962  1403  3001               	movlw	1
  2963  1404  00B0               	movwf	??___lldiv
  2964  1405                     u3205:
  2965  1405  1003               	clrc
  2966  1406  0DA8               	rlf	___lldiv@divisor,f
  2967  1407  0DA9               	rlf	___lldiv@divisor+1,f
  2968  1408  0DAA               	rlf	___lldiv@divisor+2,f
  2969  1409  0DAB               	rlf	___lldiv@divisor+3,f
  2970  140A  0BB0               	decfsz	??___lldiv,f
  2971  140B  2C05               	goto	u3205
  2972  140C                     l4430:
  2973  140C  3001               	movlw	1
  2974  140D  00FF               	movwf	btemp+1
  2975  140E  087F               	movf	btemp+1,w
  2976  140F  07B5               	addwf	___lldiv@counter,f
  2977  1410                     l4432:
  2978  1410  1FAB               	btfss	___lldiv@divisor+3,7
  2979  1411  2C13               	goto	u3211
  2980  1412  2C14               	goto	u3210
  2981  1413                     u3211:
  2982  1413  2C03               	goto	l4428
  2983  1414                     u3210:
  2984  1414                     l4434:
  2985  1414  3001               	movlw	1
  2986  1415  00B0               	movwf	??___lldiv
  2987  1416                     u3225:
  2988  1416  1003               	clrc
  2989  1417  0DB1               	rlf	___lldiv@quotient,f
  2990  1418  0DB2               	rlf	___lldiv@quotient+1,f
  2991  1419  0DB3               	rlf	___lldiv@quotient+2,f
  2992  141A  0DB4               	rlf	___lldiv@quotient+3,f
  2993  141B  0BB0               	decfsz	??___lldiv,f
  2994  141C  2C16               	goto	u3225
  2995  141D                     l4436:
  2996  141D  082B               	movf	___lldiv@divisor+3,w
  2997  141E  022F               	subwf	___lldiv@dividend+3,w
  2998  141F  1D03               	skipz
  2999  1420  2C2B               	goto	u3235
  3000  1421  082A               	movf	___lldiv@divisor+2,w
  3001  1422  022E               	subwf	___lldiv@dividend+2,w
  3002  1423  1D03               	skipz
  3003  1424  2C2B               	goto	u3235
  3004  1425  0829               	movf	___lldiv@divisor+1,w
  3005  1426  022D               	subwf	___lldiv@dividend+1,w
  3006  1427  1D03               	skipz
  3007  1428  2C2B               	goto	u3235
  3008  1429  0828               	movf	___lldiv@divisor,w
  3009  142A  022C               	subwf	___lldiv@dividend,w
  3010  142B                     u3235:
  3011  142B  1C03               	skipc
  3012  142C  2C2E               	goto	u3231
  3013  142D  2C2F               	goto	u3230
  3014  142E                     u3231:
  3015  142E  2C3E               	goto	l4442
  3016  142F                     u3230:
  3017  142F                     l4438:
  3018  142F  0828               	movf	___lldiv@divisor,w
  3019  1430  02AC               	subwf	___lldiv@dividend,f
  3020  1431  0829               	movf	___lldiv@divisor+1,w
  3021  1432  1C03               	skipc
  3022  1433  0F29               	incfsz	___lldiv@divisor+1,w
  3023  1434  02AD               	subwf	___lldiv@dividend+1,f
  3024  1435  082A               	movf	___lldiv@divisor+2,w
  3025  1436  1C03               	skipc
  3026  1437  0F2A               	incfsz	___lldiv@divisor+2,w
  3027  1438  02AE               	subwf	___lldiv@dividend+2,f
  3028  1439  082B               	movf	___lldiv@divisor+3,w
  3029  143A  1C03               	skipc
  3030  143B  0F2B               	incfsz	___lldiv@divisor+3,w
  3031  143C  02AF               	subwf	___lldiv@dividend+3,f
  3032  143D                     l4440:
  3033  143D  1431               	bsf	___lldiv@quotient,0
  3034  143E                     l4442:
  3035  143E  3001               	movlw	1
  3036  143F                     u3245:
  3037  143F  1003               	clrc
  3038  1440  0CAB               	rrf	___lldiv@divisor+3,f
  3039  1441  0CAA               	rrf	___lldiv@divisor+2,f
  3040  1442  0CA9               	rrf	___lldiv@divisor+1,f
  3041  1443  0CA8               	rrf	___lldiv@divisor,f
  3042  1444  3EFF               	addlw	-1
  3043  1445  1D03               	skipz
  3044  1446  2C3F               	goto	u3245
  3045  1447                     l4444:
  3046  1447  3001               	movlw	1
  3047  1448  02B5               	subwf	___lldiv@counter,f
  3048  1449  1D03               	btfss	3,2
  3049  144A  2C4C               	goto	u3251
  3050  144B  2C4D               	goto	u3250
  3051  144C                     u3251:
  3052  144C  2C14               	goto	l4434
  3053  144D                     u3250:
  3054  144D                     l4446:
  3055  144D  0834               	movf	___lldiv@quotient+3,w
  3056  144E  00AB               	movwf	?___lldiv+3
  3057  144F  0833               	movf	___lldiv@quotient+2,w
  3058  1450  00AA               	movwf	?___lldiv+2
  3059  1451  0832               	movf	___lldiv@quotient+1,w
  3060  1452  00A9               	movwf	?___lldiv+1
  3061  1453  0831               	movf	___lldiv@quotient,w
  3062  1454  00A8               	movwf	?___lldiv
  3063  1455                     l674:
  3064  1455  0008               	return
  3065  1456                     __end_of___lldiv:
  3066                           
  3067                           	psect	text3
  3068  1F5B                     __ptext3:	
  3069 ;; *************** function _UART_TX_Init *****************
  3070 ;; Defined at:
  3071 ;;		line 149 in file "main.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           
  3100                           ;psect for function _UART_TX_Init
  3101  1F5B                     _UART_TX_Init:
  3102  1F5B                     l4346:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _UART_TX_Init: [wreg]
  3105                           
  3106                           
  3107                           ;main.c: 150:     BRGH = 1;
  3108  1F5B  1683               	bsf	3,5	;RP0=1, select bank1
  3109  1F5C  1303               	bcf	3,6	;RP1=0, select bank1
  3110  1F5D  1518               	bsf	24,2	;volatile
  3111  1F5E                     l4348:
  3112                           
  3113                           ;main.c: 151:     SPBRG = 51;
  3114  1F5E  3033               	movlw	51
  3115  1F5F  0099               	movwf	25	;volatile
  3116  1F60                     l4350:
  3117                           
  3118                           ;main.c: 153:     SYNC = 0;
  3119  1F60  1218               	bcf	24,4	;volatile
  3120  1F61                     l4352:
  3121                           
  3122                           ;main.c: 154:     SPEN = 1;
  3123  1F61  1283               	bcf	3,5	;RP0=0, select bank0
  3124  1F62  1303               	bcf	3,6	;RP1=0, select bank0
  3125  1F63  1798               	bsf	24,7	;volatile
  3126  1F64                     l4354:
  3127                           
  3128                           ;main.c: 156:     TRISC6 = 1;
  3129  1F64  1683               	bsf	3,5	;RP0=1, select bank1
  3130  1F65  1303               	bcf	3,6	;RP1=0, select bank1
  3131  1F66  1707               	bsf	7,6	;volatile
  3132  1F67                     l4356:
  3133                           
  3134                           ;main.c: 157:     TRISC7 = 1;
  3135  1F67  1787               	bsf	7,7	;volatile
  3136  1F68                     l4358:
  3137                           
  3138                           ;main.c: 158:     TXEN = 1;
  3139  1F68  1698               	bsf	24,5	;volatile
  3140  1F69                     l345:
  3141  1F69  0008               	return
  3142  1F6A                     __end_of_UART_TX_Init:
  3143                           
  3144                           	psect	text4
  3145  1F9A                     __ptext4:	
  3146 ;; *************** function _UART_Send_Current_Event *****************
  3147 ;; Defined at:
  3148 ;;		line 174 in file "main.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  Current_Even    1    wreg     unsigned char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  Current_Even    1    7[COMMON] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0
  3165 ;;      Totals:         1       0       0       0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    3
  3169 ;; This function calls:
  3170 ;;		_UART_WriteStr
  3171 ;;		___bmul
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _UART_Send_Current_Event
  3179  1F9A                     _UART_Send_Current_Event:
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _UART_Send_Current_Event: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  3183                           ;UART_Send_Current_Event@Current_Event stored from wreg
  3184  1F9A  00F7               	movwf	UART_Send_Current_Event@Current_Event
  3185  1F9B                     l4360:
  3186                           
  3187                           ;main.c: 175:     UART_WriteStr(Events_Strings[Current_Event]);
  3188  1F9B  3003               	movlw	3
  3189  1F9C  00FF               	movwf	btemp+1
  3190  1F9D  087F               	movf	btemp+1,w
  3191  1F9E  00F3               	movwf	___bmul@multiplicand
  3192  1F9F  0877               	movf	UART_Send_Current_Event@Current_Event,w
  3193  1FA0  160A  158A  27D3  160A  158A  	fcall	___bmul
  3194  1FA5  3E51               	addlw	(low (_Events_Strings| (0+256)))& (0+255)
  3195  1FA6  160A  118A  20D0  160A  158A  	fcall	_UART_WriteStr
  3196  1FAB                     l360:
  3197  1FAB  0008               	return
  3198  1FAC                     __end_of_UART_Send_Current_Event:
  3199                           
  3200                           	psect	text5
  3201  10D0                     __ptext5:	
  3202 ;; *************** function _UART_WriteStr *****************
  3203 ;; Defined at:
  3204 ;;		line 166 in file "main.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  String          1    wreg     PTR unsigned char 
  3207 ;;		 -> Events_Strings(30), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  String          1    5[COMMON] PTR unsigned char 
  3210 ;;		 -> Events_Strings(30), 
  3211 ;;  i               1    6[COMMON] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         2       0       0       0       0
  3223 ;;      Temps:          1       0       0       0       0
  3224 ;;      Totals:         3       0       0       0       0
  3225 ;;Total ram usage:        3 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    2
  3228 ;; This function calls:
  3229 ;;		_UART_Write
  3230 ;; This function is called by:
  3231 ;;		_UART_Send_Current_Event
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _UART_WriteStr
  3237  10D0                     _UART_WriteStr:
  3238                           
  3239                           ;incstack = 0
  3240                           ; Regs used in _UART_WriteStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3241                           ;UART_WriteStr@String stored from wreg
  3242  10D0  00F5               	movwf	UART_WriteStr@String
  3243  10D1                     l4098:
  3244                           
  3245                           ;main.c: 167:     uint8_t i = 0;
  3246  10D1  01F6               	clrf	UART_WriteStr@i
  3247                           
  3248                           ;main.c: 168:     while (String[i] != 0) {
  3249  10D2  28E2               	goto	l4104
  3250  10D3                     l4100:
  3251                           
  3252                           ;main.c: 169:         UART_Write(String[i]);
  3253  10D3  0876               	movf	UART_WriteStr@i,w
  3254  10D4  0775               	addwf	UART_WriteStr@String,w
  3255  10D5  00F4               	movwf	??_UART_WriteStr
  3256  10D6  0874               	movf	??_UART_WriteStr,w
  3257  10D7  0084               	movwf	4
  3258  10D8  0800               	movf	0,w
  3259  10D9  120A  118A  27F4  160A  118A  	fcall	_UART_Write
  3260  10DE                     l4102:
  3261                           
  3262                           ;main.c: 170:         i++;
  3263  10DE  3001               	movlw	1
  3264  10DF  00FF               	movwf	btemp+1
  3265  10E0  087F               	movf	btemp+1,w
  3266  10E1  07F6               	addwf	UART_WriteStr@i,f
  3267  10E2                     l4104:
  3268                           
  3269                           ;main.c: 168:     while (String[i] != 0) {
  3270  10E2  0876               	movf	UART_WriteStr@i,w
  3271  10E3  0775               	addwf	UART_WriteStr@String,w
  3272  10E4  00F4               	movwf	??_UART_WriteStr
  3273  10E5  0874               	movf	??_UART_WriteStr,w
  3274  10E6  0084               	movwf	4
  3275  10E7  1783               	bsf	3,7	;select IRP bank2
  3276  10E8  0800               	movf	0,w
  3277  10E9  1D03               	btfss	3,2
  3278  10EA  28EC               	goto	u2841
  3279  10EB  28ED               	goto	u2840
  3280  10EC                     u2841:
  3281  10EC  28D3               	goto	l4100
  3282  10ED                     u2840:
  3283  10ED                     l357:
  3284  10ED  0008               	return
  3285  10EE                     __end_of_UART_WriteStr:
  3286                           
  3287                           	psect	text6
  3288  07F4                     __ptext6:	
  3289 ;; *************** function _UART_Write *****************
  3290 ;; Defined at:
  3291 ;;		line 161 in file "main.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  data            1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  data            1    3[COMMON] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         1       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         1       0       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_UART_WriteStr
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _UART_Write
  3322  07F4                     _UART_Write:
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _UART_Write: [wreg]
  3326                           ;UART_Write@data stored from wreg
  3327  07F4  00F3               	movwf	UART_Write@data
  3328  07F5                     l4030:
  3329  07F5                     l348:	
  3330                           ;main.c: 162:     while (!TRMT);
  3331                           
  3332  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  3333  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  3334  07F7  1C98               	btfss	24,1	;volatile
  3335  07F8  2FFA               	goto	u2811
  3336  07F9  2FFB               	goto	u2810
  3337  07FA                     u2811:
  3338  07FA  2FF5               	goto	l348
  3339  07FB                     u2810:
  3340  07FB                     l4032:
  3341                           
  3342                           ;main.c: 163:     TXREG = data;
  3343  07FB  0873               	movf	UART_Write@data,w
  3344  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  3345  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  3346  07FE  0099               	movwf	25	;volatile
  3347  07FF                     l351:
  3348  07FF  0008               	return
  3349  0800                     __end_of_UART_Write:
  3350                           
  3351                           	psect	text7
  3352  152B                     __ptext7:	
  3353 ;; *************** function _Save_Event_to_24c04 *****************
  3354 ;; Defined at:
  3355 ;;		line 123 in file "main.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  RTC_Date       14    0[BANK0 ] struct .
  3358 ;;  Event           1   14[BANK0 ] unsigned char 
  3359 ;;  Speed           1   15[BANK0 ] PTR unsigned char 
  3360 ;;		 -> main@Adc_Str(5), 
  3361 ;;  Memory_Offse    1   16[BANK0 ] unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         0      17       0       0       0
  3374 ;;      Locals:         0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0
  3376 ;;      Totals:         0      17       0       0       0
  3377 ;;Total ram usage:       17 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    4
  3380 ;; This function calls:
  3381 ;;		_E2PROM_24C04_Write
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _Save_Event_to_24c04
  3389  152B                     _Save_Event_to_24c04:
  3390  152B                     l4318:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _Save_Event_to_24c04: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3393                           
  3394                           
  3395                           ;main.c: 125:     E2PROM_24C04_Write(0xA0, 0x27 + Memory_Offset, Speed[0]);
  3396  152B  1283               	bcf	3,5	;RP0=0, select bank0
  3397  152C  1303               	bcf	3,6	;RP1=0, select bank0
  3398  152D  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3399  152E  3E27               	addlw	39
  3400  152F  00FF               	movwf	btemp+1
  3401  1530  087F               	movf	btemp+1,w
  3402  1531  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3403  1532  082F               	movf	Save_Event_to_24c04@Speed,w
  3404  1533  0084               	movwf	4
  3405  1534  1383               	bcf	3,7	;select IRP bank0
  3406  1535  0800               	movf	0,w
  3407  1536  00FF               	movwf	btemp+1
  3408  1537  087F               	movf	btemp+1,w
  3409  1538  00F5               	movwf	E2PROM_24C04_Write@Data
  3410  1539  30A0               	movlw	160
  3411  153A  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3412                           
  3413                           ;main.c: 126:     E2PROM_24C04_Write(0xA0, 0x28 + Memory_Offset, Speed[1]);
  3414  153F  1283               	bcf	3,5	;RP0=0, select bank0
  3415  1540  1303               	bcf	3,6	;RP1=0, select bank0
  3416  1541  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3417  1542  3E28               	addlw	40
  3418  1543  00FF               	movwf	btemp+1
  3419  1544  087F               	movf	btemp+1,w
  3420  1545  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3421  1546  0A2F               	incf	Save_Event_to_24c04@Speed,w
  3422  1547  0084               	movwf	4
  3423  1548  1383               	bcf	3,7	;select IRP bank0
  3424  1549  0800               	movf	0,w
  3425  154A  00FF               	movwf	btemp+1
  3426  154B  087F               	movf	btemp+1,w
  3427  154C  00F5               	movwf	E2PROM_24C04_Write@Data
  3428  154D  30A0               	movlw	160
  3429  154E  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3430  1553                     l4320:
  3431                           
  3432                           ;main.c: 128:     E2PROM_24C04_Write(0xA0, 0x26 + Memory_Offset, Event);
  3433  1553  1283               	bcf	3,5	;RP0=0, select bank0
  3434  1554  1303               	bcf	3,6	;RP1=0, select bank0
  3435  1555  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3436  1556  3E26               	addlw	38
  3437  1557  00FF               	movwf	btemp+1
  3438  1558  087F               	movf	btemp+1,w
  3439  1559  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3440  155A  082E               	movf	Save_Event_to_24c04@Event,w
  3441  155B  00FF               	movwf	btemp+1
  3442  155C  087F               	movf	btemp+1,w
  3443  155D  00F5               	movwf	E2PROM_24C04_Write@Data
  3444  155E  30A0               	movlw	160
  3445  155F  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3446  1564                     l4322:
  3447                           
  3448                           ;main.c: 130:     E2PROM_24C04_Write(0xA0, 0x24 + Memory_Offset, RTC_Date.Seconds[0]);
  3449  1564  1283               	bcf	3,5	;RP0=0, select bank0
  3450  1565  1303               	bcf	3,6	;RP1=0, select bank0
  3451  1566  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3452  1567  3E24               	addlw	36
  3453  1568  00FF               	movwf	btemp+1
  3454  1569  087F               	movf	btemp+1,w
  3455  156A  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3456  156B  0820               	movf	Save_Event_to_24c04@RTC_Date,w
  3457  156C  00FF               	movwf	btemp+1
  3458  156D  087F               	movf	btemp+1,w
  3459  156E  00F5               	movwf	E2PROM_24C04_Write@Data
  3460  156F  30A0               	movlw	160
  3461  1570  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3462  1575                     l4324:
  3463                           
  3464                           ;main.c: 131:     E2PROM_24C04_Write(0xA0, 0x25 + Memory_Offset, RTC_Date.Seconds[1]);
  3465  1575  1283               	bcf	3,5	;RP0=0, select bank0
  3466  1576  1303               	bcf	3,6	;RP1=0, select bank0
  3467  1577  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3468  1578  3E25               	addlw	37
  3469  1579  00FF               	movwf	btemp+1
  3470  157A  087F               	movf	btemp+1,w
  3471  157B  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3472  157C  0821               	movf	Save_Event_to_24c04@RTC_Date+1,w
  3473  157D  00FF               	movwf	btemp+1
  3474  157E  087F               	movf	btemp+1,w
  3475  157F  00F5               	movwf	E2PROM_24C04_Write@Data
  3476  1580  30A0               	movlw	160
  3477  1581  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3478  1586                     l4326:
  3479                           
  3480                           ;main.c: 133:     E2PROM_24C04_Write(0xA0, 0x22 + Memory_Offset, RTC_Date.Minutes[0]);
  3481  1586  1283               	bcf	3,5	;RP0=0, select bank0
  3482  1587  1303               	bcf	3,6	;RP1=0, select bank0
  3483  1588  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3484  1589  3E22               	addlw	34
  3485  158A  00FF               	movwf	btemp+1
  3486  158B  087F               	movf	btemp+1,w
  3487  158C  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3488  158D  0822               	movf	Save_Event_to_24c04@RTC_Date+2,w
  3489  158E  00FF               	movwf	btemp+1
  3490  158F  087F               	movf	btemp+1,w
  3491  1590  00F5               	movwf	E2PROM_24C04_Write@Data
  3492  1591  30A0               	movlw	160
  3493  1592  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3494  1597                     l4328:
  3495                           
  3496                           ;main.c: 134:     E2PROM_24C04_Write(0xA0, 0x23 + Memory_Offset, RTC_Date.Minutes[1]);
  3497  1597  1283               	bcf	3,5	;RP0=0, select bank0
  3498  1598  1303               	bcf	3,6	;RP1=0, select bank0
  3499  1599  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3500  159A  3E23               	addlw	35
  3501  159B  00FF               	movwf	btemp+1
  3502  159C  087F               	movf	btemp+1,w
  3503  159D  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3504  159E  0823               	movf	Save_Event_to_24c04@RTC_Date+3,w
  3505  159F  00FF               	movwf	btemp+1
  3506  15A0  087F               	movf	btemp+1,w
  3507  15A1  00F5               	movwf	E2PROM_24C04_Write@Data
  3508  15A2  30A0               	movlw	160
  3509  15A3  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3510  15A8                     l4330:
  3511                           
  3512                           ;main.c: 136:     E2PROM_24C04_Write(0xA0, 0x20 + Memory_Offset, RTC_Date.Hours[0]);
  3513  15A8  1283               	bcf	3,5	;RP0=0, select bank0
  3514  15A9  1303               	bcf	3,6	;RP1=0, select bank0
  3515  15AA  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3516  15AB  3E20               	addlw	32
  3517  15AC  00FF               	movwf	btemp+1
  3518  15AD  087F               	movf	btemp+1,w
  3519  15AE  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3520  15AF  0824               	movf	Save_Event_to_24c04@RTC_Date+4,w
  3521  15B0  00FF               	movwf	btemp+1
  3522  15B1  087F               	movf	btemp+1,w
  3523  15B2  00F5               	movwf	E2PROM_24C04_Write@Data
  3524  15B3  30A0               	movlw	160
  3525  15B4  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3526  15B9                     l4332:
  3527                           
  3528                           ;main.c: 137:     E2PROM_24C04_Write(0xA0, 0x21 + Memory_Offset, RTC_Date.Hours[1]);
  3529  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  3530  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  3531  15BB  0830               	movf	Save_Event_to_24c04@Memory_Offset,w
  3532  15BC  3E21               	addlw	33
  3533  15BD  00FF               	movwf	btemp+1
  3534  15BE  087F               	movf	btemp+1,w
  3535  15BF  00F4               	movwf	E2PROM_24C04_Write@word_Address
  3536  15C0  0825               	movf	Save_Event_to_24c04@RTC_Date+5,w
  3537  15C1  00FF               	movwf	btemp+1
  3538  15C2  087F               	movf	btemp+1,w
  3539  15C3  00F5               	movwf	E2PROM_24C04_Write@Data
  3540  15C4  30A0               	movlw	160
  3541  15C5  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  3542  15CA                     l337:
  3543  15CA  0008               	return
  3544  15CB                     __end_of_Save_Event_to_24c04:
  3545                           
  3546                           	psect	text8
  3547  10B2                     __ptext8:	
  3548 ;; *************** function _RTC_DS1307_Write *****************
  3549 ;; Defined at:
  3550 ;;		line 7 in file "RTC_DS1307.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  word_Address    1    wreg     unsigned char 
  3553 ;;  Data            1    4[COMMON] unsigned char 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  word_Address    1    5[COMMON] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         1       0       0       0       0
  3566 ;;      Locals:         1       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0
  3568 ;;      Totals:         2       0       0       0       0
  3569 ;;Total ram usage:        2 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    3
  3572 ;; This function calls:
  3573 ;;		_I2C_Start
  3574 ;;		_I2C_Stop
  3575 ;;		_I2C_Write
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _RTC_DS1307_Write
  3583  10B2                     _RTC_DS1307_Write:
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in _RTC_DS1307_Write: [wreg+status,2+status,0+pclath+cstack]
  3587                           ;RTC_DS1307_Write@word_Address stored from wreg
  3588  10B2  00F5               	movwf	RTC_DS1307_Write@word_Address
  3589  10B3                     l4364:
  3590                           
  3591                           ;RTC_DS1307.c: 8:     I2C_Start();
  3592  10B3  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  3593                           
  3594                           ;RTC_DS1307.c: 9:     I2C_Write(0xD0);
  3595  10B8  30D0               	movlw	208
  3596  10B9  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  3597                           
  3598                           ;RTC_DS1307.c: 10:     I2C_Write(word_Address);
  3599  10BE  0875               	movf	RTC_DS1307_Write@word_Address,w
  3600  10BF  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  3601                           
  3602                           ;RTC_DS1307.c: 11:     I2C_Write(Data);
  3603  10C4  0874               	movf	RTC_DS1307_Write@Data,w
  3604  10C5  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  3605                           
  3606                           ;RTC_DS1307.c: 12:     I2C_Stop();
  3607  10CA  160A  158A  2707  160A  118A  	fcall	_I2C_Stop
  3608  10CF                     l535:
  3609  10CF  0008               	return
  3610  10D0                     __end_of_RTC_DS1307_Write:
  3611                           
  3612                           	psect	text9
  3613  1EF8                     __ptext9:	
  3614 ;; *************** function _RTC_DS1307_Init *****************
  3615 ;; Defined at:
  3616 ;;		line 3 in file "RTC_DS1307.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0
  3633 ;;      Totals:         0       0       0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    2
  3637 ;; This function calls:
  3638 ;;		_I2C_Master_Init
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _RTC_DS1307_Init
  3646  1EF8                     _RTC_DS1307_Init:
  3647  1EF8                     l4362:	
  3648                           ;incstack = 0
  3649                           ; Regs used in _RTC_DS1307_Init: [wreg+status,2+status,0+pclath+cstack]
  3650                           
  3651                           
  3652                           ;RTC_DS1307.c: 4:     I2C_Master_Init();
  3653  1EF8  160A  158A  2733  160A  158A  	fcall	_I2C_Master_Init
  3654  1EFD                     l532:
  3655  1EFD  0008               	return
  3656  1EFE                     __end_of_RTC_DS1307_Init:
  3657                           
  3658                           	psect	text10
  3659  16DA                     __ptext10:	
  3660 ;; *************** function _RTC_DS1307_Get_Date *****************
  3661 ;; Defined at:
  3662 ;;		line 50 in file "RTC_DS1307.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  Date_Structu    1    wreg     PTR struct .
  3665 ;;		 -> main@RTC_Date(14), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  Date_Structu    1    0[BANK0 ] PTR struct .
  3668 ;;		 -> main@RTC_Date(14), 
  3669 ;;  temp            8    1[BANK0 ] struct .
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       0       0       0       0
  3680 ;;      Locals:         0       9       0       0       0
  3681 ;;      Temps:          0       0       0       0       0
  3682 ;;      Totals:         0       9       0       0       0
  3683 ;;Total ram usage:        9 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    5
  3686 ;; This function calls:
  3687 ;;		_RTC_DS1307_BCD_To_Decimal_LSB
  3688 ;;		_RTC_DS1307_BCD_To_Decimal_MSB
  3689 ;;		_RTC_DS1307_DOW_To_String
  3690 ;;		_RTC_DS1307_Read
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function _RTC_DS1307_Get_Date
  3698  16DA                     _RTC_DS1307_Get_Date:
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in _RTC_DS1307_Get_Date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3702                           ;RTC_DS1307_Get_Date@Date_Structure stored from wreg
  3703  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  3704  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  3705  16DC  00A0               	movwf	RTC_DS1307_Get_Date@Date_Structure
  3706  16DD                     l4366:
  3707                           
  3708                           ;RTC_DS1307.c: 51:     RTC_temp_Typedef temp;;RTC_DS1307.c: 53:     temp.Seconds = RTC_D
      +                          S1307_Read(0x00);
  3709  16DD  3000               	movlw	0
  3710  16DE  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3711  16E3  00FF               	movwf	btemp+1
  3712  16E4  087F               	movf	btemp+1,w
  3713  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  3714  16E6  1303               	bcf	3,6	;RP1=0, select bank0
  3715  16E7  00A1               	movwf	RTC_DS1307_Get_Date@temp
  3716                           
  3717                           ;RTC_DS1307.c: 54:     temp.Minutes = RTC_DS1307_Read(0x01);
  3718  16E8  3001               	movlw	1
  3719  16E9  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3720  16EE  00FF               	movwf	btemp+1
  3721  16EF  087F               	movf	btemp+1,w
  3722  16F0  1283               	bcf	3,5	;RP0=0, select bank0
  3723  16F1  1303               	bcf	3,6	;RP1=0, select bank0
  3724  16F2  00A2               	movwf	RTC_DS1307_Get_Date@temp+1
  3725                           
  3726                           ;RTC_DS1307.c: 55:     temp.Hours = RTC_DS1307_Read(0x02);
  3727  16F3  3002               	movlw	2
  3728  16F4  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3729  16F9  00FF               	movwf	btemp+1
  3730  16FA  087F               	movf	btemp+1,w
  3731  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  3732  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  3733  16FD  00A3               	movwf	RTC_DS1307_Get_Date@temp+2
  3734  16FE                     l4368:
  3735                           
  3736                           ;RTC_DS1307.c: 56:     if ((temp.Hours & 0b00100000) != 0) {
  3737  16FE  1EA3               	btfss	RTC_DS1307_Get_Date@temp+2,5
  3738  16FF  2F01               	goto	u3131
  3739  1700  2F02               	goto	u3130
  3740  1701                     u3131:
  3741  1701  2F09               	goto	l4372
  3742  1702                     u3130:
  3743  1702                     l4370:
  3744                           
  3745                           ;RTC_DS1307.c: 57:         Date_Structure->am_Pm = 1;
  3746  1702  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3747  1703  3E06               	addlw	6
  3748  1704  0084               	movwf	4
  3749  1705  1783               	bsf	3,7	;select IRP bank2
  3750  1706  0180               	clrf	0
  3751  1707  0A80               	incf	0,f
  3752                           
  3753                           ;RTC_DS1307.c: 58:     } else {
  3754  1708  2F0E               	goto	l4374
  3755  1709                     l4372:
  3756                           
  3757                           ;RTC_DS1307.c: 59:         Date_Structure->am_Pm = 0;
  3758  1709  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3759  170A  3E06               	addlw	6
  3760  170B  0084               	movwf	4
  3761  170C  1783               	bsf	3,7	;select IRP bank2
  3762  170D  0180               	clrf	0
  3763  170E                     l4374:
  3764                           
  3765                           ;RTC_DS1307.c: 61:     temp.Hours &= 0x1f;
  3766  170E  301F               	movlw	31
  3767  170F  00FF               	movwf	btemp+1
  3768  1710  087F               	movf	btemp+1,w
  3769  1711  05A3               	andwf	RTC_DS1307_Get_Date@temp+2,f
  3770  1712                     l4376:
  3771                           
  3772                           ;RTC_DS1307.c: 62:     temp.DOW = RTC_DS1307_Read(0x03);
  3773  1712  3003               	movlw	3
  3774  1713  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3775  1718  00FF               	movwf	btemp+1
  3776  1719  087F               	movf	btemp+1,w
  3777  171A  1283               	bcf	3,5	;RP0=0, select bank0
  3778  171B  1303               	bcf	3,6	;RP1=0, select bank0
  3779  171C  00A5               	movwf	RTC_DS1307_Get_Date@temp+4
  3780  171D                     l4378:
  3781                           
  3782                           ;RTC_DS1307.c: 63:     Date_Structure->DOW_String = RTC_DS1307_DOW_To_String(temp.DOW);
  3783  171D  0825               	movf	RTC_DS1307_Get_Date@temp+4,w
  3784  171E  160A  158A  2740  160A  118A  	fcall	_RTC_DS1307_DOW_To_String
  3785  1723  00FF               	movwf	btemp+1
  3786  1724  1283               	bcf	3,5	;RP0=0, select bank0
  3787  1725  1303               	bcf	3,6	;RP1=0, select bank0
  3788  1726  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3789  1727  3E07               	addlw	7
  3790  1728  0084               	movwf	4
  3791  1729  087F               	movf	btemp+1,w
  3792  172A  1783               	bsf	3,7	;select IRP bank2
  3793  172B  0080               	movwf	0
  3794  172C                     l4380:
  3795                           
  3796                           ;RTC_DS1307.c: 64:     temp.Day = RTC_DS1307_Read(0x04);
  3797  172C  3004               	movlw	4
  3798  172D  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3799  1732  00FF               	movwf	btemp+1
  3800  1733  087F               	movf	btemp+1,w
  3801  1734  1283               	bcf	3,5	;RP0=0, select bank0
  3802  1735  1303               	bcf	3,6	;RP1=0, select bank0
  3803  1736  00A6               	movwf	RTC_DS1307_Get_Date@temp+5
  3804  1737                     l4382:
  3805                           
  3806                           ;RTC_DS1307.c: 65:     temp.Month = RTC_DS1307_Read(0x05);
  3807  1737  3005               	movlw	5
  3808  1738  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3809  173D  00FF               	movwf	btemp+1
  3810  173E  087F               	movf	btemp+1,w
  3811  173F  1283               	bcf	3,5	;RP0=0, select bank0
  3812  1740  1303               	bcf	3,6	;RP1=0, select bank0
  3813  1741  00A7               	movwf	RTC_DS1307_Get_Date@temp+6
  3814  1742                     l4384:
  3815                           
  3816                           ;RTC_DS1307.c: 66:     temp.Year = RTC_DS1307_Read(0x06);
  3817  1742  3006               	movlw	6
  3818  1743  160A  118A  20EE  160A  118A  	fcall	_RTC_DS1307_Read
  3819  1748  00FF               	movwf	btemp+1
  3820  1749  087F               	movf	btemp+1,w
  3821  174A  1283               	bcf	3,5	;RP0=0, select bank0
  3822  174B  1303               	bcf	3,6	;RP1=0, select bank0
  3823  174C  00A8               	movwf	RTC_DS1307_Get_Date@temp+7
  3824  174D                     l4386:
  3825                           
  3826                           ;RTC_DS1307.c: 68:     Date_Structure->Seconds[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.S
      +                          econds);
  3827  174D  0821               	movf	RTC_DS1307_Get_Date@temp,w
  3828  174E  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3829  1753  00FF               	movwf	btemp+1
  3830  1754  1283               	bcf	3,5	;RP0=0, select bank0
  3831  1755  1303               	bcf	3,6	;RP1=0, select bank0
  3832  1756  0A20               	incf	RTC_DS1307_Get_Date@Date_Structure,w
  3833  1757  0084               	movwf	4
  3834  1758  087F               	movf	btemp+1,w
  3835  1759  1783               	bsf	3,7	;select IRP bank2
  3836  175A  0080               	movwf	0
  3837  175B                     l4388:
  3838                           
  3839                           ;RTC_DS1307.c: 69:     Date_Structure->Seconds[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.S
      +                          econds);
  3840  175B  0821               	movf	RTC_DS1307_Get_Date@temp,w
  3841  175C  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3842  1761  00FF               	movwf	btemp+1
  3843  1762  1283               	bcf	3,5	;RP0=0, select bank0
  3844  1763  1303               	bcf	3,6	;RP1=0, select bank0
  3845  1764  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3846  1765  0084               	movwf	4
  3847  1766  087F               	movf	btemp+1,w
  3848  1767  1783               	bsf	3,7	;select IRP bank2
  3849  1768  0080               	movwf	0
  3850  1769                     l4390:
  3851                           
  3852                           ;RTC_DS1307.c: 70:     Date_Structure->Minutes[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.M
      +                          inutes);
  3853  1769  0822               	movf	RTC_DS1307_Get_Date@temp+1,w
  3854  176A  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3855  176F  00FF               	movwf	btemp+1
  3856  1770  1283               	bcf	3,5	;RP0=0, select bank0
  3857  1771  1303               	bcf	3,6	;RP1=0, select bank0
  3858  1772  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3859  1773  3E03               	addlw	3
  3860  1774  0084               	movwf	4
  3861  1775  087F               	movf	btemp+1,w
  3862  1776  1783               	bsf	3,7	;select IRP bank2
  3863  1777  0080               	movwf	0
  3864  1778                     l4392:
  3865                           
  3866                           ;RTC_DS1307.c: 71:     Date_Structure->Minutes[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.M
      +                          inutes);
  3867  1778  0822               	movf	RTC_DS1307_Get_Date@temp+1,w
  3868  1779  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3869  177E  00FF               	movwf	btemp+1
  3870  177F  1283               	bcf	3,5	;RP0=0, select bank0
  3871  1780  1303               	bcf	3,6	;RP1=0, select bank0
  3872  1781  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3873  1782  3E02               	addlw	2
  3874  1783  0084               	movwf	4
  3875  1784  087F               	movf	btemp+1,w
  3876  1785  1783               	bsf	3,7	;select IRP bank2
  3877  1786  0080               	movwf	0
  3878  1787                     l4394:
  3879                           
  3880                           ;RTC_DS1307.c: 72:     Date_Structure->Hours[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.Hou
      +                          rs);
  3881  1787  0823               	movf	RTC_DS1307_Get_Date@temp+2,w
  3882  1788  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3883  178D  00FF               	movwf	btemp+1
  3884  178E  1283               	bcf	3,5	;RP0=0, select bank0
  3885  178F  1303               	bcf	3,6	;RP1=0, select bank0
  3886  1790  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3887  1791  3E05               	addlw	5
  3888  1792  0084               	movwf	4
  3889  1793  087F               	movf	btemp+1,w
  3890  1794  1783               	bsf	3,7	;select IRP bank2
  3891  1795  0080               	movwf	0
  3892  1796                     l4396:
  3893                           
  3894                           ;RTC_DS1307.c: 73:     Date_Structure->Hours[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.Hou
      +                          rs);
  3895  1796  0823               	movf	RTC_DS1307_Get_Date@temp+2,w
  3896  1797  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3897  179C  00FF               	movwf	btemp+1
  3898  179D  1283               	bcf	3,5	;RP0=0, select bank0
  3899  179E  1303               	bcf	3,6	;RP1=0, select bank0
  3900  179F  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3901  17A0  3E04               	addlw	4
  3902  17A1  0084               	movwf	4
  3903  17A2  087F               	movf	btemp+1,w
  3904  17A3  1783               	bsf	3,7	;select IRP bank2
  3905  17A4  0080               	movwf	0
  3906  17A5                     l4398:
  3907                           
  3908                           ;RTC_DS1307.c: 74:     Date_Structure->Day[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.Day);
  3909  17A5  0826               	movf	RTC_DS1307_Get_Date@temp+5,w
  3910  17A6  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3911  17AB  00FF               	movwf	btemp+1
  3912  17AC  1283               	bcf	3,5	;RP0=0, select bank0
  3913  17AD  1303               	bcf	3,6	;RP1=0, select bank0
  3914  17AE  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3915  17AF  3E09               	addlw	9
  3916  17B0  0084               	movwf	4
  3917  17B1  087F               	movf	btemp+1,w
  3918  17B2  1783               	bsf	3,7	;select IRP bank2
  3919  17B3  0080               	movwf	0
  3920  17B4                     l4400:
  3921                           
  3922                           ;RTC_DS1307.c: 75:     Date_Structure->Day[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.Day);
  3923  17B4  0826               	movf	RTC_DS1307_Get_Date@temp+5,w
  3924  17B5  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3925  17BA  00FF               	movwf	btemp+1
  3926  17BB  1283               	bcf	3,5	;RP0=0, select bank0
  3927  17BC  1303               	bcf	3,6	;RP1=0, select bank0
  3928  17BD  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3929  17BE  3E08               	addlw	8
  3930  17BF  0084               	movwf	4
  3931  17C0  087F               	movf	btemp+1,w
  3932  17C1  1783               	bsf	3,7	;select IRP bank2
  3933  17C2  0080               	movwf	0
  3934  17C3                     l4402:
  3935                           
  3936                           ;RTC_DS1307.c: 76:     Date_Structure->Month[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.Mon
      +                          th);
  3937  17C3  0827               	movf	RTC_DS1307_Get_Date@temp+6,w
  3938  17C4  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3939  17C9  00FF               	movwf	btemp+1
  3940  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3941  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3942  17CC  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3943  17CD  3E0B               	addlw	11
  3944  17CE  0084               	movwf	4
  3945  17CF  087F               	movf	btemp+1,w
  3946  17D0  1783               	bsf	3,7	;select IRP bank2
  3947  17D1  0080               	movwf	0
  3948  17D2                     l4404:
  3949                           
  3950                           ;RTC_DS1307.c: 77:     Date_Structure->Month[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.Mon
      +                          th);
  3951  17D2  0827               	movf	RTC_DS1307_Get_Date@temp+6,w
  3952  17D3  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3953  17D8  00FF               	movwf	btemp+1
  3954  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  3955  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  3956  17DB  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3957  17DC  3E0A               	addlw	10
  3958  17DD  0084               	movwf	4
  3959  17DE  087F               	movf	btemp+1,w
  3960  17DF  1783               	bsf	3,7	;select IRP bank2
  3961  17E0  0080               	movwf	0
  3962  17E1                     l4406:
  3963                           
  3964                           ;RTC_DS1307.c: 78:     Date_Structure->Year[1] = RTC_DS1307_BCD_To_Decimal_LSB(temp.Year
      +                          );
  3965  17E1  0828               	movf	RTC_DS1307_Get_Date@temp+7,w
  3966  17E2  160A  158A  2710  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_LSB
  3967  17E7  00FF               	movwf	btemp+1
  3968  17E8  1283               	bcf	3,5	;RP0=0, select bank0
  3969  17E9  1303               	bcf	3,6	;RP1=0, select bank0
  3970  17EA  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3971  17EB  3E0D               	addlw	13
  3972  17EC  0084               	movwf	4
  3973  17ED  087F               	movf	btemp+1,w
  3974  17EE  1783               	bsf	3,7	;select IRP bank2
  3975  17EF  0080               	movwf	0
  3976  17F0                     l4408:
  3977                           
  3978                           ;RTC_DS1307.c: 79:     Date_Structure->Year[0] = RTC_DS1307_BCD_To_Decimal_MSB(temp.Year
      +                          );
  3979  17F0  0828               	movf	RTC_DS1307_Get_Date@temp+7,w
  3980  17F1  160A  158A  277A  160A  118A  	fcall	_RTC_DS1307_BCD_To_Decimal_MSB
  3981  17F6  00FF               	movwf	btemp+1
  3982  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  3983  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  3984  17F9  0820               	movf	RTC_DS1307_Get_Date@Date_Structure,w
  3985  17FA  3E0C               	addlw	12
  3986  17FB  0084               	movwf	4
  3987  17FC  087F               	movf	btemp+1,w
  3988  17FD  1783               	bsf	3,7	;select IRP bank2
  3989  17FE  0080               	movwf	0
  3990  17FF                     l552:
  3991  17FF  0008               	return
  3992  1800                     __end_of_RTC_DS1307_Get_Date:
  3993                           
  3994                           	psect	text11
  3995  10EE                     __ptext11:	
  3996 ;; *************** function _RTC_DS1307_Read *****************
  3997 ;; Defined at:
  3998 ;;		line 15 in file "RTC_DS1307.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  word_Address    1    wreg     unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  word_Address    1    4[COMMON] unsigned char 
  4003 ;;  temp_Device_    1    5[COMMON] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      unsigned char 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       0       0       0       0
  4014 ;;      Locals:         2       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    4
  4020 ;; This function calls:
  4021 ;;		_I2C_Read
  4022 ;;		_I2C_Start
  4023 ;;		_I2C_Stop
  4024 ;;		_I2C_Write
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;;		_RTC_DS1307_Get_Date
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _RTC_DS1307_Read
  4033  10EE                     _RTC_DS1307_Read:
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _RTC_DS1307_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4037                           ;RTC_DS1307_Read@word_Address stored from wreg
  4038  10EE  00F4               	movwf	RTC_DS1307_Read@word_Address
  4039  10EF                     l4106:
  4040                           
  4041                           ;RTC_DS1307.c: 17:     uint8_t temp_Device_Address;;RTC_DS1307.c: 18:     I2C_Start();
  4042  10EF  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  4043  10F4                     l4108:
  4044  10F4                     l4110:
  4045                           
  4046                           ;RTC_DS1307.c: 20:     I2C_Write(temp_Device_Address);
  4047  10F4  30D0               	movlw	208
  4048  10F5  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  4049  10FA                     l4112:
  4050                           
  4051                           ;RTC_DS1307.c: 21:     I2C_Write(word_Address);
  4052  10FA  0874               	movf	RTC_DS1307_Read@word_Address,w
  4053  10FB  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  4054  1100                     l4114:
  4055                           
  4056                           ;RTC_DS1307.c: 22:     I2C_Start();
  4057  1100  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  4058  1105                     l4116:
  4059                           
  4060                           ;RTC_DS1307.c: 24:     I2C_Write(temp_Device_Address);
  4061  1105  30D1               	movlw	209
  4062  1106  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  4063  110B                     l4118:
  4064                           
  4065                           ;RTC_DS1307.c: 25:     temp_Device_Address = I2C_Read();
  4066  110B  160A  118A  205C  160A  118A  	fcall	_I2C_Read
  4067  1110  00FF               	movwf	btemp+1
  4068  1111  087F               	movf	btemp+1,w
  4069  1112  00F5               	movwf	RTC_DS1307_Read@temp_Device_Address
  4070  1113                     l4120:
  4071                           
  4072                           ;RTC_DS1307.c: 26:     I2C_Stop();
  4073  1113  160A  158A  2707  160A  118A  	fcall	_I2C_Stop
  4074  1118                     l4122:
  4075                           
  4076                           ;RTC_DS1307.c: 27:     return (temp_Device_Address);
  4077  1118  0875               	movf	RTC_DS1307_Read@temp_Device_Address,w
  4078  1119                     l538:
  4079  1119  0008               	return
  4080  111A                     __end_of_RTC_DS1307_Read:
  4081                           
  4082                           	psect	text12
  4083  1F40                     __ptext12:	
  4084 ;; *************** function _RTC_DS1307_DOW_To_String *****************
  4085 ;; Defined at:
  4086 ;;		line 43 in file "RTC_DS1307.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  Day_Of_The_W    1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  Day_Of_The_W    1    6[COMMON] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      PTR unsigned char 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         1       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         1       0       0       0       0
  4104 ;;Total ram usage:        1 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		___bmul
  4109 ;; This function is called by:
  4110 ;;		_RTC_DS1307_Get_Date
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _RTC_DS1307_DOW_To_String
  4116  1F40                     _RTC_DS1307_DOW_To_String:
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _RTC_DS1307_DOW_To_String: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4120                           ;RTC_DS1307_DOW_To_String@Day_Of_The_Week_Integer stored from wreg
  4121  1F40  00F6               	movwf	RTC_DS1307_DOW_To_String@Day_Of_The_Week_Integer
  4122  1F41                     l4138:
  4123                           
  4124                           ;RTC_DS1307.c: 45:     return DOW_To_String[Day_Of_The_Week_Integer];
  4125  1F41  3003               	movlw	3
  4126  1F42  00FF               	movwf	btemp+1
  4127  1F43  087F               	movf	btemp+1,w
  4128  1F44  00F3               	movwf	___bmul@multiplicand
  4129  1F45  0876               	movf	RTC_DS1307_DOW_To_String@Day_Of_The_Week_Integer,w
  4130  1F46  160A  158A  27D3  160A  158A  	fcall	___bmul
  4131  1F4B  3E90               	addlw	(low (_DOW_To_String| (0+256)))& (0+255)
  4132  1F4C                     l547:
  4133  1F4C  0008               	return
  4134  1F4D                     __end_of_RTC_DS1307_DOW_To_String:
  4135                           
  4136                           	psect	text13
  4137  1F7A                     __ptext13:	
  4138 ;; *************** function _RTC_DS1307_BCD_To_Decimal_MSB *****************
  4139 ;; Defined at:
  4140 ;;		line 31 in file "RTC_DS1307.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  BCD_Number      1    wreg     unsigned char 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  BCD_Number      1    4[COMMON] unsigned char 
  4145 ;;  temp            1    5[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      unsigned char 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, btemp+1
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         2       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0
  4158 ;;      Totals:         3       0       0       0       0
  4159 ;;Total ram usage:        3 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_RTC_DS1307_Get_Date
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _RTC_DS1307_BCD_To_Decimal_MSB
  4171  1F7A                     _RTC_DS1307_BCD_To_Decimal_MSB:
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _RTC_DS1307_BCD_To_Decimal_MSB: [wreg+status,2+status,0+btemp+1]
  4175                           ;RTC_DS1307_BCD_To_Decimal_MSB@BCD_Number stored from wreg
  4176  1F7A  00F4               	movwf	RTC_DS1307_BCD_To_Decimal_MSB@BCD_Number
  4177  1F7B                     l4126:
  4178                           
  4179                           ;RTC_DS1307.c: 32:     uint8_t temp = (BCD_Number >> 4) + '0';
  4180  1F7B  0874               	movf	RTC_DS1307_BCD_To_Decimal_MSB@BCD_Number,w
  4181  1F7C  00F3               	movwf	??_RTC_DS1307_BCD_To_Decimal_MSB
  4182  1F7D  3004               	movlw	4
  4183  1F7E                     u2855:
  4184  1F7E  1003               	clrc
  4185  1F7F  0CF3               	rrf	??_RTC_DS1307_BCD_To_Decimal_MSB,f
  4186  1F80  3EFF               	addlw	-1
  4187  1F81  1D03               	skipz
  4188  1F82  2F7E               	goto	u2855
  4189  1F83  0873               	movf	??_RTC_DS1307_BCD_To_Decimal_MSB,w
  4190  1F84  3E30               	addlw	48
  4191  1F85  00FF               	movwf	btemp+1
  4192  1F86  087F               	movf	btemp+1,w
  4193  1F87  00F5               	movwf	RTC_DS1307_BCD_To_Decimal_MSB@temp
  4194  1F88                     l4128:
  4195                           
  4196                           ;RTC_DS1307.c: 34:     return (temp);
  4197  1F88  0875               	movf	RTC_DS1307_BCD_To_Decimal_MSB@temp,w
  4198  1F89                     l541:
  4199  1F89  0008               	return
  4200  1F8A                     __end_of_RTC_DS1307_BCD_To_Decimal_MSB:
  4201                           
  4202                           	psect	text14
  4203  1F10                     __ptext14:	
  4204 ;; *************** function _RTC_DS1307_BCD_To_Decimal_LSB *****************
  4205 ;; Defined at:
  4206 ;;		line 37 in file "RTC_DS1307.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  BCD_Number      1    wreg     unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  BCD_Number      1    3[COMMON] unsigned char 
  4211 ;;  temp            1    4[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      unsigned char 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, btemp+1
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4221 ;;      Params:         0       0       0       0       0
  4222 ;;      Locals:         2       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0
  4224 ;;      Totals:         2       0       0       0       0
  4225 ;;Total ram usage:        2 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_RTC_DS1307_Get_Date
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _RTC_DS1307_BCD_To_Decimal_LSB
  4237  1F10                     _RTC_DS1307_BCD_To_Decimal_LSB:
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _RTC_DS1307_BCD_To_Decimal_LSB: [wreg+status,2+status,0+btemp+1]
  4241                           ;RTC_DS1307_BCD_To_Decimal_LSB@BCD_Number stored from wreg
  4242  1F10  00F3               	movwf	RTC_DS1307_BCD_To_Decimal_LSB@BCD_Number
  4243  1F11                     l4132:
  4244                           
  4245                           ;RTC_DS1307.c: 38:     uint8_t temp = (BCD_Number & 0x0f) + '0';
  4246  1F11  0873               	movf	RTC_DS1307_BCD_To_Decimal_LSB@BCD_Number,w
  4247  1F12  390F               	andlw	15
  4248  1F13  3E30               	addlw	48
  4249  1F14  00FF               	movwf	btemp+1
  4250  1F15  087F               	movf	btemp+1,w
  4251  1F16  00F4               	movwf	RTC_DS1307_BCD_To_Decimal_LSB@temp
  4252  1F17                     l4134:
  4253                           
  4254                           ;RTC_DS1307.c: 40:     return (temp);
  4255  1F17  0874               	movf	RTC_DS1307_BCD_To_Decimal_LSB@temp,w
  4256  1F18                     l544:
  4257  1F18  0008               	return
  4258  1F19                     __end_of_RTC_DS1307_BCD_To_Decimal_LSB:
  4259                           
  4260                           	psect	text15
  4261  1094                     __ptext15:	
  4262 ;; *************** function _LCD_Init *****************
  4263 ;; Defined at:
  4264 ;;		line 6 in file "LCD.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0, pclath, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4278 ;;      Params:         0       0       0       0       0
  4279 ;;      Locals:         0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0
  4281 ;;      Totals:         0       0       0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    2
  4285 ;; This function calls:
  4286 ;;		_LCD_SendCMD
  4287 ;; This function is called by:
  4288 ;;		_main
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function _LCD_Init
  4294  1094                     _LCD_Init:
  4295  1094                     l4262:	
  4296                           ;incstack = 0
  4297                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4298                           
  4299                           
  4300                           ;LCD.c: 8:     TRISD = 0;
  4301  1094  1683               	bsf	3,5	;RP0=1, select bank1
  4302  1095  1303               	bcf	3,6	;RP1=0, select bank1
  4303  1096  0188               	clrf	8	;volatile
  4304  1097                     l4264:
  4305                           
  4306                           ;LCD.c: 9:     TRISEbits.TRISE2 = 0;
  4307  1097  1109               	bcf	9,2	;volatile
  4308  1098                     l4266:
  4309                           
  4310                           ;LCD.c: 10:     TRISEbits.TRISE1 = 0;
  4311  1098  1089               	bcf	9,1	;volatile
  4312  1099                     l4268:
  4313                           
  4314                           ;LCD.c: 13:     LCD_SendCMD((0x02));
  4315  1099  3002               	movlw	2
  4316  109A  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4317  109F                     l4270:
  4318                           
  4319                           ;LCD.c: 16:     LCD_SendCMD((0x28));
  4320  109F  3028               	movlw	40
  4321  10A0  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4322  10A5                     l4272:
  4323                           
  4324                           ;LCD.c: 21:     LCD_SendCMD((0x0C));
  4325  10A5  300C               	movlw	12
  4326  10A6  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4327  10AB                     l4274:
  4328                           
  4329                           ;LCD.c: 22:     LCD_SendCMD((0x01));
  4330  10AB  3001               	movlw	1
  4331  10AC  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4332  10B1                     l146:
  4333  10B1  0008               	return
  4334  10B2                     __end_of_LCD_Init:
  4335                           
  4336                           	psect	text16
  4337  07D5                     __ptext16:	
  4338 ;; *************** function _LCD_Display_Current_Event *****************
  4339 ;; Defined at:
  4340 ;;		line 72 in file "main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  Current_Even    1    wreg     unsigned char 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  Current_Even    1    7[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       0       0
  4355 ;;      Locals:         0       1       0       0       0
  4356 ;;      Temps:          0       0       0       0       0
  4357 ;;      Totals:         0       1       0       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    4
  4361 ;; This function calls:
  4362 ;;		_LCD_DisStrRC
  4363 ;;		___bmul
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _LCD_Display_Current_Event
  4371  07D5                     _LCD_Display_Current_Event:
  4372                           
  4373                           ;incstack = 0
  4374                           ; Regs used in _LCD_Display_Current_Event: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  4375                           ;LCD_Display_Current_Event@Current_Event stored from wreg
  4376  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  4377  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  4378  07D7  00A7               	movwf	LCD_Display_Current_Event@Current_Event
  4379  07D8                     l4286:
  4380                           
  4381                           ;main.c: 74:     LCD_DisStrRC(Events_Strings[Current_Event], 1, 11);
  4382  07D8  3003               	movlw	3
  4383  07D9  00FF               	movwf	btemp+1
  4384  07DA  087F               	movf	btemp+1,w
  4385  07DB  00F3               	movwf	___bmul@multiplicand
  4386  07DC  0827               	movf	LCD_Display_Current_Event@Current_Event,w
  4387  07DD  160A  158A  27D3  120A  118A  	fcall	___bmul
  4388  07E2  3E51               	addlw	(low (_Events_Strings| (0+256)))& (0+255)
  4389  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  4390  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  4391  07E5  00A3               	movwf	LCD_DisStrRC@str
  4392  07E6  3001               	movlw	1
  4393  07E7  00A4               	movwf	LCD_DisStrRC@str+1
  4394  07E8  01A5               	clrf	LCD_DisStrRC@row
  4395  07E9  0AA5               	incf	LCD_DisStrRC@row,f
  4396  07EA  300B               	movlw	11
  4397  07EB  00FF               	movwf	btemp+1
  4398  07EC  087F               	movf	btemp+1,w
  4399  07ED  00A6               	movwf	LCD_DisStrRC@column
  4400  07EE  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  4401  07F3                     l314:
  4402  07F3  0008               	return
  4403  07F4                     __end_of_LCD_Display_Current_Event:
  4404                           
  4405                           	psect	text17
  4406  1FD3                     __ptext17:	
  4407 ;; *************** function ___bmul *****************
  4408 ;; Defined at:
  4409 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  multiplier      1    wreg     unsigned char 
  4412 ;;  multiplicand    1    3[COMMON] unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  multiplier      1    5[COMMON] unsigned char 
  4415 ;;  product         1    4[COMMON] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      unsigned char 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, btemp+1
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         1       0       0       0       0
  4426 ;;      Locals:         2       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0
  4428 ;;      Totals:         3       0       0       0       0
  4429 ;;Total ram usage:        3 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_LCD_Display_Current_Event
  4436 ;;		_UART_Send_Current_Event
  4437 ;;		_main
  4438 ;;		_RTC_DS1307_DOW_To_String
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function ___bmul
  4444  1FD3                     ___bmul:
  4445                           
  4446                           ;incstack = 0
  4447                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  4448                           ;___bmul@multiplier stored from wreg
  4449  1FD3  00F5               	movwf	___bmul@multiplier
  4450  1FD4                     l4034:
  4451  1FD4  01F4               	clrf	___bmul@product
  4452  1FD5                     l4036:
  4453  1FD5  1C75               	btfss	___bmul@multiplier,0
  4454  1FD6  2FD8               	goto	u2821
  4455  1FD7  2FD9               	goto	u2820
  4456  1FD8                     u2821:
  4457  1FD8  2FDD               	goto	l4040
  4458  1FD9                     u2820:
  4459  1FD9                     l4038:
  4460  1FD9  0873               	movf	___bmul@multiplicand,w
  4461  1FDA  00FF               	movwf	btemp+1
  4462  1FDB  087F               	movf	btemp+1,w
  4463  1FDC  07F4               	addwf	___bmul@product,f
  4464  1FDD                     l4040:
  4465  1FDD  1003               	clrc
  4466  1FDE  0DF3               	rlf	___bmul@multiplicand,f
  4467  1FDF                     l4042:
  4468  1FDF  1003               	clrc
  4469  1FE0  0CF5               	rrf	___bmul@multiplier,f
  4470  1FE1                     l4044:
  4471  1FE1  0875               	movf	___bmul@multiplier,w
  4472  1FE2  1D03               	btfss	3,2
  4473  1FE3  2FE5               	goto	u2831
  4474  1FE4  2FE6               	goto	u2830
  4475  1FE5                     u2831:
  4476  1FE5  2FD5               	goto	l4036
  4477  1FE6                     u2830:
  4478  1FE6                     l4046:
  4479  1FE6  0874               	movf	___bmul@product,w
  4480  1FE7                     l664:
  4481  1FE7  0008               	return
  4482  1FE8                     __end_of___bmul:
  4483                           
  4484                           	psect	text18
  4485  102B                     __ptext18:	
  4486 ;; *************** function _LCD_DisStrRC *****************
  4487 ;; Defined at:
  4488 ;;		line 179 in file "LCD.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  str             2    3[BANK0 ] PTR unsigned char 
  4491 ;;		 -> passwordChangedSuccessfullymsg(8), Clear_Events_msg2(13), Clear_Events_msg1(16), LCD_NoLogsmsg(3), 
  4492 ;;		 -> LCD_Logsmsg(5), Main_Menu(65), Blocked_Sreen_Line1_msg(16), Blocked_Sreen_Line2_msg(15), 
  4493 ;;		 -> Password_Trails_msg(17), LCD_Time(9), LCD_Speedmsg(3), LCD_Eventmsg(2), 
  4494 ;;		 -> LCD_Timemsg(5), Passwordmsg(15), main@Adc_Str(5), Events_Strings(30), 
  4495 ;;  row             1    5[BANK0 ] unsigned char 
  4496 ;;  column          1    6[BANK0 ] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       4       0       0       0
  4509 ;;      Locals:         0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0
  4511 ;;      Totals:         0       4       0       0       0
  4512 ;;Total ram usage:        4 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    3
  4515 ;; This function calls:
  4516 ;;		_LCD_DisStr
  4517 ;;		_LCD_GotoRC
  4518 ;; This function is called by:
  4519 ;;		_LCD_Display_Current_Event
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _LCD_DisStrRC
  4526  102B                     _LCD_DisStrRC:
  4527  102B                     l4094:	
  4528                           ;incstack = 0
  4529                           ; Regs used in _LCD_DisStrRC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4530                           
  4531                           
  4532                           ;LCD.c: 180:     LCD_GotoRC(row, column);
  4533  102B  1283               	bcf	3,5	;RP0=0, select bank0
  4534  102C  1303               	bcf	3,6	;RP1=0, select bank0
  4535  102D  0826               	movf	LCD_DisStrRC@column,w
  4536  102E  00FF               	movwf	btemp+1
  4537  102F  087F               	movf	btemp+1,w
  4538  1030  00F6               	movwf	LCD_GotoRC@column
  4539  1031  0825               	movf	LCD_DisStrRC@row,w
  4540  1032  160A  118A  2013  160A  118A  	fcall	_LCD_GotoRC
  4541  1037                     l4096:
  4542                           
  4543                           ;LCD.c: 181:     LCD_DisStr(str);
  4544  1037  1283               	bcf	3,5	;RP0=0, select bank0
  4545  1038  1303               	bcf	3,6	;RP1=0, select bank0
  4546  1039  0823               	movf	LCD_DisStrRC@str,w
  4547  103A  00F6               	movwf	LCD_DisStr@str
  4548  103B  0824               	movf	LCD_DisStrRC@str+1,w
  4549  103C  00F7               	movwf	LCD_DisStr@str+1
  4550  103D  160A  118A  2148  160A  118A  	fcall	_LCD_DisStr
  4551  1042                     l171:
  4552  1042  0008               	return
  4553  1043                     __end_of_LCD_DisStrRC:
  4554                           
  4555                           	psect	text19
  4556  1013                     __ptext19:	
  4557 ;; *************** function _LCD_GotoRC *****************
  4558 ;; Defined at:
  4559 ;;		line 169 in file "LCD.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  row             1    wreg     unsigned char 
  4562 ;;  column          1    6[COMMON] unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  row             1    7[COMMON] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         1       0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         2       0       0       0       0
  4578 ;;Total ram usage:        2 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    2
  4581 ;; This function calls:
  4582 ;;		_LCD_SendCMD
  4583 ;; This function is called by:
  4584 ;;		_LCD_DisStrRC
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _LCD_GotoRC
  4591  1013                     _LCD_GotoRC:
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _LCD_GotoRC: [wreg+status,2+status,0+pclath+cstack]
  4595                           ;LCD_GotoRC@row stored from wreg
  4596  1013  00F7               	movwf	LCD_GotoRC@row
  4597  1014                     l4024:
  4598                           
  4599                           ;LCD.c: 170:     if (row == 0)
  4600  1014  0877               	movf	LCD_GotoRC@row,w
  4601  1015  1D03               	btfss	3,2
  4602  1016  2818               	goto	u2801
  4603  1017  2819               	goto	u2800
  4604  1018                     u2801:
  4605  1018  2822               	goto	l4028
  4606  1019                     u2800:
  4607  1019                     l4026:
  4608                           
  4609                           ;LCD.c: 171:         LCD_SendCMD((0x80) | (row + column));
  4610  1019  0876               	movf	LCD_GotoRC@column,w
  4611  101A  0777               	addwf	LCD_GotoRC@row,w
  4612  101B  3880               	iorlw	128
  4613  101C  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4614  1021  282A               	goto	l168
  4615  1022                     l4028:
  4616                           
  4617                           ;LCD.c: 174:         LCD_SendCMD((0x80) | (column + 0x40));
  4618  1022  0876               	movf	LCD_GotoRC@column,w
  4619  1023  3E40               	addlw	64
  4620  1024  3880               	iorlw	128
  4621  1025  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  4622  102A                     l168:
  4623  102A  0008               	return
  4624  102B                     __end_of_LCD_GotoRC:
  4625                           
  4626                           	psect	text20
  4627  138B                     __ptext20:	
  4628 ;; *************** function _LCD_SendCMD *****************
  4629 ;; Defined at:
  4630 ;;		line 28 in file "LCD.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  COMMAND         1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  COMMAND         1    5[COMMON] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         0       0       0       0       0
  4645 ;;      Locals:         1       0       0       0       0
  4646 ;;      Temps:          2       0       0       0       0
  4647 ;;      Totals:         3       0       0       0       0
  4648 ;;Total ram usage:        3 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_LCD_Init
  4655 ;;		_LCD_GotoRC
  4656 ;;		_main
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _LCD_SendCMD
  4662  138B                     _LCD_SendCMD:
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _LCD_SendCMD: [wreg+status,2+status,0]
  4666                           ;LCD_SendCMD@COMMAND stored from wreg
  4667  138B  00F5               	movwf	LCD_SendCMD@COMMAND
  4668  138C                     l3934:
  4669                           
  4670                           ;LCD.c: 30:     RE2 = 0;
  4671  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4672  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4673  138E  1109               	bcf	9,2	;volatile
  4674  138F                     l3936:
  4675                           
  4676                           ;LCD.c: 31:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4677  138F  3003               	movlw	3
  4678  1390  00F4               	movwf	??_LCD_SendCMD+1
  4679  1391  3097               	movlw	151
  4680  1392  00F3               	movwf	??_LCD_SendCMD
  4681  1393                     u4147:
  4682  1393  0BF3               	decfsz	??_LCD_SendCMD,f
  4683  1394  2B93               	goto	u4147
  4684  1395  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4685  1396  2B93               	goto	u4147
  4686  1397  2B98               	nop2
  4687  1398                     l3938:
  4688                           
  4689                           ;LCD.c: 35:     RE1 = 1;
  4690  1398  1283               	bcf	3,5	;RP0=0, select bank0
  4691  1399  1303               	bcf	3,6	;RP1=0, select bank0
  4692  139A  1489               	bsf	9,1	;volatile
  4693                           
  4694                           ;LCD.c: 36:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4695  139B  3003               	movlw	3
  4696  139C  00F4               	movwf	??_LCD_SendCMD+1
  4697  139D  3097               	movlw	151
  4698  139E  00F3               	movwf	??_LCD_SendCMD
  4699  139F                     u4157:
  4700  139F  0BF3               	decfsz	??_LCD_SendCMD,f
  4701  13A0  2B9F               	goto	u4157
  4702  13A1  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4703  13A2  2B9F               	goto	u4157
  4704  13A3  2BA4               	nop2
  4705  13A4                     l3940:
  4706                           
  4707                           ;LCD.c: 38:     PORTD = (COMMAND & 0xF0);
  4708  13A4  0875               	movf	LCD_SendCMD@COMMAND,w
  4709  13A5  39F0               	andlw	240
  4710  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  4711  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  4712  13A8  0088               	movwf	8	;volatile
  4713  13A9                     l3942:
  4714                           
  4715                           ;LCD.c: 39:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4716  13A9  3003               	movlw	3
  4717  13AA  00F4               	movwf	??_LCD_SendCMD+1
  4718  13AB  3097               	movlw	151
  4719  13AC  00F3               	movwf	??_LCD_SendCMD
  4720  13AD                     u4167:
  4721  13AD  0BF3               	decfsz	??_LCD_SendCMD,f
  4722  13AE  2BAD               	goto	u4167
  4723  13AF  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4724  13B0  2BAD               	goto	u4167
  4725  13B1  2BB2               	nop2
  4726  13B2                     l3944:
  4727                           
  4728                           ;LCD.c: 41:     RE1 = 0;
  4729  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  4730  13B3  1303               	bcf	3,6	;RP1=0, select bank0
  4731  13B4  1089               	bcf	9,1	;volatile
  4732  13B5                     l3946:
  4733                           
  4734                           ;LCD.c: 42:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4735  13B5  3003               	movlw	3
  4736  13B6  00F4               	movwf	??_LCD_SendCMD+1
  4737  13B7  3097               	movlw	151
  4738  13B8  00F3               	movwf	??_LCD_SendCMD
  4739  13B9                     u4177:
  4740  13B9  0BF3               	decfsz	??_LCD_SendCMD,f
  4741  13BA  2BB9               	goto	u4177
  4742  13BB  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4743  13BC  2BB9               	goto	u4177
  4744  13BD  2BBE               	nop2
  4745  13BE                     l3948:
  4746                           
  4747                           ;LCD.c: 45:     RE1 = 1;
  4748  13BE  1283               	bcf	3,5	;RP0=0, select bank0
  4749  13BF  1303               	bcf	3,6	;RP1=0, select bank0
  4750  13C0  1489               	bsf	9,1	;volatile
  4751  13C1                     l3950:
  4752                           
  4753                           ;LCD.c: 46:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4754  13C1  3003               	movlw	3
  4755  13C2  00F4               	movwf	??_LCD_SendCMD+1
  4756  13C3  3097               	movlw	151
  4757  13C4  00F3               	movwf	??_LCD_SendCMD
  4758  13C5                     u4187:
  4759  13C5  0BF3               	decfsz	??_LCD_SendCMD,f
  4760  13C6  2BC5               	goto	u4187
  4761  13C7  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4762  13C8  2BC5               	goto	u4187
  4763  13C9  2BCA               	nop2
  4764  13CA                     l3952:
  4765                           
  4766                           ;LCD.c: 48:     PORTD = ((COMMAND << 4) & 0xF0);
  4767  13CA  0875               	movf	LCD_SendCMD@COMMAND,w
  4768  13CB  00F3               	movwf	??_LCD_SendCMD
  4769  13CC  3003               	movlw	3
  4770  13CD                     u2775:
  4771  13CD  1003               	clrc
  4772  13CE  0DF3               	rlf	??_LCD_SendCMD,f
  4773  13CF  3EFF               	addlw	-1
  4774  13D0  1D03               	skipz
  4775  13D1  2BCD               	goto	u2775
  4776  13D2  1003               	clrc
  4777  13D3  0D73               	rlf	??_LCD_SendCMD,w
  4778  13D4  39F0               	andlw	240
  4779  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  4780  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  4781  13D7  0088               	movwf	8	;volatile
  4782  13D8                     l3954:
  4783                           
  4784                           ;LCD.c: 49:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4785  13D8  3003               	movlw	3
  4786  13D9  00F4               	movwf	??_LCD_SendCMD+1
  4787  13DA  3097               	movlw	151
  4788  13DB  00F3               	movwf	??_LCD_SendCMD
  4789  13DC                     u4197:
  4790  13DC  0BF3               	decfsz	??_LCD_SendCMD,f
  4791  13DD  2BDC               	goto	u4197
  4792  13DE  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4793  13DF  2BDC               	goto	u4197
  4794  13E0  2BE1               	nop2
  4795  13E1                     l3956:
  4796                           
  4797                           ;LCD.c: 51:     RE1 = 0;
  4798  13E1  1283               	bcf	3,5	;RP0=0, select bank0
  4799  13E2  1303               	bcf	3,6	;RP1=0, select bank0
  4800  13E3  1089               	bcf	9,1	;volatile
  4801  13E4                     l3958:
  4802                           
  4803                           ;LCD.c: 52:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4804  13E4  3003               	movlw	3
  4805  13E5  00F4               	movwf	??_LCD_SendCMD+1
  4806  13E6  3097               	movlw	151
  4807  13E7  00F3               	movwf	??_LCD_SendCMD
  4808  13E8                     u4207:
  4809  13E8  0BF3               	decfsz	??_LCD_SendCMD,f
  4810  13E9  2BE8               	goto	u4207
  4811  13EA  0BF4               	decfsz	??_LCD_SendCMD+1,f
  4812  13EB  2BE8               	goto	u4207
  4813  13EC  2BED               	nop2
  4814  13ED                     l149:
  4815  13ED  0008               	return
  4816  13EE                     __end_of_LCD_SendCMD:
  4817                           
  4818                           	psect	text21
  4819  1148                     __ptext21:	
  4820 ;; *************** function _LCD_DisStr *****************
  4821 ;; Defined at:
  4822 ;;		line 110 in file "LCD.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  str             2    6[COMMON] PTR unsigned char 
  4825 ;;		 -> passwordChangedSuccessfullymsg(8), Clear_Events_msg2(13), Clear_Events_msg1(16), LCD_NoLogsmsg(3), 
  4826 ;;		 -> LCD_Logsmsg(5), Main_Menu(65), Blocked_Sreen_Line1_msg(16), Blocked_Sreen_Line2_msg(15), 
  4827 ;;		 -> Password_Trails_msg(17), LCD_Time(9), LCD_Speedmsg(3), LCD_Eventmsg(2), 
  4828 ;;		 -> LCD_Timemsg(5), Passwordmsg(15), main@Adc_Str(5), Events_Strings(30), 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  i               1    2[BANK0 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4840 ;;      Params:         2       0       0       0       0
  4841 ;;      Locals:         0       1       0       0       0
  4842 ;;      Temps:          0       2       0       0       0
  4843 ;;      Totals:         2       3       0       0       0
  4844 ;;Total ram usage:        5 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    2
  4847 ;; This function calls:
  4848 ;;		_LCD_DisChar
  4849 ;; This function is called by:
  4850 ;;		_LCD_DisStrRC
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _LCD_DisStr
  4856  1148                     _LCD_DisStr:
  4857  1148                     l4016:	
  4858                           ;incstack = 0
  4859                           ; Regs used in _LCD_DisStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4860                           
  4861                           
  4862                           ;LCD.c: 111:     uint8_t i = 0;
  4863  1148  1283               	bcf	3,5	;RP0=0, select bank0
  4864  1149  1303               	bcf	3,6	;RP1=0, select bank0
  4865  114A  01A2               	clrf	LCD_DisStr@i
  4866                           
  4867                           ;LCD.c: 113:     while (str[i] != 0) {
  4868  114B  2964               	goto	l4022
  4869  114C                     l4018:
  4870                           
  4871                           ;LCD.c: 114:         LCD_DisChar(str[i]);
  4872  114C  0822               	movf	LCD_DisStr@i,w
  4873  114D  0776               	addwf	LCD_DisStr@str,w
  4874  114E  00A0               	movwf	??_LCD_DisStr
  4875  114F  0877               	movf	LCD_DisStr@str+1,w
  4876  1150  1803               	skipnc
  4877  1151  3E01               	addlw	1
  4878  1152  00A1               	movwf	??_LCD_DisStr+1
  4879  1153  0820               	movf	??_LCD_DisStr,w
  4880  1154  0084               	movwf	4
  4881  1155  1783               	bsf	3,7
  4882  1156  1C21               	btfss	??_LCD_DisStr+1,0
  4883  1157  1383               	bcf	3,7
  4884  1158  0800               	movf	0,w
  4885  1159  160A  118A  2328  160A  118A  	fcall	_LCD_DisChar
  4886  115E                     l4020:
  4887                           
  4888                           ;LCD.c: 115:         i++;
  4889  115E  3001               	movlw	1
  4890  115F  00FF               	movwf	btemp+1
  4891  1160  087F               	movf	btemp+1,w
  4892  1161  1283               	bcf	3,5	;RP0=0, select bank0
  4893  1162  1303               	bcf	3,6	;RP1=0, select bank0
  4894  1163  07A2               	addwf	LCD_DisStr@i,f
  4895  1164                     l4022:
  4896                           
  4897                           ;LCD.c: 113:     while (str[i] != 0) {
  4898  1164  0822               	movf	LCD_DisStr@i,w
  4899  1165  0776               	addwf	LCD_DisStr@str,w
  4900  1166  00A0               	movwf	??_LCD_DisStr
  4901  1167  0877               	movf	LCD_DisStr@str+1,w
  4902  1168  1803               	skipnc
  4903  1169  3E01               	addlw	1
  4904  116A  00A1               	movwf	??_LCD_DisStr+1
  4905  116B  0820               	movf	??_LCD_DisStr,w
  4906  116C  0084               	movwf	4
  4907  116D  1783               	bsf	3,7
  4908  116E  1C21               	btfss	??_LCD_DisStr+1,0
  4909  116F  1383               	bcf	3,7
  4910  1170  0800               	movf	0,w
  4911  1171  1D03               	btfss	3,2
  4912  1172  2974               	goto	u2791
  4913  1173  2975               	goto	u2790
  4914  1174                     u2791:
  4915  1174  294C               	goto	l4018
  4916  1175                     u2790:
  4917  1175                     l158:
  4918  1175  0008               	return
  4919  1176                     __end_of_LCD_DisStr:
  4920                           
  4921                           	psect	text22
  4922  1328                     __ptext22:	
  4923 ;; *************** function _LCD_DisChar *****************
  4924 ;; Defined at:
  4925 ;;		line 70 in file "LCD.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  DATA            1    wreg     unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  DATA            1    5[COMMON] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4939 ;;      Params:         0       0       0       0       0
  4940 ;;      Locals:         1       0       0       0       0
  4941 ;;      Temps:          2       0       0       0       0
  4942 ;;      Totals:         3       0       0       0       0
  4943 ;;Total ram usage:        3 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_LCD_DisStr
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _LCD_DisChar
  4956  1328                     _LCD_DisChar:
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _LCD_DisChar: [wreg+status,2+status,0]
  4960                           ;LCD_DisChar@DATA stored from wreg
  4961  1328  00F5               	movwf	LCD_DisChar@DATA
  4962  1329                     l3960:
  4963                           
  4964                           ;LCD.c: 71:     RE2 = 1;
  4965  1329  1283               	bcf	3,5	;RP0=0, select bank0
  4966  132A  1303               	bcf	3,6	;RP1=0, select bank0
  4967  132B  1509               	bsf	9,2	;volatile
  4968  132C                     l3962:
  4969                           
  4970                           ;LCD.c: 72:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4971  132C  3003               	movlw	3
  4972  132D  00F4               	movwf	??_LCD_DisChar+1
  4973  132E  3097               	movlw	151
  4974  132F  00F3               	movwf	??_LCD_DisChar
  4975  1330                     u4217:
  4976  1330  0BF3               	decfsz	??_LCD_DisChar,f
  4977  1331  2B30               	goto	u4217
  4978  1332  0BF4               	decfsz	??_LCD_DisChar+1,f
  4979  1333  2B30               	goto	u4217
  4980  1334  2B35               	nop2
  4981  1335                     l3964:
  4982                           
  4983                           ;LCD.c: 76:     RE1 = 1;
  4984  1335  1283               	bcf	3,5	;RP0=0, select bank0
  4985  1336  1303               	bcf	3,6	;RP1=0, select bank0
  4986  1337  1489               	bsf	9,1	;volatile
  4987                           
  4988                           ;LCD.c: 77:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  4989  1338  3003               	movlw	3
  4990  1339  00F4               	movwf	??_LCD_DisChar+1
  4991  133A  3097               	movlw	151
  4992  133B  00F3               	movwf	??_LCD_DisChar
  4993  133C                     u4227:
  4994  133C  0BF3               	decfsz	??_LCD_DisChar,f
  4995  133D  2B3C               	goto	u4227
  4996  133E  0BF4               	decfsz	??_LCD_DisChar+1,f
  4997  133F  2B3C               	goto	u4227
  4998  1340  2B41               	nop2
  4999  1341                     l3966:
  5000                           
  5001                           ;LCD.c: 79:     PORTD = (DATA & 0xF0);
  5002  1341  0875               	movf	LCD_DisChar@DATA,w
  5003  1342  39F0               	andlw	240
  5004  1343  1283               	bcf	3,5	;RP0=0, select bank0
  5005  1344  1303               	bcf	3,6	;RP1=0, select bank0
  5006  1345  0088               	movwf	8	;volatile
  5007  1346                     l3968:
  5008                           
  5009                           ;LCD.c: 80:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  5010  1346  3003               	movlw	3
  5011  1347  00F4               	movwf	??_LCD_DisChar+1
  5012  1348  3097               	movlw	151
  5013  1349  00F3               	movwf	??_LCD_DisChar
  5014  134A                     u4237:
  5015  134A  0BF3               	decfsz	??_LCD_DisChar,f
  5016  134B  2B4A               	goto	u4237
  5017  134C  0BF4               	decfsz	??_LCD_DisChar+1,f
  5018  134D  2B4A               	goto	u4237
  5019  134E  2B4F               	nop2
  5020  134F                     l3970:
  5021                           
  5022                           ;LCD.c: 82:     RE1 = 0;
  5023  134F  1283               	bcf	3,5	;RP0=0, select bank0
  5024  1350  1303               	bcf	3,6	;RP1=0, select bank0
  5025  1351  1089               	bcf	9,1	;volatile
  5026  1352                     l3972:
  5027                           
  5028                           ;LCD.c: 83:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  5029  1352  3003               	movlw	3
  5030  1353  00F4               	movwf	??_LCD_DisChar+1
  5031  1354  3097               	movlw	151
  5032  1355  00F3               	movwf	??_LCD_DisChar
  5033  1356                     u4247:
  5034  1356  0BF3               	decfsz	??_LCD_DisChar,f
  5035  1357  2B56               	goto	u4247
  5036  1358  0BF4               	decfsz	??_LCD_DisChar+1,f
  5037  1359  2B56               	goto	u4247
  5038  135A  2B5B               	nop2
  5039  135B                     l3974:
  5040                           
  5041                           ;LCD.c: 85:     RE1 = 1;
  5042  135B  1283               	bcf	3,5	;RP0=0, select bank0
  5043  135C  1303               	bcf	3,6	;RP1=0, select bank0
  5044  135D  1489               	bsf	9,1	;volatile
  5045  135E                     l3976:
  5046                           
  5047                           ;LCD.c: 86:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  5048  135E  3003               	movlw	3
  5049  135F  00F4               	movwf	??_LCD_DisChar+1
  5050  1360  3097               	movlw	151
  5051  1361  00F3               	movwf	??_LCD_DisChar
  5052  1362                     u4257:
  5053  1362  0BF3               	decfsz	??_LCD_DisChar,f
  5054  1363  2B62               	goto	u4257
  5055  1364  0BF4               	decfsz	??_LCD_DisChar+1,f
  5056  1365  2B62               	goto	u4257
  5057  1366  2B67               	nop2
  5058  1367                     l3978:
  5059                           
  5060                           ;LCD.c: 88:     PORTD = ((DATA << 4) & 0xF0);
  5061  1367  0875               	movf	LCD_DisChar@DATA,w
  5062  1368  00F3               	movwf	??_LCD_DisChar
  5063  1369  3003               	movlw	3
  5064  136A                     u2785:
  5065  136A  1003               	clrc
  5066  136B  0DF3               	rlf	??_LCD_DisChar,f
  5067  136C  3EFF               	addlw	-1
  5068  136D  1D03               	skipz
  5069  136E  2B6A               	goto	u2785
  5070  136F  1003               	clrc
  5071  1370  0D73               	rlf	??_LCD_DisChar,w
  5072  1371  39F0               	andlw	240
  5073  1372  1283               	bcf	3,5	;RP0=0, select bank0
  5074  1373  1303               	bcf	3,6	;RP1=0, select bank0
  5075  1374  0088               	movwf	8	;volatile
  5076  1375                     l3980:
  5077                           
  5078                           ;LCD.c: 89:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  5079  1375  3003               	movlw	3
  5080  1376  00F4               	movwf	??_LCD_DisChar+1
  5081  1377  3097               	movlw	151
  5082  1378  00F3               	movwf	??_LCD_DisChar
  5083  1379                     u4267:
  5084  1379  0BF3               	decfsz	??_LCD_DisChar,f
  5085  137A  2B79               	goto	u4267
  5086  137B  0BF4               	decfsz	??_LCD_DisChar+1,f
  5087  137C  2B79               	goto	u4267
  5088  137D  2B7E               	nop2
  5089  137E                     l3982:
  5090                           
  5091                           ;LCD.c: 91:     RE1 = 0;
  5092  137E  1283               	bcf	3,5	;RP0=0, select bank0
  5093  137F  1303               	bcf	3,6	;RP1=0, select bank0
  5094  1380  1089               	bcf	9,1	;volatile
  5095  1381                     l3984:
  5096                           
  5097                           ;LCD.c: 92:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  5098  1381  3003               	movlw	3
  5099  1382  00F4               	movwf	??_LCD_DisChar+1
  5100  1383  3097               	movlw	151
  5101  1384  00F3               	movwf	??_LCD_DisChar
  5102  1385                     u4277:
  5103  1385  0BF3               	decfsz	??_LCD_DisChar,f
  5104  1386  2B85               	goto	u4277
  5105  1387  0BF4               	decfsz	??_LCD_DisChar+1,f
  5106  1388  2B85               	goto	u4277
  5107  1389  2B8A               	nop2
  5108  138A                     l152:
  5109  138A  0008               	return
  5110  138B                     __end_of_LCD_DisChar:
  5111                           
  5112                           	psect	text23
  5113  14BF                     __ptext23:	
  5114 ;; *************** function _LCD_2DigitIntToStr *****************
  5115 ;; Defined at:
  5116 ;;		line 120 in file "LCD.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  Integer         1    wreg     char 
  5119 ;;  str             1    4[BANK0 ] PTR unsigned char 
  5120 ;;		 -> main@Adc_Str(5), 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  Integer         1    7[COMMON] char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         0       1       0       0       0
  5133 ;;      Locals:         1       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         1       1       0       0       0
  5136 ;;Total ram usage:        2 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    2
  5139 ;; This function calls:
  5140 ;;		___awdiv
  5141 ;;		___awmod
  5142 ;; This function is called by:
  5143 ;;		_main
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _LCD_2DigitIntToStr
  5149  14BF                     _LCD_2DigitIntToStr:
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _LCD_2DigitIntToStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5153                           ;LCD_2DigitIntToStr@Integer stored from wreg
  5154  14BF  00F7               	movwf	LCD_2DigitIntToStr@Integer
  5155  14C0                     l4276:
  5156                           
  5157                           ;LCD.c: 122:     if ((Integer / 10) == 0) {
  5158  14C0  300A               	movlw	10
  5159  14C1  00F3               	movwf	___awdiv@divisor
  5160  14C2  3000               	movlw	0
  5161  14C3  00F4               	movwf	___awdiv@divisor+1
  5162  14C4  0877               	movf	LCD_2DigitIntToStr@Integer,w
  5163  14C5  00F5               	movwf	___awdiv@dividend
  5164  14C6  01F6               	clrf	___awdiv@dividend+1
  5165  14C7  1BF5               	btfsc	___awdiv@dividend,7
  5166  14C8  03F6               	decf	___awdiv@dividend+1,f
  5167  14C9  160A  118A  2456  160A  118A  	fcall	___awdiv
  5168  14CE  0873               	movf	?___awdiv,w
  5169  14CF  0474               	iorwf	?___awdiv+1,w
  5170  14D0  1D03               	btfss	3,2
  5171  14D1  2CD3               	goto	u3081
  5172  14D2  2CD4               	goto	u3080
  5173  14D3                     u3081:
  5174  14D3  2CF6               	goto	l4282
  5175  14D4                     u3080:
  5176  14D4                     l4278:
  5177                           
  5178                           ;LCD.c: 123:         str[0] = '0';
  5179  14D4  3030               	movlw	48
  5180  14D5  00FF               	movwf	btemp+1
  5181  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  5182  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  5183  14D8  0824               	movf	LCD_2DigitIntToStr@str,w
  5184  14D9  0084               	movwf	4
  5185  14DA  087F               	movf	btemp+1,w
  5186  14DB  1383               	bcf	3,7	;select IRP bank0
  5187  14DC  0080               	movwf	0
  5188  14DD                     l4280:
  5189                           
  5190                           ;LCD.c: 124:         str[1] = (Integer % 10) + 0x30;
  5191  14DD  300A               	movlw	10
  5192  14DE  00F3               	movwf	___awmod@divisor
  5193  14DF  3000               	movlw	0
  5194  14E0  00F4               	movwf	___awmod@divisor+1
  5195  14E1  0877               	movf	LCD_2DigitIntToStr@Integer,w
  5196  14E2  00F5               	movwf	___awmod@dividend
  5197  14E3  01F6               	clrf	___awmod@dividend+1
  5198  14E4  1BF5               	btfsc	___awmod@dividend,7
  5199  14E5  03F6               	decf	___awmod@dividend+1,f
  5200  14E6  160A  118A  226E  160A  118A  	fcall	___awmod
  5201  14EB  0873               	movf	?___awmod,w
  5202  14EC  3E30               	addlw	48
  5203  14ED  00FF               	movwf	btemp+1
  5204  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  5205  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  5206  14F0  0A24               	incf	LCD_2DigitIntToStr@str,w
  5207  14F1  0084               	movwf	4
  5208  14F2  087F               	movf	btemp+1,w
  5209  14F3  1383               	bcf	3,7	;select IRP bank0
  5210  14F4  0080               	movwf	0
  5211                           
  5212                           ;LCD.c: 125:     } else {
  5213  14F5  2D26               	goto	l4284
  5214  14F6                     l4282:
  5215                           
  5216                           ;LCD.c: 126:         str[0] = (Integer / 10) + 0x30;
  5217  14F6  300A               	movlw	10
  5218  14F7  00F3               	movwf	___awdiv@divisor
  5219  14F8  3000               	movlw	0
  5220  14F9  00F4               	movwf	___awdiv@divisor+1
  5221  14FA  0877               	movf	LCD_2DigitIntToStr@Integer,w
  5222  14FB  00F5               	movwf	___awdiv@dividend
  5223  14FC  01F6               	clrf	___awdiv@dividend+1
  5224  14FD  1BF5               	btfsc	___awdiv@dividend,7
  5225  14FE  03F6               	decf	___awdiv@dividend+1,f
  5226  14FF  160A  118A  2456  160A  118A  	fcall	___awdiv
  5227  1504  0873               	movf	?___awdiv,w
  5228  1505  3E30               	addlw	48
  5229  1506  00FF               	movwf	btemp+1
  5230  1507  1283               	bcf	3,5	;RP0=0, select bank0
  5231  1508  1303               	bcf	3,6	;RP1=0, select bank0
  5232  1509  0824               	movf	LCD_2DigitIntToStr@str,w
  5233  150A  0084               	movwf	4
  5234  150B  087F               	movf	btemp+1,w
  5235  150C  1383               	bcf	3,7	;select IRP bank0
  5236  150D  0080               	movwf	0
  5237                           
  5238                           ;LCD.c: 127:         str[1] = (Integer % 10) + 0x30;
  5239  150E  300A               	movlw	10
  5240  150F  00F3               	movwf	___awmod@divisor
  5241  1510  3000               	movlw	0
  5242  1511  00F4               	movwf	___awmod@divisor+1
  5243  1512  0877               	movf	LCD_2DigitIntToStr@Integer,w
  5244  1513  00F5               	movwf	___awmod@dividend
  5245  1514  01F6               	clrf	___awmod@dividend+1
  5246  1515  1BF5               	btfsc	___awmod@dividend,7
  5247  1516  03F6               	decf	___awmod@dividend+1,f
  5248  1517  160A  118A  226E  160A  118A  	fcall	___awmod
  5249  151C  0873               	movf	?___awmod,w
  5250  151D  3E30               	addlw	48
  5251  151E  00FF               	movwf	btemp+1
  5252  151F  1283               	bcf	3,5	;RP0=0, select bank0
  5253  1520  1303               	bcf	3,6	;RP1=0, select bank0
  5254  1521  0A24               	incf	LCD_2DigitIntToStr@str,w
  5255  1522  0084               	movwf	4
  5256  1523  087F               	movf	btemp+1,w
  5257  1524  1383               	bcf	3,7	;select IRP bank0
  5258  1525  0080               	movwf	0
  5259  1526                     l4284:
  5260                           
  5261                           ;LCD.c: 130:     str[2] = 0;
  5262  1526  0824               	movf	LCD_2DigitIntToStr@str,w
  5263  1527  3E02               	addlw	2
  5264  1528  0084               	movwf	4
  5265  1529  0180               	clrf	0
  5266  152A                     l163:
  5267  152A  0008               	return
  5268  152B                     __end_of_LCD_2DigitIntToStr:
  5269                           
  5270                           	psect	text24
  5271  126E                     __ptext24:	
  5272 ;; *************** function ___awmod *****************
  5273 ;; Defined at:
  5274 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  divisor         2    3[COMMON] int 
  5277 ;;  dividend        2    5[COMMON] int 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  sign            1    1[BANK0 ] unsigned char 
  5280 ;;  counter         1    0[BANK0 ] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    3[COMMON] int 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0, btemp+1
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5290 ;;      Params:         4       0       0       0       0
  5291 ;;      Locals:         0       2       0       0       0
  5292 ;;      Temps:          0       0       0       0       0
  5293 ;;      Totals:         4       2       0       0       0
  5294 ;;Total ram usage:        6 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_LCD_2DigitIntToStr
  5301 ;;		_main
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function ___awmod
  5307  126E                     ___awmod:
  5308  126E                     l4186:	
  5309                           ;incstack = 0
  5310                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5311                           
  5312  126E  1283               	bcf	3,5	;RP0=0, select bank0
  5313  126F  1303               	bcf	3,6	;RP1=0, select bank0
  5314  1270  01A1               	clrf	___awmod@sign
  5315  1271                     l4188:
  5316  1271  1FF6               	btfss	___awmod@dividend+1,7
  5317  1272  2A74               	goto	u2961
  5318  1273  2A75               	goto	u2960
  5319  1274                     u2961:
  5320  1274  2A7C               	goto	l4194
  5321  1275                     u2960:
  5322  1275                     l4190:
  5323  1275  09F5               	comf	___awmod@dividend,f
  5324  1276  09F6               	comf	___awmod@dividend+1,f
  5325  1277  0AF5               	incf	___awmod@dividend,f
  5326  1278  1903               	skipnz
  5327  1279  0AF6               	incf	___awmod@dividend+1,f
  5328  127A                     l4192:
  5329  127A  01A1               	clrf	___awmod@sign
  5330  127B  0AA1               	incf	___awmod@sign,f
  5331  127C                     l4194:
  5332  127C  1FF4               	btfss	___awmod@divisor+1,7
  5333  127D  2A7F               	goto	u2971
  5334  127E  2A80               	goto	u2970
  5335  127F                     u2971:
  5336  127F  2A85               	goto	l4198
  5337  1280                     u2970:
  5338  1280                     l4196:
  5339  1280  09F3               	comf	___awmod@divisor,f
  5340  1281  09F4               	comf	___awmod@divisor+1,f
  5341  1282  0AF3               	incf	___awmod@divisor,f
  5342  1283  1903               	skipnz
  5343  1284  0AF4               	incf	___awmod@divisor+1,f
  5344  1285                     l4198:
  5345  1285  0873               	movf	___awmod@divisor,w
  5346  1286  0474               	iorwf	___awmod@divisor+1,w
  5347  1287  1903               	btfsc	3,2
  5348  1288  2A8A               	goto	u2981
  5349  1289  2A8B               	goto	u2980
  5350  128A                     u2981:
  5351  128A  2ABA               	goto	l4216
  5352  128B                     u2980:
  5353  128B                     l4200:
  5354  128B  01A0               	clrf	___awmod@counter
  5355  128C  0AA0               	incf	___awmod@counter,f
  5356  128D  2A99               	goto	l4206
  5357  128E                     l4202:
  5358  128E  3001               	movlw	1
  5359  128F                     u2995:
  5360  128F  1003               	clrc
  5361  1290  0DF3               	rlf	___awmod@divisor,f
  5362  1291  0DF4               	rlf	___awmod@divisor+1,f
  5363  1292  3EFF               	addlw	-1
  5364  1293  1D03               	skipz
  5365  1294  2A8F               	goto	u2995
  5366  1295                     l4204:
  5367  1295  3001               	movlw	1
  5368  1296  00FF               	movwf	btemp+1
  5369  1297  087F               	movf	btemp+1,w
  5370  1298  07A0               	addwf	___awmod@counter,f
  5371  1299                     l4206:
  5372  1299  1FF4               	btfss	___awmod@divisor+1,7
  5373  129A  2A9C               	goto	u3001
  5374  129B  2A9D               	goto	u3000
  5375  129C                     u3001:
  5376  129C  2A8E               	goto	l4202
  5377  129D                     u3000:
  5378  129D                     l4208:
  5379  129D  0874               	movf	___awmod@divisor+1,w
  5380  129E  0276               	subwf	___awmod@dividend+1,w
  5381  129F  1D03               	skipz
  5382  12A0  2AA3               	goto	u3015
  5383  12A1  0873               	movf	___awmod@divisor,w
  5384  12A2  0275               	subwf	___awmod@dividend,w
  5385  12A3                     u3015:
  5386  12A3  1C03               	skipc
  5387  12A4  2AA6               	goto	u3011
  5388  12A5  2AA7               	goto	u3010
  5389  12A6                     u3011:
  5390  12A6  2AAD               	goto	l4212
  5391  12A7                     u3010:
  5392  12A7                     l4210:
  5393  12A7  0873               	movf	___awmod@divisor,w
  5394  12A8  02F5               	subwf	___awmod@dividend,f
  5395  12A9  0874               	movf	___awmod@divisor+1,w
  5396  12AA  1C03               	skipc
  5397  12AB  03F6               	decf	___awmod@dividend+1,f
  5398  12AC  02F6               	subwf	___awmod@dividend+1,f
  5399  12AD                     l4212:
  5400  12AD  3001               	movlw	1
  5401  12AE                     u3025:
  5402  12AE  1003               	clrc
  5403  12AF  0CF4               	rrf	___awmod@divisor+1,f
  5404  12B0  0CF3               	rrf	___awmod@divisor,f
  5405  12B1  3EFF               	addlw	-1
  5406  12B2  1D03               	skipz
  5407  12B3  2AAE               	goto	u3025
  5408  12B4                     l4214:
  5409  12B4  3001               	movlw	1
  5410  12B5  02A0               	subwf	___awmod@counter,f
  5411  12B6  1D03               	btfss	3,2
  5412  12B7  2AB9               	goto	u3031
  5413  12B8  2ABA               	goto	u3030
  5414  12B9                     u3031:
  5415  12B9  2A9D               	goto	l4208
  5416  12BA                     u3030:
  5417  12BA                     l4216:
  5418  12BA  0821               	movf	___awmod@sign,w
  5419  12BB  1903               	btfsc	3,2
  5420  12BC  2ABE               	goto	u3041
  5421  12BD  2ABF               	goto	u3040
  5422  12BE                     u3041:
  5423  12BE  2AC4               	goto	l4220
  5424  12BF                     u3040:
  5425  12BF                     l4218:
  5426  12BF  09F5               	comf	___awmod@dividend,f
  5427  12C0  09F6               	comf	___awmod@dividend+1,f
  5428  12C1  0AF5               	incf	___awmod@dividend,f
  5429  12C2  1903               	skipnz
  5430  12C3  0AF6               	incf	___awmod@dividend+1,f
  5431  12C4                     l4220:
  5432  12C4  0876               	movf	___awmod@dividend+1,w
  5433  12C5  00F4               	movwf	?___awmod+1
  5434  12C6  0875               	movf	___awmod@dividend,w
  5435  12C7  00F3               	movwf	?___awmod
  5436  12C8                     l804:
  5437  12C8  0008               	return
  5438  12C9                     __end_of___awmod:
  5439                           
  5440                           	psect	text25
  5441  1456                     __ptext25:	
  5442 ;; *************** function ___awdiv *****************
  5443 ;; Defined at:
  5444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  divisor         2    3[COMMON] int 
  5447 ;;  dividend        2    5[COMMON] int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  quotient        2    2[BANK0 ] int 
  5450 ;;  sign            1    1[BANK0 ] unsigned char 
  5451 ;;  counter         1    0[BANK0 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    3[COMMON] int 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, btemp+1
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         4       0       0       0       0
  5462 ;;      Locals:         0       4       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         4       4       0       0       0
  5465 ;;Total ram usage:        8 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_LCD_2DigitIntToStr
  5472 ;;		_main
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function ___awdiv
  5478  1456                     ___awdiv:
  5479  1456                     l4142:	
  5480                           ;incstack = 0
  5481                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5482                           
  5483  1456  1283               	bcf	3,5	;RP0=0, select bank0
  5484  1457  1303               	bcf	3,6	;RP1=0, select bank0
  5485  1458  01A1               	clrf	___awdiv@sign
  5486  1459                     l4144:
  5487  1459  1FF4               	btfss	___awdiv@divisor+1,7
  5488  145A  2C5C               	goto	u2861
  5489  145B  2C5D               	goto	u2860
  5490  145C                     u2861:
  5491  145C  2C64               	goto	l4150
  5492  145D                     u2860:
  5493  145D                     l4146:
  5494  145D  09F3               	comf	___awdiv@divisor,f
  5495  145E  09F4               	comf	___awdiv@divisor+1,f
  5496  145F  0AF3               	incf	___awdiv@divisor,f
  5497  1460  1903               	skipnz
  5498  1461  0AF4               	incf	___awdiv@divisor+1,f
  5499  1462                     l4148:
  5500  1462  01A1               	clrf	___awdiv@sign
  5501  1463  0AA1               	incf	___awdiv@sign,f
  5502  1464                     l4150:
  5503  1464  1FF6               	btfss	___awdiv@dividend+1,7
  5504  1465  2C67               	goto	u2871
  5505  1466  2C68               	goto	u2870
  5506  1467                     u2871:
  5507  1467  2C71               	goto	l4156
  5508  1468                     u2870:
  5509  1468                     l4152:
  5510  1468  09F5               	comf	___awdiv@dividend,f
  5511  1469  09F6               	comf	___awdiv@dividend+1,f
  5512  146A  0AF5               	incf	___awdiv@dividend,f
  5513  146B  1903               	skipnz
  5514  146C  0AF6               	incf	___awdiv@dividend+1,f
  5515  146D                     l4154:
  5516  146D  3001               	movlw	1
  5517  146E  00FF               	movwf	btemp+1
  5518  146F  087F               	movf	btemp+1,w
  5519  1470  06A1               	xorwf	___awdiv@sign,f
  5520  1471                     l4156:
  5521  1471  01A2               	clrf	___awdiv@quotient
  5522  1472  01A3               	clrf	___awdiv@quotient+1
  5523  1473                     l4158:
  5524  1473  0873               	movf	___awdiv@divisor,w
  5525  1474  0474               	iorwf	___awdiv@divisor+1,w
  5526  1475  1903               	btfsc	3,2
  5527  1476  2C78               	goto	u2881
  5528  1477  2C79               	goto	u2880
  5529  1478                     u2881:
  5530  1478  2CB0               	goto	l4178
  5531  1479                     u2880:
  5532  1479                     l4160:
  5533  1479  01A0               	clrf	___awdiv@counter
  5534  147A  0AA0               	incf	___awdiv@counter,f
  5535  147B  2C87               	goto	l4166
  5536  147C                     l4162:
  5537  147C  3001               	movlw	1
  5538  147D                     u2895:
  5539  147D  1003               	clrc
  5540  147E  0DF3               	rlf	___awdiv@divisor,f
  5541  147F  0DF4               	rlf	___awdiv@divisor+1,f
  5542  1480  3EFF               	addlw	-1
  5543  1481  1D03               	skipz
  5544  1482  2C7D               	goto	u2895
  5545  1483                     l4164:
  5546  1483  3001               	movlw	1
  5547  1484  00FF               	movwf	btemp+1
  5548  1485  087F               	movf	btemp+1,w
  5549  1486  07A0               	addwf	___awdiv@counter,f
  5550  1487                     l4166:
  5551  1487  1FF4               	btfss	___awdiv@divisor+1,7
  5552  1488  2C8A               	goto	u2901
  5553  1489  2C8B               	goto	u2900
  5554  148A                     u2901:
  5555  148A  2C7C               	goto	l4162
  5556  148B                     u2900:
  5557  148B                     l4168:
  5558  148B  3001               	movlw	1
  5559  148C                     u2915:
  5560  148C  1003               	clrc
  5561  148D  0DA2               	rlf	___awdiv@quotient,f
  5562  148E  0DA3               	rlf	___awdiv@quotient+1,f
  5563  148F  3EFF               	addlw	-1
  5564  1490  1D03               	skipz
  5565  1491  2C8C               	goto	u2915
  5566  1492  0874               	movf	___awdiv@divisor+1,w
  5567  1493  0276               	subwf	___awdiv@dividend+1,w
  5568  1494  1D03               	skipz
  5569  1495  2C98               	goto	u2925
  5570  1496  0873               	movf	___awdiv@divisor,w
  5571  1497  0275               	subwf	___awdiv@dividend,w
  5572  1498                     u2925:
  5573  1498  1C03               	skipc
  5574  1499  2C9B               	goto	u2921
  5575  149A  2C9C               	goto	u2920
  5576  149B                     u2921:
  5577  149B  2CA3               	goto	l4174
  5578  149C                     u2920:
  5579  149C                     l4170:
  5580  149C  0873               	movf	___awdiv@divisor,w
  5581  149D  02F5               	subwf	___awdiv@dividend,f
  5582  149E  0874               	movf	___awdiv@divisor+1,w
  5583  149F  1C03               	skipc
  5584  14A0  03F6               	decf	___awdiv@dividend+1,f
  5585  14A1  02F6               	subwf	___awdiv@dividend+1,f
  5586  14A2                     l4172:
  5587  14A2  1422               	bsf	___awdiv@quotient,0
  5588  14A3                     l4174:
  5589  14A3  3001               	movlw	1
  5590  14A4                     u2935:
  5591  14A4  1003               	clrc
  5592  14A5  0CF4               	rrf	___awdiv@divisor+1,f
  5593  14A6  0CF3               	rrf	___awdiv@divisor,f
  5594  14A7  3EFF               	addlw	-1
  5595  14A8  1D03               	skipz
  5596  14A9  2CA4               	goto	u2935
  5597  14AA                     l4176:
  5598  14AA  3001               	movlw	1
  5599  14AB  02A0               	subwf	___awdiv@counter,f
  5600  14AC  1D03               	btfss	3,2
  5601  14AD  2CAF               	goto	u2941
  5602  14AE  2CB0               	goto	u2940
  5603  14AF                     u2941:
  5604  14AF  2C8B               	goto	l4168
  5605  14B0                     u2940:
  5606  14B0                     l4178:
  5607  14B0  0821               	movf	___awdiv@sign,w
  5608  14B1  1903               	btfsc	3,2
  5609  14B2  2CB4               	goto	u2951
  5610  14B3  2CB5               	goto	u2950
  5611  14B4                     u2951:
  5612  14B4  2CBA               	goto	l4182
  5613  14B5                     u2950:
  5614  14B5                     l4180:
  5615  14B5  09A2               	comf	___awdiv@quotient,f
  5616  14B6  09A3               	comf	___awdiv@quotient+1,f
  5617  14B7  0AA2               	incf	___awdiv@quotient,f
  5618  14B8  1903               	skipnz
  5619  14B9  0AA3               	incf	___awdiv@quotient+1,f
  5620  14BA                     l4182:
  5621  14BA  0823               	movf	___awdiv@quotient+1,w
  5622  14BB  00F4               	movwf	?___awdiv+1
  5623  14BC  0822               	movf	___awdiv@quotient,w
  5624  14BD  00F3               	movwf	?___awdiv
  5625  14BE                     l791:
  5626  14BE  0008               	return
  5627  14BF                     __end_of___awdiv:
  5628                           
  5629                           	psect	text26
  5630  1EF2                     __ptext26:	
  5631 ;; *************** function _E2PROM_24C04_Init *****************
  5632 ;; Defined at:
  5633 ;;		line 4 in file "E2PROM_24C04.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0, pclath, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5647 ;;      Params:         0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    2
  5654 ;; This function calls:
  5655 ;;		_I2C_Master_Init
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _E2PROM_24C04_Init
  5663  1EF2                     _E2PROM_24C04_Init:
  5664  1EF2                     l4260:	
  5665                           ;incstack = 0
  5666                           ; Regs used in _E2PROM_24C04_Init: [wreg+status,2+status,0+pclath+cstack]
  5667                           
  5668                           
  5669                           ;E2PROM_24C04.c: 5:     I2C_Master_Init();
  5670  1EF2  160A  158A  2733  160A  158A  	fcall	_I2C_Master_Init
  5671  1EF7                     l73:
  5672  1EF7  0008               	return
  5673  1EF8                     __end_of_E2PROM_24C04_Init:
  5674                           
  5675                           	psect	text27
  5676  1F33                     __ptext27:	
  5677 ;; *************** function _I2C_Master_Init *****************
  5678 ;; Defined at:
  5679 ;;		line 3 in file "I2C.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5693 ;;      Params:         0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_E2PROM_24C04_Init
  5704 ;;		_RTC_DS1307_Init
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _I2C_Master_Init
  5710  1F33                     _I2C_Master_Init:
  5711  1F33                     l4062:	
  5712                           ;incstack = 0
  5713                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  5714                           
  5715                           
  5716                           ;I2C.c: 5:   SSPCON = 0x28;
  5717  1F33  3028               	movlw	40
  5718  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  5719  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  5720  1F36  0094               	movwf	20	;volatile
  5721  1F37                     l4064:
  5722                           
  5723                           ;I2C.c: 6:   SSPCON2 = 0x00;
  5724  1F37  1683               	bsf	3,5	;RP0=1, select bank1
  5725  1F38  1303               	bcf	3,6	;RP1=0, select bank1
  5726  1F39  0191               	clrf	17	;volatile
  5727  1F3A                     l4066:
  5728                           
  5729                           ;I2C.c: 7:   SSPSTAT = 0x00;
  5730  1F3A  0194               	clrf	20	;volatile
  5731                           
  5732                           ;I2C.c: 8:   SSPADD = ((8000000/4)/100000) - 1;
  5733  1F3B  3013               	movlw	19
  5734  1F3C  0093               	movwf	19	;volatile
  5735  1F3D                     l4068:
  5736                           
  5737                           ;I2C.c: 9:   TRISC3 = 1;
  5738  1F3D  1587               	bsf	7,3	;volatile
  5739  1F3E                     l4070:
  5740                           
  5741                           ;I2C.c: 10:   TRISC4 = 1;
  5742  1F3E  1607               	bsf	7,4	;volatile
  5743  1F3F                     l108:
  5744  1F3F  0008               	return
  5745  1F40                     __end_of_I2C_Master_Init:
  5746                           
  5747                           	psect	text28
  5748  1043                     __ptext28:	
  5749 ;; *************** function _Clear_Events *****************
  5750 ;; Defined at:
  5751 ;;		line 141 in file "main.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  i               1    7[COMMON] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         1       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0
  5768 ;;      Totals:         1       0       0       0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    4
  5772 ;; This function calls:
  5773 ;;		_E2PROM_24C04_Write
  5774 ;; This function is called by:
  5775 ;;		_main
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _Clear_Events
  5781  1043                     _Clear_Events:
  5782  1043                     l4334:	
  5783                           ;incstack = 0
  5784                           ; Regs used in _Clear_Events: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5785                           
  5786                           
  5787                           ;main.c: 142:     uint8_t i = 0;
  5788  1043  01F7               	clrf	Clear_Events@i
  5789                           
  5790                           ;main.c: 143:     for (i = 0; i < 160; i++) {
  5791  1044  01F7               	clrf	Clear_Events@i
  5792  1045                     l4340:
  5793                           
  5794                           ;main.c: 144:         E2PROM_24C04_Write(0xA0, 0x20 + i, 0);
  5795  1045  0877               	movf	Clear_Events@i,w
  5796  1046  3E20               	addlw	32
  5797  1047  00FF               	movwf	btemp+1
  5798  1048  087F               	movf	btemp+1,w
  5799  1049  00F4               	movwf	E2PROM_24C04_Write@word_Address
  5800  104A  01F5               	clrf	E2PROM_24C04_Write@Data
  5801  104B  30A0               	movlw	160
  5802  104C  160A  118A  2076  160A  118A  	fcall	_E2PROM_24C04_Write
  5803  1051                     l4342:
  5804                           
  5805                           ;main.c: 145:     }
  5806  1051  3001               	movlw	1
  5807  1052  00FF               	movwf	btemp+1
  5808  1053  087F               	movf	btemp+1,w
  5809  1054  07F7               	addwf	Clear_Events@i,f
  5810  1055                     l4344:
  5811  1055  30A0               	movlw	160
  5812  1056  0277               	subwf	Clear_Events@i,w
  5813  1057  1C03               	skipc
  5814  1058  285A               	goto	u3121
  5815  1059  285B               	goto	u3120
  5816  105A                     u3121:
  5817  105A  2845               	goto	l4340
  5818  105B                     u3120:
  5819  105B                     l342:
  5820  105B  0008               	return
  5821  105C                     __end_of_Clear_Events:
  5822                           
  5823                           	psect	text29
  5824  1076                     __ptext29:	
  5825 ;; *************** function _E2PROM_24C04_Write *****************
  5826 ;; Defined at:
  5827 ;;		line 10 in file "E2PROM_24C04.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  Device_Addre    1    wreg     unsigned char 
  5830 ;;  word_Address    1    4[COMMON] unsigned char 
  5831 ;;  Data            1    5[COMMON] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  Device_Addre    1    6[COMMON] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0, pclath, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5843 ;;      Params:         2       0       0       0       0
  5844 ;;      Locals:         1       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0
  5846 ;;      Totals:         3       0       0       0       0
  5847 ;;Total ram usage:        3 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    3
  5850 ;; This function calls:
  5851 ;;		_I2C_Start
  5852 ;;		_I2C_Stop
  5853 ;;		_I2C_Write
  5854 ;; This function is called by:
  5855 ;;		_Save_Event_to_24c04
  5856 ;;		_Clear_Events
  5857 ;;		_main
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _E2PROM_24C04_Write
  5863  1076                     _E2PROM_24C04_Write:
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in _E2PROM_24C04_Write: [wreg+status,2+status,0+pclath+cstack]
  5867                           ;E2PROM_24C04_Write@Device_Address stored from wreg
  5868  1076  00F6               	movwf	E2PROM_24C04_Write@Device_Address
  5869  1077                     l4072:
  5870                           
  5871                           ;E2PROM_24C04.c: 10: void E2PROM_24C04_Write(uint8_t Device_Address, uint8_t word_Addres
      +                          s , uint8_t Data);E2PROM_24C04.c: 11: {;E2PROM_24C04.c: 12:   I2C_Start();
  5872  1077  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  5873                           
  5874                           ;E2PROM_24C04.c: 13:   I2C_Write(Device_Address);
  5875  107C  0876               	movf	E2PROM_24C04_Write@Device_Address,w
  5876  107D  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  5877                           
  5878                           ;E2PROM_24C04.c: 14:   I2C_Write(word_Address);
  5879  1082  0874               	movf	E2PROM_24C04_Write@word_Address,w
  5880  1083  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  5881                           
  5882                           ;E2PROM_24C04.c: 15:   I2C_Write(Data);
  5883  1088  0875               	movf	E2PROM_24C04_Write@Data,w
  5884  1089  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  5885                           
  5886                           ;E2PROM_24C04.c: 16:   I2C_Stop();
  5887  108E  160A  158A  2707  160A  118A  	fcall	_I2C_Stop
  5888  1093                     l76:
  5889  1093  0008               	return
  5890  1094                     __end_of_E2PROM_24C04_Write:
  5891                           
  5892                           	psect	text30
  5893  1176                     __ptext30:	
  5894 ;; *************** function _Check_Password *****************
  5895 ;; Defined at:
  5896 ;;		line 77 in file "main.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  i               1    1[BANK0 ] unsigned char 
  5901 ;;  temp            1    0[BANK0 ] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      unsigned char 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5911 ;;      Params:         0       0       0       0       0
  5912 ;;      Locals:         0       2       0       0       0
  5913 ;;      Temps:          0       0       0       0       0
  5914 ;;      Totals:         0       2       0       0       0
  5915 ;;Total ram usage:        2 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    5
  5918 ;; This function calls:
  5919 ;;		_E2PROM_24C04_Read
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _Check_Password
  5927  1176                     _Check_Password:
  5928  1176                     l4288:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _Check_Password: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5931                           
  5932                           
  5933                           ;main.c: 78:     uint8_t i = 0;
  5934  1176  1283               	bcf	3,5	;RP0=0, select bank0
  5935  1177  1303               	bcf	3,6	;RP1=0, select bank0
  5936  1178  01A1               	clrf	Check_Password@i
  5937                           
  5938                           ;main.c: 81:     for (i = 0; i < 4; i++) {
  5939  1179  01A1               	clrf	Check_Password@i
  5940  117A                     l4294:
  5941                           
  5942                           ;main.c: 82:         temp = E2PROM_24C04_Read(0xA0, i + 5);
  5943  117A  0821               	movf	Check_Password@i,w
  5944  117B  3E05               	addlw	5
  5945  117C  00FF               	movwf	btemp+1
  5946  117D  087F               	movf	btemp+1,w
  5947  117E  00F4               	movwf	E2PROM_24C04_Read@word_Address
  5948  117F  30A0               	movlw	160
  5949  1180  160A  118A  21A8  160A  118A  	fcall	_E2PROM_24C04_Read
  5950  1185  00FF               	movwf	btemp+1
  5951  1186  087F               	movf	btemp+1,w
  5952  1187  1283               	bcf	3,5	;RP0=0, select bank0
  5953  1188  1303               	bcf	3,6	;RP1=0, select bank0
  5954  1189  00A0               	movwf	Check_Password@temp
  5955  118A                     l4296:
  5956                           
  5957                           ;main.c: 83:         if (Input_Password[i] == temp) {
  5958  118A  0821               	movf	Check_Password@i,w
  5959  118B  3EE8               	addlw	(low (_Input_Password| 0))& (0+255)
  5960  118C  0084               	movwf	4
  5961  118D  1383               	bcf	3,7	;select IRP bank1
  5962  118E  0800               	movf	0,w
  5963  118F  0620               	xorwf	Check_Password@temp,w
  5964  1190  1D03               	skipz
  5965  1191  2993               	goto	u3091
  5966  1192  2994               	goto	u3090
  5967  1193                     u3091:
  5968  1193  299E               	goto	l4306
  5969  1194                     u3090:
  5970  1194                     l4302:
  5971  1194  3001               	movlw	1
  5972  1195  00FF               	movwf	btemp+1
  5973  1196  087F               	movf	btemp+1,w
  5974  1197  07A1               	addwf	Check_Password@i,f
  5975  1198                     l4304:
  5976  1198  3004               	movlw	4
  5977  1199  0221               	subwf	Check_Password@i,w
  5978  119A  1C03               	skipc
  5979  119B  299D               	goto	u3101
  5980  119C  299E               	goto	u3100
  5981  119D                     u3101:
  5982  119D  297A               	goto	l4294
  5983  119E                     u3100:
  5984  119E                     l4306:
  5985                           
  5986                           ;main.c: 90:     if (i > 3) {
  5987  119E  3004               	movlw	4
  5988  119F  0221               	subwf	Check_Password@i,w
  5989  11A0  1C03               	skipc
  5990  11A1  29A3               	goto	u3111
  5991  11A2  29A4               	goto	u3110
  5992  11A3                     u3111:
  5993  11A3  29A6               	goto	l4314
  5994  11A4                     u3110:
  5995  11A4                     l4308:
  5996                           
  5997                           ;main.c: 91:         return 0;
  5998  11A4  3000               	movlw	0
  5999  11A5  29A7               	goto	l323
  6000  11A6                     l4314:
  6001                           
  6002                           ;main.c: 93:         return 1;
  6003  11A6  3001               	movlw	1
  6004  11A7                     l323:
  6005  11A7  0008               	return
  6006  11A8                     __end_of_Check_Password:
  6007                           
  6008                           	psect	text31
  6009  11A8                     __ptext31:	
  6010 ;; *************** function _E2PROM_24C04_Read *****************
  6011 ;; Defined at:
  6012 ;;		line 20 in file "E2PROM_24C04.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  Device_Addre    1    wreg     unsigned char 
  6015 ;;  word_Address    1    4[COMMON] unsigned char 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  Device_Addre    1    5[COMMON] unsigned char 
  6018 ;;  temp            1    6[COMMON] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      unsigned char 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6028 ;;      Params:         1       0       0       0       0
  6029 ;;      Locals:         2       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0
  6031 ;;      Totals:         3       0       0       0       0
  6032 ;;Total ram usage:        3 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    4
  6035 ;; This function calls:
  6036 ;;		_I2C_Read
  6037 ;;		_I2C_Start
  6038 ;;		_I2C_Stop
  6039 ;;		_I2C_Write
  6040 ;; This function is called by:
  6041 ;;		_Check_Password
  6042 ;;		_main
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           
  6047                           ;psect for function _E2PROM_24C04_Read
  6048  11A8                     _E2PROM_24C04_Read:
  6049                           
  6050                           ;incstack = 0
  6051                           ; Regs used in _E2PROM_24C04_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6052                           ;E2PROM_24C04_Read@Device_Address stored from wreg
  6053  11A8  00F5               	movwf	E2PROM_24C04_Read@Device_Address
  6054  11A9                     l4074:
  6055                           
  6056                           ;E2PROM_24C04.c: 20: uint8_t E2PROM_24C04_Read(uint8_t Device_Address, uint8_t word_Addr
      +                          ess);E2PROM_24C04.c: 21: {;E2PROM_24C04.c: 23:   uint8_t temp;;E2PROM_24C04.c: 24:   I2C
      +                          _Start();
  6057  11A9  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  6058  11AE                     l4076:
  6059                           
  6060                           ;E2PROM_24C04.c: 25:   temp = Device_Address & ~(0x01);
  6061  11AE  0875               	movf	E2PROM_24C04_Read@Device_Address,w
  6062  11AF  39FE               	andlw	254
  6063  11B0  00FF               	movwf	btemp+1
  6064  11B1  087F               	movf	btemp+1,w
  6065  11B2  00F6               	movwf	E2PROM_24C04_Read@temp
  6066  11B3                     l4078:
  6067                           
  6068                           ;E2PROM_24C04.c: 26:   I2C_Write(temp);
  6069  11B3  0876               	movf	E2PROM_24C04_Read@temp,w
  6070  11B4  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  6071  11B9                     l4080:
  6072                           
  6073                           ;E2PROM_24C04.c: 27:   I2C_Write(word_Address);
  6074  11B9  0874               	movf	E2PROM_24C04_Read@word_Address,w
  6075  11BA  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  6076  11BF                     l4082:
  6077                           
  6078                           ;E2PROM_24C04.c: 28:   I2C_Start();
  6079  11BF  160A  158A  26FE  160A  118A  	fcall	_I2C_Start
  6080                           
  6081                           ;E2PROM_24C04.c: 29:   temp = Device_Address | (0x01);
  6082  11C4  0875               	movf	E2PROM_24C04_Read@Device_Address,w
  6083  11C5  3801               	iorlw	1
  6084  11C6  00FF               	movwf	btemp+1
  6085  11C7  087F               	movf	btemp+1,w
  6086  11C8  00F6               	movwf	E2PROM_24C04_Read@temp
  6087  11C9                     l4084:
  6088                           
  6089                           ;E2PROM_24C04.c: 30:   I2C_Write(temp);
  6090  11C9  0876               	movf	E2PROM_24C04_Read@temp,w
  6091  11CA  160A  158A  276A  160A  118A  	fcall	_I2C_Write
  6092  11CF                     l4086:
  6093                           
  6094                           ;E2PROM_24C04.c: 31:   temp = I2C_Read();
  6095  11CF  160A  118A  205C  160A  118A  	fcall	_I2C_Read
  6096  11D4  00FF               	movwf	btemp+1
  6097  11D5  087F               	movf	btemp+1,w
  6098  11D6  00F6               	movwf	E2PROM_24C04_Read@temp
  6099  11D7                     l4088:
  6100                           
  6101                           ;E2PROM_24C04.c: 32:   I2C_Stop();
  6102  11D7  160A  158A  2707  160A  118A  	fcall	_I2C_Stop
  6103  11DC                     l4090:
  6104                           
  6105                           ;E2PROM_24C04.c: 33:   return (temp);
  6106  11DC  0876               	movf	E2PROM_24C04_Read@temp,w
  6107  11DD                     l79:
  6108  11DD  0008               	return
  6109  11DE                     __end_of_E2PROM_24C04_Read:
  6110                           
  6111                           	psect	text32
  6112  1F6A                     __ptext32:	
  6113 ;; *************** function _I2C_Write *****************
  6114 ;; Defined at:
  6115 ;;		line 57 in file "I2C.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  Data            1    wreg     unsigned char 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  Data            1    3[COMMON] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      unsigned char 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, pclath, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         0       0       0       0       0
  6130 ;;      Locals:         1       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0
  6132 ;;      Totals:         1       0       0       0       0
  6133 ;;Total ram usage:        1 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    2
  6136 ;; This function calls:
  6137 ;;		_I2C_Wait
  6138 ;; This function is called by:
  6139 ;;		_E2PROM_24C04_Write
  6140 ;;		_E2PROM_24C04_Read
  6141 ;;		_RTC_DS1307_Write
  6142 ;;		_RTC_DS1307_Read
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _I2C_Write
  6148  1F6A                     _I2C_Write:
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  6152                           ;I2C_Write@Data stored from wreg
  6153  1F6A  00F3               	movwf	I2C_Write@Data
  6154  1F6B                     l3990:
  6155                           
  6156                           ;I2C.c: 57: uint8_t I2C_Write(uint8_t Data);I2C.c: 58: {;I2C.c: 60:   I2C_Wait();
  6157  1F6B  160A  158A  2726  160A  158A  	fcall	_I2C_Wait
  6158  1F70                     l3992:
  6159                           
  6160                           ;I2C.c: 61:   SSPBUF = Data;
  6161  1F70  0873               	movf	I2C_Write@Data,w
  6162  1F71  1283               	bcf	3,5	;RP0=0, select bank0
  6163  1F72  1303               	bcf	3,6	;RP1=0, select bank0
  6164  1F73  0093               	movwf	19	;volatile
  6165  1F74                     l3994:
  6166                           
  6167                           ;I2C.c: 62:   I2C_Wait();
  6168  1F74  160A  158A  2726  160A  158A  	fcall	_I2C_Wait
  6169  1F79                     l3996:
  6170  1F79                     l126:	
  6171                           ;I2C.c: 63:   return ACKSTAT;;	Return value of _I2C_Write is never used
  6172                           
  6173  1F79  0008               	return
  6174  1F7A                     __end_of_I2C_Write:
  6175                           
  6176                           	psect	text33
  6177  1F07                     __ptext33:	
  6178 ;; *************** function _I2C_Stop *****************
  6179 ;; Defined at:
  6180 ;;		line 25 in file "I2C.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6194 ;;      Params:         0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0
  6197 ;;      Totals:         0       0       0       0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    2
  6201 ;; This function calls:
  6202 ;;		_I2C_Wait
  6203 ;; This function is called by:
  6204 ;;		_E2PROM_24C04_Write
  6205 ;;		_E2PROM_24C04_Read
  6206 ;;		_RTC_DS1307_Write
  6207 ;;		_RTC_DS1307_Read
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _I2C_Stop
  6213  1F07                     _I2C_Stop:
  6214  1F07                     l4000:	
  6215                           ;incstack = 0
  6216                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6217                           
  6218                           
  6219                           ;I2C.c: 28:   I2C_Wait();
  6220  1F07  160A  158A  2726  160A  158A  	fcall	_I2C_Wait
  6221  1F0C                     l4002:
  6222                           
  6223                           ;I2C.c: 29:   PEN = 1;
  6224  1F0C  1683               	bsf	3,5	;RP0=1, select bank1
  6225  1F0D  1303               	bcf	3,6	;RP1=0, select bank1
  6226  1F0E  1511               	bsf	17,2	;volatile
  6227  1F0F                     l120:
  6228  1F0F  0008               	return
  6229  1F10                     __end_of_I2C_Stop:
  6230                           
  6231                           	psect	text34
  6232  1EFE                     __ptext34:	
  6233 ;; *************** function _I2C_Start *****************
  6234 ;; Defined at:
  6235 ;;		line 18 in file "I2C.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, pclath, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6249 ;;      Params:         0       0       0       0       0
  6250 ;;      Locals:         0       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0
  6252 ;;      Totals:         0       0       0       0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    2
  6256 ;; This function calls:
  6257 ;;		_I2C_Wait
  6258 ;; This function is called by:
  6259 ;;		_E2PROM_24C04_Write
  6260 ;;		_E2PROM_24C04_Read
  6261 ;;		_RTC_DS1307_Write
  6262 ;;		_RTC_DS1307_Read
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function _I2C_Start
  6268  1EFE                     _I2C_Start:
  6269  1EFE                     l3986:	
  6270                           ;incstack = 0
  6271                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6272                           
  6273                           
  6274                           ;I2C.c: 21:   I2C_Wait();
  6275  1EFE  160A  158A  2726  160A  158A  	fcall	_I2C_Wait
  6276  1F03                     l3988:
  6277                           
  6278                           ;I2C.c: 22:   SEN = 1;
  6279  1F03  1683               	bsf	3,5	;RP0=1, select bank1
  6280  1F04  1303               	bcf	3,6	;RP1=0, select bank1
  6281  1F05  1411               	bsf	17,0	;volatile
  6282  1F06                     l117:
  6283  1F06  0008               	return
  6284  1F07                     __end_of_I2C_Start:
  6285                           
  6286                           	psect	text35
  6287  105C                     __ptext35:	
  6288 ;; *************** function _I2C_Read *****************
  6289 ;; Defined at:
  6290 ;;		line 66 in file "I2C.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  Data            1    3[COMMON] unsigned char 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      unsigned char 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       0       0       0       0
  6305 ;;      Locals:         1       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         1       0       0       0       0
  6308 ;;Total ram usage:        1 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    3
  6311 ;; This function calls:
  6312 ;;		_I2C_NACK
  6313 ;;		_I2C_Wait
  6314 ;; This function is called by:
  6315 ;;		_E2PROM_24C04_Read
  6316 ;;		_RTC_DS1307_Read
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _I2C_Read
  6322  105C                     _I2C_Read:
  6323  105C                     l4004:	
  6324                           ;incstack = 0
  6325                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6326                           
  6327                           
  6328                           ;I2C.c: 68:   uint8_t Data;;I2C.c: 69:   I2C_Wait();
  6329  105C  160A  158A  2726  160A  118A  	fcall	_I2C_Wait
  6330  1061                     l4006:
  6331                           
  6332                           ;I2C.c: 70:   RCEN = 1;
  6333  1061  1683               	bsf	3,5	;RP0=1, select bank1
  6334  1062  1303               	bcf	3,6	;RP1=0, select bank1
  6335  1063  1591               	bsf	17,3	;volatile
  6336                           
  6337                           ;I2C.c: 71:   I2C_Wait();
  6338  1064  160A  158A  2726  160A  118A  	fcall	_I2C_Wait
  6339  1069                     l4008:
  6340                           
  6341                           ;I2C.c: 72:   Data = SSPBUF;
  6342  1069  1283               	bcf	3,5	;RP0=0, select bank0
  6343  106A  1303               	bcf	3,6	;RP1=0, select bank0
  6344  106B  0813               	movf	19,w	;volatile
  6345  106C  00FF               	movwf	btemp+1
  6346  106D  087F               	movf	btemp+1,w
  6347  106E  00F3               	movwf	I2C_Read@Data
  6348  106F                     l4010:
  6349                           
  6350                           ;I2C.c: 73:   I2C_NACK();
  6351  106F  120A  158A  2002  160A  118A  	fcall	_I2C_NACK
  6352  1074                     l4012:
  6353                           
  6354                           ;I2C.c: 74:   return Data;
  6355  1074  0873               	movf	I2C_Read@Data,w
  6356  1075                     l129:
  6357  1075  0008               	return
  6358  1076                     __end_of_I2C_Read:
  6359                           
  6360                           	psect	text36
  6361  0802                     __ptext36:	
  6362 ;; *************** function _I2C_NACK *****************
  6363 ;; Defined at:
  6364 ;;		line 48 in file "I2C.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      void 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2, status,0, pclath, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6378 ;;      Params:         0       0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0
  6381 ;;      Totals:         0       0       0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    2
  6385 ;; This function calls:
  6386 ;;		_I2C_Wait
  6387 ;; This function is called by:
  6388 ;;		_I2C_Read
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           
  6393                           ;psect for function _I2C_NACK
  6394  0802                     _I2C_NACK:
  6395  0802                     l3928:	
  6396                           ;incstack = 0
  6397                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  6398                           
  6399                           
  6400                           ;I2C.c: 51:   I2C_Wait();
  6401  0802  160A  158A  2726  120A  158A  	fcall	_I2C_Wait
  6402  0807                     l3930:
  6403                           
  6404                           ;I2C.c: 52:   ACKDT = 1;
  6405  0807  1683               	bsf	3,5	;RP0=1, select bank1
  6406  0808  1303               	bcf	3,6	;RP1=0, select bank1
  6407  0809  1691               	bsf	17,5	;volatile
  6408  080A                     l3932:
  6409                           
  6410                           ;I2C.c: 53:   ACKEN = 1;
  6411  080A  1611               	bsf	17,4	;volatile
  6412  080B                     l123:
  6413  080B  0008               	return
  6414  080C                     __end_of_I2C_NACK:
  6415                           
  6416                           	psect	text37
  6417  1F26                     __ptext37:	
  6418 ;; *************** function _I2C_Wait *****************
  6419 ;; Defined at:
  6420 ;;		line 13 in file "I2C.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;		None
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6434 ;;      Params:         0       0       0       0       0
  6435 ;;      Locals:         0       0       0       0       0
  6436 ;;      Temps:          0       0       0       0       0
  6437 ;;      Totals:         0       0       0       0       0
  6438 ;;Total ram usage:        0 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    1
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_I2C_Start
  6445 ;;		_I2C_Stop
  6446 ;;		_I2C_NACK
  6447 ;;		_I2C_Write
  6448 ;;		_I2C_Read
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _I2C_Wait
  6454  1F26                     _I2C_Wait:
  6455  1F26                     l3924:	
  6456                           ;incstack = 0
  6457                           ; Regs used in _I2C_Wait: [wreg+status,2]
  6458                           
  6459  1F26                     l111:	
  6460                           ;I2C.c: 15:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6461                           
  6462  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  6463  1F27  1303               	bcf	3,6	;RP1=0, select bank1
  6464  1F28  1914               	btfsc	20,2	;volatile
  6465  1F29  2F2B               	goto	u2751
  6466  1F2A  2F2C               	goto	u2750
  6467  1F2B                     u2751:
  6468  1F2B  2F26               	goto	l111
  6469  1F2C                     u2750:
  6470  1F2C                     l3926:
  6471  1F2C  0811               	movf	17,w	;volatile
  6472  1F2D  391F               	andlw	31
  6473  1F2E  1D03               	btfss	3,2
  6474  1F2F  2F31               	goto	u2761
  6475  1F30  2F32               	goto	u2760
  6476  1F31                     u2761:
  6477  1F31  2F26               	goto	l111
  6478  1F32                     u2760:
  6479  1F32                     l114:
  6480  1F32  0008               	return
  6481  1F33                     __end_of_I2C_Wait:
  6482                           
  6483                           	psect	text38
  6484  1FE8                     __ptext38:	
  6485 ;; *************** function _Button_Read *****************
  6486 ;; Defined at:
  6487 ;;		line 19 in file "Button.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  Button          1    wreg     unsigned char 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  Button          1    5[COMMON] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0
  6503 ;;      Temps:          2       0       0       0       0
  6504 ;;      Totals:         3       0       0       0       0
  6505 ;;Total ram usage:        3 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_main
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _Button_Read
  6517  1FE8                     _Button_Read:
  6518                           
  6519                           ;incstack = 0
  6520                           ; Regs used in _Button_Read: [wreg+status,2+status,0]
  6521                           ;Button_Read@Button stored from wreg
  6522  1FE8  00F5               	movwf	Button_Read@Button
  6523  1FE9                     l4246:
  6524                           
  6525                           ;Button.c: 21:     if(Button == 0){
  6526  1FE9  0875               	movf	Button_Read@Button,w
  6527  1FEA  1D03               	btfss	3,2
  6528  1FEB  2FED               	goto	u3061
  6529  1FEC  2FEE               	goto	u3060
  6530  1FED                     u3061:
  6531  1FED  2FFE               	goto	l4256
  6532  1FEE                     u3060:
  6533  1FEE                     l4248:
  6534                           
  6535                           ;Button.c: 22:          _delay((unsigned long)((10)*(8000000UL/4000.0)));
  6536  1FEE  301A               	movlw	26
  6537  1FEF  00F4               	movwf	??_Button_Read+1
  6538  1FF0  30F8               	movlw	248
  6539  1FF1  00F3               	movwf	??_Button_Read
  6540  1FF2                     u4287:
  6541  1FF2  0BF3               	decfsz	??_Button_Read,f
  6542  1FF3  2FF2               	goto	u4287
  6543  1FF4  0BF4               	decfsz	??_Button_Read+1,f
  6544  1FF5  2FF2               	goto	u4287
  6545  1FF6  0000               	nop
  6546  1FF7                     l4250:
  6547                           
  6548                           ;Button.c: 23:          if(Button == 0){
  6549  1FF7  0875               	movf	Button_Read@Button,w
  6550  1FF8  1D03               	btfss	3,2
  6551  1FF9  2FFB               	goto	u3071
  6552  1FFA  2FFC               	goto	u3070
  6553  1FFB                     u3071:
  6554  1FFB  2FFE               	goto	l4256
  6555  1FFC                     u3070:
  6556  1FFC                     l4252:
  6557                           
  6558                           ;Button.c: 24:              return 0;
  6559  1FFC  3000               	movlw	0
  6560  1FFD  2FFF               	goto	l37
  6561  1FFE                     l4256:
  6562                           
  6563                           ;Button.c: 27:    return 1;
  6564  1FFE  3001               	movlw	1
  6565  1FFF                     l37:
  6566  1FFF  0008               	return
  6567  2000                     __end_of_Button_Read:
  6568                           
  6569                           	psect	text39
  6570  1F19                     __ptext39:	
  6571 ;; *************** function _Button_Init *****************
  6572 ;; Defined at:
  6573 ;;		line 5 in file "Button.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6587 ;;      Params:         0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0
  6590 ;;      Totals:         0       0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    2
  6594 ;; This function calls:
  6595 ;;		_Dio_Init
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _Button_Init
  6603  1F19                     _Button_Init:
  6604  1F19                     l4234:	
  6605                           ;incstack = 0
  6606                           ; Regs used in _Button_Init: [wreg+status,2+status,0+pclath+cstack]
  6607                           
  6608                           
  6609                           ;Button.c: 7:     Dio_Init();
  6610  1F19  160A  158A  27BF  160A  158A  	fcall	_Dio_Init
  6611  1F1E                     l4236:
  6612                           
  6613                           ;Button.c: 9:     TRISBbits.TRISB0 = 1;
  6614  1F1E  1683               	bsf	3,5	;RP0=1, select bank1
  6615  1F1F  1303               	bcf	3,6	;RP1=0, select bank1
  6616  1F20  1406               	bsf	6,0	;volatile
  6617  1F21                     l4238:
  6618                           
  6619                           ;Button.c: 10:     TRISBbits.TRISB1 = 1;
  6620  1F21  1486               	bsf	6,1	;volatile
  6621  1F22                     l4240:
  6622                           
  6623                           ;Button.c: 11:     TRISBbits.TRISB2 = 1;
  6624  1F22  1506               	bsf	6,2	;volatile
  6625  1F23                     l4242:
  6626                           
  6627                           ;Button.c: 12:     TRISBbits.TRISB3 = 1;
  6628  1F23  1586               	bsf	6,3	;volatile
  6629  1F24                     l4244:
  6630                           
  6631                           ;Button.c: 13:     TRISBbits.TRISB4 = 1;
  6632  1F24  1606               	bsf	6,4	;volatile
  6633  1F25                     l32:
  6634  1F25  0008               	return
  6635  1F26                     __end_of_Button_Init:
  6636                           
  6637                           	psect	text40
  6638  1FBF                     __ptext40:	
  6639 ;; *************** function _Dio_Init *****************
  6640 ;; Defined at:
  6641 ;;		line 4 in file "Dio.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6655 ;;      Params:         0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0
  6658 ;;      Totals:         0       0       0       0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_Button_Init
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _Dio_Init
  6672  1FBF                     _Dio_Init:
  6673  1FBF                     l4050:	
  6674                           ;incstack = 0
  6675                           ; Regs used in _Dio_Init: [wreg+status,2]
  6676                           
  6677                           
  6678                           ;Dio.c: 6:     TRISA = 0b00011111;
  6679  1FBF  301F               	movlw	31
  6680  1FC0  1683               	bsf	3,5	;RP0=1, select bank1
  6681  1FC1  1303               	bcf	3,6	;RP1=0, select bank1
  6682  1FC2  0085               	movwf	5	;volatile
  6683                           
  6684                           ;Dio.c: 7:     TRISB = 0b11111111;
  6685  1FC3  30FF               	movlw	255
  6686  1FC4  0086               	movwf	6	;volatile
  6687                           
  6688                           ;Dio.c: 8:     TRISC = 0b11111111;
  6689  1FC5  30FF               	movlw	255
  6690  1FC6  0087               	movwf	7	;volatile
  6691                           
  6692                           ;Dio.c: 9:     TRISD = 0b11111110;
  6693  1FC7  30FE               	movlw	254
  6694  1FC8  0088               	movwf	8	;volatile
  6695                           
  6696                           ;Dio.c: 10:     TRISE = 0b00000111;
  6697  1FC9  3007               	movlw	7
  6698  1FCA  0089               	movwf	9	;volatile
  6699  1FCB                     l4052:
  6700                           
  6701                           ;Dio.c: 12:     PORTA = 0b00000000;
  6702  1FCB  1283               	bcf	3,5	;RP0=0, select bank0
  6703  1FCC  1303               	bcf	3,6	;RP1=0, select bank0
  6704  1FCD  0185               	clrf	5	;volatile
  6705  1FCE                     l4054:
  6706                           
  6707                           ;Dio.c: 13:     PORTB = 0b00000000;
  6708  1FCE  0186               	clrf	6	;volatile
  6709  1FCF                     l4056:
  6710                           
  6711                           ;Dio.c: 14:     PORTC = 0b00000000;
  6712  1FCF  0187               	clrf	7	;volatile
  6713  1FD0                     l4058:
  6714                           
  6715                           ;Dio.c: 15:     PORTD = 0b00000000;
  6716  1FD0  0188               	clrf	8	;volatile
  6717  1FD1                     l4060:
  6718                           
  6719                           ;Dio.c: 16:     PORTE = 0b00000000;
  6720  1FD1  0189               	clrf	9	;volatile
  6721  1FD2                     l60:
  6722  1FD2  0008               	return
  6723  1FD3                     __end_of_Dio_Init:
  6724                           
  6725                           	psect	text41
  6726  1FAC                     __ptext41:	
  6727 ;; *************** function _Adc_Read *****************
  6728 ;; Defined at:
  6729 ;;		line 13 in file "Adc.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  adc_value       2    5[COMMON] unsigned int 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  2    3[COMMON] unsigned int 
  6736 ;; Registers used:
  6737 ;;		wreg
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6743 ;;      Params:         2       0       0       0       0
  6744 ;;      Locals:         2       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0
  6746 ;;      Totals:         4       0       0       0       0
  6747 ;;Total ram usage:        4 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    1
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_main
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           
  6758                           ;psect for function _Adc_Read
  6759  1FAC                     _Adc_Read:
  6760  1FAC                     l4226:	
  6761                           ;incstack = 0
  6762                           ; Regs used in _Adc_Read: [wreg]
  6763                           
  6764                           
  6765                           ;Adc.c: 15:     uint16_t adc_value;;Adc.c: 18:     GO_DONE = 1;
  6766  1FAC  1283               	bcf	3,5	;RP0=0, select bank0
  6767  1FAD  1303               	bcf	3,6	;RP1=0, select bank0
  6768  1FAE  151F               	bsf	31,2	;volatile
  6769  1FAF                     l4228:
  6770                           
  6771                           ;Adc.c: 20:     adc_value = ((ADRESH << 8) | ADRESL);
  6772  1FAF  081E               	movf	30,w	;volatile
  6773  1FB0  00F6               	movwf	Adc_Read@adc_value+1
  6774  1FB1  1683               	bsf	3,5	;RP0=1, select bank1
  6775  1FB2  1303               	bcf	3,6	;RP1=0, select bank1
  6776  1FB3  081E               	movf	30,w	;volatile
  6777  1FB4  00F5               	movwf	Adc_Read@adc_value
  6778  1FB5                     l20:	
  6779                           ;Adc.c: 23:     while (ADCON0bits.GO_DONE);
  6780                           
  6781  1FB5  1283               	bcf	3,5	;RP0=0, select bank0
  6782  1FB6  191F               	btfsc	31,2	;volatile
  6783  1FB7  2FB9               	goto	u3051
  6784  1FB8  2FBA               	goto	u3050
  6785  1FB9                     u3051:
  6786  1FB9  2FB5               	goto	l20
  6787  1FBA                     u3050:
  6788  1FBA                     l4230:
  6789                           
  6790                           ;Adc.c: 25:     return adc_value;
  6791  1FBA  0876               	movf	Adc_Read@adc_value+1,w
  6792  1FBB  00F4               	movwf	?_Adc_Read+1
  6793  1FBC  0875               	movf	Adc_Read@adc_value,w
  6794  1FBD  00F3               	movwf	?_Adc_Read
  6795  1FBE                     l23:
  6796  1FBE  0008               	return
  6797  1FBF                     __end_of_Adc_Read:
  6798                           
  6799                           	psect	text42
  6800  1F4D                     __ptext42:	
  6801 ;; *************** function _Adc_Init *****************
  6802 ;; Defined at:
  6803 ;;		line 4 in file "Adc.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6817 ;;      Params:         0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0
  6819 ;;      Temps:          1       0       0       0       0
  6820 ;;      Totals:         1       0       0       0       0
  6821 ;;Total ram usage:        1 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_main
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _Adc_Init
  6833  1F4D                     _Adc_Init:
  6834  1F4D                     l4224:	
  6835                           ;incstack = 0
  6836                           ; Regs used in _Adc_Init: [wreg]
  6837                           
  6838                           
  6839                           ;Adc.c: 6:     ADCON0 = 0x41;
  6840  1F4D  3041               	movlw	65
  6841  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  6842  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  6843  1F50  009F               	movwf	31	;volatile
  6844                           
  6845                           ;Adc.c: 7:     ADCON1 = 0x8E;
  6846  1F51  308E               	movlw	142
  6847  1F52  1683               	bsf	3,5	;RP0=1, select bank1
  6848  1F53  1303               	bcf	3,6	;RP1=0, select bank1
  6849  1F54  009F               	movwf	31	;volatile
  6850                           
  6851                           ;Adc.c: 9:     _delay((unsigned long)((30)*(8000000UL/4000000.0)));
  6852  1F55  3013               	movlw	19
  6853  1F56  00F3               	movwf	??_Adc_Init
  6854  1F57                     u4297:
  6855  1F57  0BF3               	decfsz	??_Adc_Init,f
  6856  1F58  2F57               	goto	u4297
  6857  1F59  2F5A               	nop2
  6858  1F5A                     l17:
  6859  1F5A  0008               	return
  6860  1F5B                     __end_of_Adc_Init:
  6861                           
  6862                           	psect	text43
  6863  111A                     __ptext43:	
  6864 ;; *************** function _ISR *****************
  6865 ;; Defined at:
  6866 ;;		line 100 in file "main.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0, btemp+1
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6880 ;;      Params:         0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0
  6882 ;;      Temps:          3       0       0       0       0
  6883 ;;      Totals:         3       0       0       0       0
  6884 ;;Total ram usage:        3 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		Interrupt level 1
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _ISR
  6895  111A                     _ISR:
  6896  111A                     i1l3060:
  6897                           
  6898                           ;main.c: 104:     if (TMR1IF) {
  6899  111A  1C0C               	btfss	12,0	;volatile
  6900  111B  291D               	goto	u189_21
  6901  111C  291E               	goto	u189_20
  6902  111D                     u189_21:
  6903  111D  293F               	goto	i1l334
  6904  111E                     u189_20:
  6905  111E                     i1l3062:
  6906                           
  6907                           ;main.c: 106:         Timer_Counter++;
  6908  111E  3001               	movlw	1
  6909  111F  07F8               	addwf	_Timer_Counter,f
  6910  1120  1803               	skipnc
  6911  1121  0AF9               	incf	_Timer_Counter+1,f
  6912  1122  3000               	movlw	0
  6913  1123  07F9               	addwf	_Timer_Counter+1,f
  6914  1124                     i1l3064:
  6915                           
  6916                           ;main.c: 107:         Password_Waiting_Time++;
  6917  1124  3001               	movlw	1
  6918  1125  00FF               	movwf	btemp+1
  6919  1126  087F               	movf	btemp+1,w
  6920  1127  07E2               	addwf	_Password_Waiting_Time,f
  6921  1128                     i1l3066:
  6922                           
  6923                           ;main.c: 109:         if (Timer_Counter == 275) {
  6924  1128  3013               	movlw	19
  6925  1129  0678               	xorwf	_Timer_Counter,w
  6926  112A  1D03               	skipz
  6927  112B  2930               	goto	u190_21
  6928  112C  0379               	decf	_Timer_Counter+1,w
  6929  112D  1D03               	btfss	3,2
  6930  112E  2930               	goto	u190_21
  6931  112F  2931               	goto	u190_20
  6932  1130                     u190_21:
  6933  1130  2935               	goto	i1l3072
  6934  1131                     u190_20:
  6935  1131                     i1l3068:
  6936                           
  6937                           ;main.c: 110:             Waiting_Minutes--;
  6938  1131  3001               	movlw	1
  6939  1132  02D5               	subwf	_Waiting_Minutes,f
  6940  1133                     i1l3070:
  6941                           
  6942                           ;main.c: 111:             Timer_Counter = 0;
  6943  1133  01F8               	clrf	_Timer_Counter
  6944  1134  01F9               	clrf	_Timer_Counter+1
  6945  1135                     i1l3072:
  6946                           
  6947                           ;main.c: 114:         if (Timer_Counter % 2 == 0) {
  6948  1135  1878               	btfsc	_Timer_Counter,0
  6949  1136  2938               	goto	u191_21
  6950  1137  2939               	goto	u191_20
  6951  1138                     u191_21:
  6952  1138  293A               	goto	i1l333
  6953  1139                     u191_20:
  6954  1139                     i1l3074:
  6955                           
  6956                           ;main.c: 115:             Set_Time_Blinking_flag = ~Set_Time_Blinking_flag;
  6957  1139  09D4               	comf	_Set_Time_Blinking_flag,f
  6958  113A                     i1l333:	
  6959                           ;main.c: 116:         }
  6960                           
  6961                           
  6962                           ;main.c: 118:         TMR1 = 65536 - 50000;
  6963  113A  303C               	movlw	60
  6964  113B  008F               	movwf	15	;volatile
  6965  113C  30B0               	movlw	176
  6966  113D  008E               	movwf	14	;volatile
  6967                           
  6968                           ;main.c: 119:         TMR1IF = 0;
  6969  113E  100C               	bcf	12,0	;volatile
  6970  113F                     i1l334:
  6971  113F  0872               	movf	??_ISR+2,w
  6972  1140  00FF               	movwf	btemp+1
  6973  1141  0871               	movf	??_ISR+1,w
  6974  1142  008A               	movwf	10
  6975  1143  0E70               	swapf	??_ISR^(0+4294967168),w
  6976  1144  0083               	movwf	3
  6977  1145  0EFE               	swapf	btemp,f
  6978  1146  0E7E               	swapf	btemp,w
  6979  1147  0009               	retfie
  6980  1148                     __end_of_ISR:
  6981  007E                     btemp	set	126	;btemp
  6982  007E                     wtemp0	set	126
  6983                           
  6984                           	psect	intentry
  6985  0004                     __pintentry:	
  6986                           ;incstack = 0
  6987                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  6988                           
  6989  0004                     interrupt_function:
  6990  007E                     saved_w	set	btemp
  6991  0004  00FE               	movwf	btemp
  6992  0005  0E03               	swapf	3,w
  6993  0006  00F0               	movwf	??_ISR
  6994  0007  080A               	movf	10,w
  6995  0008  00F1               	movwf	??_ISR+1
  6996  0009  1283               	bcf	3,5	;RP0=0, select bank0
  6997  000A  1303               	bcf	3,6	;RP1=0, select bank0
  6998  000B  087F               	movf	btemp+1,w
  6999  000C  00F2               	movwf	??_ISR+2
  7000  000D  160A  118A  291A   	ljmp	_ISR
  7001                           
  7002                           	psect	config
  7003                           
  7004                           ;Config register CONFIG @ 0x2007
  7005                           ;	Oscillator Selection bits
  7006                           ;	FOSC = XT, XT oscillator
  7007                           ;	Watchdog Timer Enable bit
  7008                           ;	WDTE = OFF, WDT disabled
  7009                           ;	Power-up Timer Enable bit
  7010                           ;	PWRTE = ON, PWRT enabled
  7011                           ;	Brown-out Reset Enable bit
  7012                           ;	BOREN = ON, BOR enabled
  7013                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7014                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7015                           ;	Data EEPROM Memory Code Protection bit
  7016                           ;	CPD = OFF, Data EEPROM code protection off
  7017                           ;	Flash Program Memory Write Enable bits
  7018                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7019                           ;	In-Circuit Debugger Mode bit
  7020                           ;	DEBUG = 0x1, unprogrammed default
  7021                           ;	Flash Program Memory Code Protection bit
  7022                           ;	CP = OFF, Code protection off
  7023  2007                     	org	8199
  7024  2007  3F71               	dw	16241
  7025                           
  7026                           	psect	maintext_split_1
  7027  097C                     u3420:
  7028  097C                     l4596:
  7029                           
  7030                           ;main.c: 300:             Screen_Status = 30;
  7031  097C  301E               	movlw	30
  7032  097D  00FF               	movwf	btemp+1
  7033  097E  087F               	movf	btemp+1,w
  7034  097F  00D1               	movwf	_Screen_Status
  7035  0980                     l4598:
  7036                           
  7037                           ;main.c: 303:         if (Button_Read(RB3) == 0) {
  7038  0980  3000               	movlw	0
  7039  0981  1986               	btfsc	6,3	;volatile
  7040  0982  3001               	movlw	1
  7041  0983  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7042  0988  3A00               	xorlw	0
  7043  0989  1D03               	skipz
  7044  098A  298C               	goto	u3431
  7045  098B  298F               	goto	u3430
  7046  098C                     u3431:
  7047  098C  120A  158A  2C6F   	goto	l4808
  7048  098F                     u3430:
  7049  098F                     l4600:
  7050                           
  7051                           ;main.c: 305:             if (Screen_Status == 8) {
  7052  098F  3008               	movlw	8
  7053  0990  1283               	bcf	3,5	;RP0=0, select bank0
  7054  0991  1303               	bcf	3,6	;RP1=0, select bank0
  7055  0992  0651               	xorwf	_Screen_Status,w
  7056  0993  1D03               	btfss	3,2
  7057  0994  2996               	goto	u3441
  7058  0995  2997               	goto	u3440
  7059  0996                     u3441:
  7060  0996  29C1               	goto	l4612
  7061  0997                     u3440:
  7062  0997                     l4604:
  7063  0997  3000               	movlw	0
  7064  0998  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0999  1303               	bcf	3,6	;RP1=0, select bank0
  7066  099A  1986               	btfsc	6,3	;volatile
  7067  099B  3001               	movlw	1
  7068  099C  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7069  09A1  3A00               	xorlw	0
  7070  09A2  1903               	skipnz
  7071  09A3  29A5               	goto	u3451
  7072  09A4  29A6               	goto	u3450
  7073  09A5                     u3451:
  7074  09A5  2997               	goto	l4604
  7075  09A6                     u3450:
  7076  09A6                     l4606:
  7077                           
  7078                           ;main.c: 307:                 LCD_SendCMD((0x01));
  7079  09A6  3001               	movlw	1
  7080  09A7  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7081  09AC                     l4608:
  7082                           
  7083                           ;main.c: 308:                 LCD_DisStrRC(Passwordmsg, 0, 1);
  7084  09AC  30B4               	movlw	(low (_Passwordmsg| 0))& (0+255)
  7085  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  7086  09AE  1303               	bcf	3,6	;RP1=0, select bank0
  7087  09AF  00A3               	movwf	LCD_DisStrRC@str
  7088  09B0  3000               	movlw	0
  7089  09B1  00A4               	movwf	LCD_DisStrRC@str+1
  7090  09B2  01A5               	clrf	LCD_DisStrRC@row
  7091  09B3  01A6               	clrf	LCD_DisStrRC@column
  7092  09B4  0AA6               	incf	LCD_DisStrRC@column,f
  7093  09B5  160A  118A  202B  120A  158A  	fcall	_LCD_DisStrRC
  7094  09BA                     l4610:
  7095                           
  7096                           ;main.c: 309:                 Screen_Status = 9;
  7097  09BA  3009               	movlw	9
  7098  09BB  00FF               	movwf	btemp+1
  7099  09BC  087F               	movf	btemp+1,w
  7100  09BD  1283               	bcf	3,5	;RP0=0, select bank0
  7101  09BE  1303               	bcf	3,6	;RP1=0, select bank0
  7102  09BF  00D1               	movwf	_Screen_Status
  7103                           
  7104                           ;main.c: 310:             } else if (Screen_Status == 9) {
  7105  09C0  298C               	goto	u3431
  7106  09C1                     l4612:
  7107  09C1  3009               	movlw	9
  7108  09C2  0651               	xorwf	_Screen_Status,w
  7109  09C3  1D03               	btfss	3,2
  7110  09C4  29C6               	goto	u3461
  7111  09C5  29C7               	goto	u3460
  7112  09C6                     u3461:
  7113  09C6  29EE               	goto	l4626
  7114  09C7                     u3460:
  7115  09C7                     l4616:
  7116  09C7  3000               	movlw	0
  7117  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  7118  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  7119  09CA  1986               	btfsc	6,3	;volatile
  7120  09CB  3001               	movlw	1
  7121  09CC  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7122  09D1  3A00               	xorlw	0
  7123  09D2  1903               	skipnz
  7124  09D3  29D5               	goto	u3471
  7125  09D4  29D6               	goto	u3470
  7126  09D5                     u3471:
  7127  09D5  29C7               	goto	l4616
  7128  09D6                     u3470:
  7129  09D6                     l4618:
  7130                           
  7131                           ;main.c: 313:                 Input_Password[Pass_Offset] = '1';
  7132  09D6  3031               	movlw	49
  7133  09D7  00FF               	movwf	btemp+1
  7134  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  7135  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  7136  09DA  084C               	movf	main@Pass_Offset,w
  7137  09DB  3EE8               	addlw	(low (_Input_Password| 0))& (0+255)
  7138  09DC  0084               	movwf	4
  7139  09DD  087F               	movf	btemp+1,w
  7140  09DE  1383               	bcf	3,7	;select IRP bank1
  7141  09DF  0080               	movwf	0
  7142  09E0                     l4620:
  7143                           
  7144                           ;main.c: 314:                 Pass_Offset++;
  7145  09E0  3001               	movlw	1
  7146  09E1  00FF               	movwf	btemp+1
  7147  09E2  087F               	movf	btemp+1,w
  7148  09E3  07CC               	addwf	main@Pass_Offset,f
  7149  09E4                     l4622:
  7150                           
  7151                           ;main.c: 315:                 LCD_DisChar('*');
  7152  09E4  302A               	movlw	42
  7153  09E5  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7154  09EA                     l4624:
  7155                           
  7156                           ;main.c: 316:                 Password_Waiting_Time = 0;
  7157  09EA  1283               	bcf	3,5	;RP0=0, select bank0
  7158  09EB  1303               	bcf	3,6	;RP1=0, select bank0
  7159  09EC  01E2               	clrf	_Password_Waiting_Time
  7160                           
  7161                           ;main.c: 317:             } else if (Screen_Status == 10) {
  7162  09ED  298C               	goto	u3431
  7163  09EE                     l4626:
  7164  09EE  300A               	movlw	10
  7165  09EF  0651               	xorwf	_Screen_Status,w
  7166  09F0  1D03               	btfss	3,2
  7167  09F1  29F3               	goto	u3481
  7168  09F2  29F4               	goto	u3480
  7169  09F3                     u3481:
  7170  09F3  2A52               	goto	l4656
  7171  09F4                     u3480:
  7172  09F4  29FD               	goto	l4632
  7173  09F5                     l4630:
  7174                           
  7175                           ;main.c: 319:                     Button_4_counter++;
  7176  09F5  3001               	movlw	1
  7177  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  7178  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  7179  09F8  07BB               	addwf	main@Button_4_counter,f
  7180  09F9  1803               	skipnc
  7181  09FA  0ABC               	incf	main@Button_4_counter+1,f
  7182  09FB  3000               	movlw	0
  7183  09FC  07BC               	addwf	main@Button_4_counter+1,f
  7184  09FD                     l4632:
  7185                           
  7186                           ;main.c: 318:                 while (Button_Read(RB3) == 0) {
  7187  09FD  3000               	movlw	0
  7188  09FE  1986               	btfsc	6,3	;volatile
  7189  09FF  3001               	movlw	1
  7190  0A00  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7191  0A05  3A00               	xorlw	0
  7192  0A06  1903               	skipnz
  7193  0A07  2A09               	goto	u3491
  7194  0A08  2A0A               	goto	u3490
  7195  0A09                     u3491:
  7196  0A09  29F5               	goto	l4630
  7197  0A0A                     u3490:
  7198  0A0A                     l4634:
  7199                           
  7200                           ;main.c: 321:                 if (Button_4_counter < 500) {
  7201  0A0A  3001               	movlw	1
  7202  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  7203  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  7204  0A0D  023C               	subwf	main@Button_4_counter+1,w
  7205  0A0E  30F4               	movlw	244
  7206  0A0F  1903               	skipnz
  7207  0A10  023B               	subwf	main@Button_4_counter,w
  7208  0A11  1803               	skipnc
  7209  0A12  2A14               	goto	u3501
  7210  0A13  2A15               	goto	u3500
  7211  0A14                     u3501:
  7212  0A14  2A27               	goto	l4644
  7213  0A15                     u3500:
  7214  0A15                     l4636:
  7215                           
  7216                           ;main.c: 322:                     LCD_SendCMD((0x01));
  7217  0A15  3001               	movlw	1
  7218  0A16  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7219  0A1B                     l4638:
  7220                           
  7221                           ;main.c: 323:                     Main_Menu_Offset--;
  7222  0A1B  30FF               	movlw	255
  7223  0A1C  00FF               	movwf	btemp+1
  7224  0A1D  087F               	movf	btemp+1,w
  7225  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  7227  0A20  07E1               	addwf	_Main_Menu_Offset,f
  7228  0A21                     l4640:
  7229                           
  7230                           ;main.c: 324:                     if (Main_Menu_Offset < 0) {
  7231  0A21  1FE1               	btfss	_Main_Menu_Offset,7
  7232  0A22  2A24               	goto	u3511
  7233  0A23  2A25               	goto	u3510
  7234  0A24                     u3511:
  7235  0A24  2A8C               	goto	l410
  7236  0A25                     u3510:
  7237  0A25                     l4642:
  7238                           
  7239                           ;main.c: 325:                         Main_Menu_Offset = 0;
  7240  0A25  01E1               	clrf	_Main_Menu_Offset
  7241  0A26  298C               	goto	u3431
  7242  0A27                     l4644:
  7243                           
  7244                           ;main.c: 329:                     LCD_SendCMD((0x01));
  7245  0A27  3001               	movlw	1
  7246  0A28  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7247  0A2D                     l4646:
  7248                           
  7249                           ;main.c: 330:                     Screen_Status = 11 + Main_Menu_Offset;
  7250  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  7251  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  7252  0A2F  0861               	movf	_Main_Menu_Offset,w
  7253  0A30  3E0B               	addlw	11
  7254  0A31  00FF               	movwf	btemp+1
  7255  0A32  087F               	movf	btemp+1,w
  7256  0A33  00D1               	movwf	_Screen_Status
  7257  0A34                     l4648:
  7258                           
  7259                           ;main.c: 331:                     if (Screen_Status == 15) {
  7260  0A34  300F               	movlw	15
  7261  0A35  0651               	xorwf	_Screen_Status,w
  7262  0A36  1D03               	btfss	3,2
  7263  0A37  2A39               	goto	u3521
  7264  0A38  2A3A               	goto	u3520
  7265  0A39                     u3521:
  7266  0A39  2A4D               	goto	l4654
  7267  0A3A                     u3520:
  7268  0A3A                     l4650:
  7269                           
  7270                           ;main.c: 332:                         LCD_SendCMD((0x0C));
  7271  0A3A  300C               	movlw	12
  7272  0A3B  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7273  0A40                     l4652:
  7274                           
  7275                           ;main.c: 333:                         LCD_DisStrRC(Passwordmsg, 0, 0);
  7276  0A40  30B4               	movlw	(low (_Passwordmsg| 0))& (0+255)
  7277  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  7278  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  7279  0A43  00A3               	movwf	LCD_DisStrRC@str
  7280  0A44  3000               	movlw	0
  7281  0A45  00A4               	movwf	LCD_DisStrRC@str+1
  7282  0A46  01A5               	clrf	LCD_DisStrRC@row
  7283  0A47  01A6               	clrf	LCD_DisStrRC@column
  7284  0A48  160A  118A  202B  120A  158A  	fcall	_LCD_DisStrRC
  7285  0A4D                     l4654:
  7286                           
  7287                           ;main.c: 335:                     Button_4_counter = 0;
  7288  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7289  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  7290  0A4F  01BB               	clrf	main@Button_4_counter
  7291  0A50  01BC               	clrf	main@Button_4_counter+1
  7292  0A51  298C               	goto	u3431
  7293  0A52                     l4656:
  7294  0A52  300B               	movlw	11
  7295  0A53  0651               	xorwf	_Screen_Status,w
  7296  0A54  1D03               	btfss	3,2
  7297  0A55  2A57               	goto	u3531
  7298  0A56  2A58               	goto	u3530
  7299  0A57                     u3531:
  7300  0A57  2A8D               	goto	l4672
  7301  0A58                     u3530:
  7302  0A58                     l4660:
  7303  0A58  3000               	movlw	0
  7304  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  7305  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  7306  0A5B  1986               	btfsc	6,3	;volatile
  7307  0A5C  3001               	movlw	1
  7308  0A5D  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7309  0A62  3A00               	xorlw	0
  7310  0A63  1903               	skipnz
  7311  0A64  2A66               	goto	u3541
  7312  0A65  2A67               	goto	u3540
  7313  0A66                     u3541:
  7314  0A66  2A58               	goto	l4660
  7315  0A67                     u3540:
  7316  0A67                     l4662:
  7317                           
  7318                           ;main.c: 341:                 if (Memory_Offset > 0) {
  7319  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  7320  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  7321  0A69  0850               	movf	main@Memory_Offset,w
  7322  0A6A  1903               	btfsc	3,2
  7323  0A6B  2A6D               	goto	u3551
  7324  0A6C  2A6E               	goto	u3550
  7325  0A6D                     u3551:
  7326  0A6D  298C               	goto	u3431
  7327  0A6E                     u3550:
  7328  0A6E                     l4664:
  7329                           
  7330                           ;main.c: 342:                     View_Log_Counter += 16;
  7331  0A6E  3010               	movlw	16
  7332  0A6F  00FF               	movwf	btemp+1
  7333  0A70  087F               	movf	btemp+1,w
  7334  0A71  07CE               	addwf	main@View_Log_Counter,f
  7335  0A72                     l4666:
  7336                           
  7337                           ;main.c: 343:                     if (View_Log_Counter > Memory_Offset) {
  7338  0A72  084E               	movf	main@View_Log_Counter,w
  7339  0A73  00B6               	movwf	??_main
  7340  0A74  01B7               	clrf	??_main+1
  7341  0A75  1BB6               	btfsc	??_main,7
  7342  0A76  03B7               	decf	??_main+1,f
  7343  0A77  0837               	movf	??_main+1,w
  7344  0A78  3A80               	xorlw	128
  7345  0A79  3C80               	sublw	128
  7346  0A7A  1D03               	skipz
  7347  0A7B  2A7E               	goto	u3565
  7348  0A7C  0836               	movf	??_main,w
  7349  0A7D  0250               	subwf	main@Memory_Offset,w
  7350  0A7E                     u3565:
  7351  0A7E  1803               	skipnc
  7352  0A7F  2A81               	goto	u3561
  7353  0A80  2A82               	goto	u3560
  7354  0A81                     u3561:
  7355  0A81  2A85               	goto	l4670
  7356  0A82                     u3560:
  7357  0A82                     l4668:
  7358                           
  7359                           ;main.c: 344:                         View_Log_Counter = 0;
  7360  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  7361  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  7362  0A84  01CE               	clrf	main@View_Log_Counter
  7363  0A85                     l4670:
  7364                           
  7365                           ;main.c: 346:                     LCD_SendCMD((0x01));
  7366  0A85  3001               	movlw	1
  7367  0A86  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7368  0A8B  298C               	goto	u3431
  7369  0A8C                     l410:	
  7370                           ;main.c: 347:                 }
  7371                           
  7372                           
  7373                           ;main.c: 348:             } else if (Screen_Status == 15) {
  7374  0A8C  298C               	goto	u3431
  7375  0A8D                     l4672:
  7376  0A8D  300F               	movlw	15
  7377  0A8E  0651               	xorwf	_Screen_Status,w
  7378  0A8F  1D03               	btfss	3,2
  7379  0A90  2A92               	goto	u3571
  7380  0A91  2A93               	goto	u3570
  7381  0A92                     u3571:
  7382  0A92  2AB7               	goto	l4686
  7383  0A93                     u3570:
  7384  0A93                     l4676:
  7385  0A93  3000               	movlw	0
  7386  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  7387  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  7388  0A96  1986               	btfsc	6,3	;volatile
  7389  0A97  3001               	movlw	1
  7390  0A98  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7391  0A9D  3A00               	xorlw	0
  7392  0A9E  1903               	skipnz
  7393  0A9F  2AA1               	goto	u3581
  7394  0AA0  2AA2               	goto	u3580
  7395  0AA1                     u3581:
  7396  0AA1  2A93               	goto	l4676
  7397  0AA2                     u3580:
  7398  0AA2                     l4678:
  7399                           
  7400                           ;main.c: 350:                 Input_Password[New_Password_Offset] = '1';
  7401  0AA2  3031               	movlw	49
  7402  0AA3  00FF               	movwf	btemp+1
  7403  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  7405  0AA6  0863               	movf	_New_Password_Offset,w
  7406  0AA7  3EE8               	addlw	(low (_Input_Password| 0))& (0+255)
  7407  0AA8  0084               	movwf	4
  7408  0AA9  087F               	movf	btemp+1,w
  7409  0AAA  1383               	bcf	3,7	;select IRP bank1
  7410  0AAB  0080               	movwf	0
  7411  0AAC                     l4680:
  7412                           
  7413                           ;main.c: 351:                 New_Password_Offset++;
  7414  0AAC  3001               	movlw	1
  7415  0AAD  00FF               	movwf	btemp+1
  7416  0AAE  087F               	movf	btemp+1,w
  7417  0AAF  07E3               	addwf	_New_Password_Offset,f
  7418  0AB0                     l4682:
  7419                           
  7420                           ;main.c: 352:                 LCD_DisChar('*');
  7421  0AB0  302A               	movlw	42
  7422  0AB1  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7423  0AB6  29EA               	goto	l4624
  7424  0AB7                     l4686:
  7425  0AB7  300E               	movlw	14
  7426  0AB8  0651               	xorwf	_Screen_Status,w
  7427  0AB9  1D03               	btfss	3,2
  7428  0ABA  2ABC               	goto	u3591
  7429  0ABB  2ABD               	goto	u3590
  7430  0ABC                     u3591:
  7431  0ABC  298C               	goto	u3431
  7432  0ABD                     u3590:
  7433  0ABD  120A  158A  2AC8   	goto	l4692
  7434                           
  7435                           	psect	maintext_split_2
  7436  0AC0                     l4690:
  7437                           
  7438                           ;main.c: 356:                     Button_4_counter++;
  7439  0AC0  3001               	movlw	1
  7440  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0AC3  07BB               	addwf	main@Button_4_counter,f
  7443  0AC4  1803               	skipnc
  7444  0AC5  0ABC               	incf	main@Button_4_counter+1,f
  7445  0AC6  3000               	movlw	0
  7446  0AC7  07BC               	addwf	main@Button_4_counter+1,f
  7447  0AC8                     l4692:
  7448                           
  7449                           ;main.c: 355:                 while (Button_Read(RB3) == 0) {
  7450  0AC8  3000               	movlw	0
  7451  0AC9  1986               	btfsc	6,3	;volatile
  7452  0ACA  3001               	movlw	1
  7453  0ACB  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7454  0AD0  3A00               	xorlw	0
  7455  0AD1  1903               	skipnz
  7456  0AD2  2AD4               	goto	u3601
  7457  0AD3  2AD5               	goto	u3600
  7458  0AD4                     u3601:
  7459  0AD4  2AC0               	goto	l4690
  7460  0AD5                     u3600:
  7461  0AD5                     l4694:
  7462                           
  7463                           ;main.c: 358:                 if (Button_4_counter < 500) {
  7464  0AD5  3001               	movlw	1
  7465  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  7466  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  7467  0AD8  023C               	subwf	main@Button_4_counter+1,w
  7468  0AD9  30F4               	movlw	244
  7469  0ADA  1903               	skipnz
  7470  0ADB  023B               	subwf	main@Button_4_counter,w
  7471  0ADC  1803               	skipnc
  7472  0ADD  2ADF               	goto	u3611
  7473  0ADE  2AE0               	goto	u3610
  7474  0ADF                     u3611:
  7475  0ADF  2B5B               	goto	l4740
  7476  0AE0                     u3610:
  7477  0AE0                     l4696:
  7478                           
  7479                           ;main.c: 359:                     if (Selection_Part == 1) {
  7480  0AE0  0352               	decf	_Selection_Part,w
  7481  0AE1  1D03               	btfss	3,2
  7482  0AE2  2AE4               	goto	u3621
  7483  0AE3  2AE5               	goto	u3620
  7484  0AE4                     u3621:
  7485  0AE4  2B04               	goto	l4710
  7486  0AE5                     u3620:
  7487  0AE5                     l4698:
  7488                           
  7489                           ;main.c: 360:                         RTC_Date.Seconds[1]++;
  7490  0AE5  3001               	movlw	1
  7491  0AE6  00FF               	movwf	btemp+1
  7492  0AE7  087F               	movf	btemp+1,w
  7493  0AE8  1683               	bsf	3,5	;RP0=1, select bank3
  7494  0AE9  1703               	bsf	3,6	;RP1=1, select bank3
  7495  0AEA  07DA               	addwf	(main@RTC_Date^(0+384)+1),f
  7496  0AEB                     l4700:
  7497                           
  7498                           ;main.c: 361:                         if (RTC_Date.Seconds[1] == 10 + '0') {
  7499  0AEB  303A               	movlw	58
  7500  0AEC  065A               	xorwf	(main@RTC_Date^(0+384)+1),w
  7501  0AED  1D03               	btfss	3,2
  7502  0AEE  2AF0               	goto	u3631
  7503  0AEF  2AF1               	goto	u3630
  7504  0AF0                     u3631:
  7505  0AF0  2AF9               	goto	l4706
  7506  0AF1                     u3630:
  7507  0AF1                     l4702:
  7508                           
  7509                           ;main.c: 362:                             RTC_Date.Seconds[1] = '0';
  7510  0AF1  3030               	movlw	48
  7511  0AF2  00FF               	movwf	btemp+1
  7512  0AF3  087F               	movf	btemp+1,w
  7513  0AF4  00DA               	movwf	(main@RTC_Date^(0+384)+1)
  7514  0AF5                     l4704:
  7515                           
  7516                           ;main.c: 363:                             RTC_Date.Seconds[0]++;
  7517  0AF5  3001               	movlw	1
  7518  0AF6  00FF               	movwf	btemp+1
  7519  0AF7  087F               	movf	btemp+1,w
  7520  0AF8  07D9               	addwf	main@RTC_Date^(0+384),f
  7521  0AF9                     l4706:
  7522                           
  7523                           ;main.c: 365:                         if (RTC_Date.Seconds[0] == 6 + '0') {
  7524  0AF9  3036               	movlw	54
  7525  0AFA  0659               	xorwf	main@RTC_Date^(0+384),w
  7526  0AFB  1D03               	btfss	3,2
  7527  0AFC  2AFE               	goto	u3641
  7528  0AFD  2AFF               	goto	u3640
  7529  0AFE                     u3641:
  7530  0AFE  2B28               	goto	l4724
  7531  0AFF                     u3640:
  7532  0AFF                     l4708:
  7533                           
  7534                           ;main.c: 366:                             RTC_Date.Seconds[0] = '0';
  7535  0AFF  3030               	movlw	48
  7536  0B00  00FF               	movwf	btemp+1
  7537  0B01  087F               	movf	btemp+1,w
  7538  0B02  00D9               	movwf	main@RTC_Date^(0+384)
  7539  0B03  2B28               	goto	l4724
  7540  0B04                     l4710:
  7541  0B04  3002               	movlw	2
  7542  0B05  0652               	xorwf	_Selection_Part,w
  7543  0B06  1D03               	btfss	3,2
  7544  0B07  2B09               	goto	u3651
  7545  0B08  2B0A               	goto	u3650
  7546  0B09                     u3651:
  7547  0B09  2B28               	goto	l4724
  7548  0B0A                     u3650:
  7549  0B0A                     l4712:
  7550                           
  7551                           ;main.c: 369:                         RTC_Date.Minutes[1]++;
  7552  0B0A  3001               	movlw	1
  7553  0B0B  00FF               	movwf	btemp+1
  7554  0B0C  087F               	movf	btemp+1,w
  7555  0B0D  1683               	bsf	3,5	;RP0=1, select bank3
  7556  0B0E  1703               	bsf	3,6	;RP1=1, select bank3
  7557  0B0F  07DC               	addwf	(main@RTC_Date^(0+384)+3),f
  7558  0B10                     l4714:
  7559                           
  7560                           ;main.c: 370:                         if (RTC_Date.Minutes[1] == 10 + '0') {
  7561  0B10  303A               	movlw	58
  7562  0B11  065C               	xorwf	(main@RTC_Date^(0+384)+3),w
  7563  0B12  1D03               	btfss	3,2
  7564  0B13  2B15               	goto	u3661
  7565  0B14  2B16               	goto	u3660
  7566  0B15                     u3661:
  7567  0B15  2B1E               	goto	l4720
  7568  0B16                     u3660:
  7569  0B16                     l4716:
  7570                           
  7571                           ;main.c: 371:                             RTC_Date.Minutes[1] = '0';
  7572  0B16  3030               	movlw	48
  7573  0B17  00FF               	movwf	btemp+1
  7574  0B18  087F               	movf	btemp+1,w
  7575  0B19  00DC               	movwf	(main@RTC_Date^(0+384)+3)
  7576  0B1A                     l4718:
  7577                           
  7578                           ;main.c: 372:                             RTC_Date.Minutes[0]++;
  7579  0B1A  3001               	movlw	1
  7580  0B1B  00FF               	movwf	btemp+1
  7581  0B1C  087F               	movf	btemp+1,w
  7582  0B1D  07DB               	addwf	(main@RTC_Date^(0+384)+2),f
  7583  0B1E                     l4720:
  7584                           
  7585                           ;main.c: 374:                         if (RTC_Date.Minutes[0] == 6 + '0') {
  7586  0B1E  3036               	movlw	54
  7587  0B1F  065B               	xorwf	(main@RTC_Date^(0+384)+2),w
  7588  0B20  1D03               	btfss	3,2
  7589  0B21  2B23               	goto	u3671
  7590  0B22  2B24               	goto	u3670
  7591  0B23                     u3671:
  7592  0B23  2B28               	goto	l4724
  7593  0B24                     u3670:
  7594  0B24                     l4722:
  7595                           
  7596                           ;main.c: 375:                             RTC_Date.Minutes[0] = '0';
  7597  0B24  3030               	movlw	48
  7598  0B25  00FF               	movwf	btemp+1
  7599  0B26  087F               	movf	btemp+1,w
  7600  0B27  00DB               	movwf	(main@RTC_Date^(0+384)+2)
  7601  0B28                     l4724:
  7602                           
  7603                           ;main.c: 378:                     if (Selection_Part == 3) {
  7604  0B28  3003               	movlw	3
  7605  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  7606  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  7607  0B2B  0652               	xorwf	_Selection_Part,w
  7608  0B2C  1D03               	btfss	3,2
  7609  0B2D  2B2F               	goto	u3681
  7610  0B2E  2B30               	goto	u3680
  7611  0B2F                     u3681:
  7612  0B2F  2C6F               	goto	l4808
  7613  0B30                     u3680:
  7614  0B30                     l4726:
  7615                           
  7616                           ;main.c: 379:                         RTC_Date.Hours[1]++;
  7617  0B30  3001               	movlw	1
  7618  0B31  00FF               	movwf	btemp+1
  7619  0B32  087F               	movf	btemp+1,w
  7620  0B33  1683               	bsf	3,5	;RP0=1, select bank3
  7621  0B34  1703               	bsf	3,6	;RP1=1, select bank3
  7622  0B35  07DE               	addwf	(main@RTC_Date^(0+384)+5),f
  7623  0B36                     l4728:
  7624                           
  7625                           ;main.c: 380:                         if (RTC_Date.Hours[1] == 10 + '0') {
  7626  0B36  303A               	movlw	58
  7627  0B37  065E               	xorwf	(main@RTC_Date^(0+384)+5),w
  7628  0B38  1D03               	btfss	3,2
  7629  0B39  2B3B               	goto	u3691
  7630  0B3A  2B3C               	goto	u3690
  7631  0B3B                     u3691:
  7632  0B3B  2B44               	goto	l4734
  7633  0B3C                     u3690:
  7634  0B3C                     l4730:
  7635                           
  7636                           ;main.c: 381:                             RTC_Date.Hours[1] = '0';
  7637  0B3C  3030               	movlw	48
  7638  0B3D  00FF               	movwf	btemp+1
  7639  0B3E  087F               	movf	btemp+1,w
  7640  0B3F  00DE               	movwf	(main@RTC_Date^(0+384)+5)
  7641  0B40                     l4732:
  7642                           
  7643                           ;main.c: 382:                             RTC_Date.Hours[0]++;
  7644  0B40  3001               	movlw	1
  7645  0B41  00FF               	movwf	btemp+1
  7646  0B42  087F               	movf	btemp+1,w
  7647  0B43  07DD               	addwf	(main@RTC_Date^(0+384)+4),f
  7648  0B44                     l4734:
  7649                           
  7650                           ;main.c: 384:                         if ((RTC_Date.Hours[0] == '2') && (RTC_Date.Hours[
      +                          1] == '4')) {
  7651  0B44  3032               	movlw	50
  7652  0B45  065D               	xorwf	(main@RTC_Date^(0+384)+4),w
  7653  0B46  1D03               	btfss	3,2
  7654  0B47  2B49               	goto	u3701
  7655  0B48  2B4C               	goto	u3700
  7656  0B49                     u3701:
  7657  0B49  120A  158A  2A8C   	goto	l410
  7658  0B4C                     u3700:
  7659  0B4C                     l4736:
  7660  0B4C  3034               	movlw	52
  7661  0B4D  065E               	xorwf	(main@RTC_Date^(0+384)+5),w
  7662  0B4E  1D03               	btfss	3,2
  7663  0B4F  2B51               	goto	u3711
  7664  0B50  2B52               	goto	u3710
  7665  0B51                     u3711:
  7666  0B51  2B49               	goto	u3701
  7667  0B52                     u3710:
  7668  0B52                     l4738:
  7669                           
  7670                           ;main.c: 385:                             RTC_Date.Hours[0] = '0';
  7671  0B52  3030               	movlw	48
  7672  0B53  00FF               	movwf	btemp+1
  7673  0B54  087F               	movf	btemp+1,w
  7674  0B55  00DD               	movwf	(main@RTC_Date^(0+384)+4)
  7675                           
  7676                           ;main.c: 386:                             RTC_Date.Hours[1] = '0';
  7677  0B56  3030               	movlw	48
  7678  0B57  00FF               	movwf	btemp+1
  7679  0B58  087F               	movf	btemp+1,w
  7680  0B59  00DE               	movwf	(main@RTC_Date^(0+384)+5)
  7681  0B5A  2C6F               	goto	l4808
  7682  0B5B                     l4740:
  7683                           
  7684                           ;main.c: 391:                     temp_ = ((RTC_Date.Seconds[0] - '0') << 4) | (RTC_Date
      +                          .Seconds[1] - '0');
  7685  0B5B  1683               	bsf	3,5	;RP0=1, select bank3
  7686  0B5C  1703               	bsf	3,6	;RP1=1, select bank3
  7687  0B5D  0859               	movf	main@RTC_Date^(0+384),w
  7688  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  7689  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  7690  0B60  00B6               	movwf	??_main
  7691  0B61  3004               	movlw	4
  7692  0B62                     u3725:
  7693  0B62  1003               	clrc
  7694  0B63  0DB6               	rlf	??_main,f
  7695  0B64  3EFF               	addlw	-1
  7696  0B65  1D03               	skipz
  7697  0B66  2B62               	goto	u3725
  7698  0B67  1683               	bsf	3,5	;RP0=1, select bank3
  7699  0B68  1703               	bsf	3,6	;RP1=1, select bank3
  7700  0B69  085A               	movf	(main@RTC_Date^(0+384)+1),w
  7701  0B6A  3ED0               	addlw	208
  7702  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7703  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7704  0B6D  0436               	iorwf	??_main,w
  7705  0B6E  00FF               	movwf	btemp+1
  7706  0B6F  087F               	movf	btemp+1,w
  7707  0B70  00CF               	movwf	main@temp_
  7708  0B71                     l4742:
  7709                           
  7710                           ;main.c: 392:                     RTC_DS1307_Write(0x00, temp_);
  7711  0B71  084F               	movf	main@temp_,w
  7712  0B72  00FF               	movwf	btemp+1
  7713  0B73  087F               	movf	btemp+1,w
  7714  0B74  00F4               	movwf	RTC_DS1307_Write@Data
  7715  0B75  3000               	movlw	0
  7716  0B76  160A  118A  20B2  120A  158A  	fcall	_RTC_DS1307_Write
  7717  0B7B                     l4744:
  7718                           
  7719                           ;main.c: 394:                     temp_ = ((RTC_Date.Minutes[0] - '0') << 4) | (RTC_Date
      +                          .Minutes[1] - '0');
  7720  0B7B  1683               	bsf	3,5	;RP0=1, select bank3
  7721  0B7C  1703               	bsf	3,6	;RP1=1, select bank3
  7722  0B7D  085B               	movf	(main@RTC_Date^(0+384)+2),w
  7723  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  7724  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  7725  0B80  00B6               	movwf	??_main
  7726  0B81  3004               	movlw	4
  7727  0B82                     u3735:
  7728  0B82  1003               	clrc
  7729  0B83  0DB6               	rlf	??_main,f
  7730  0B84  3EFF               	addlw	-1
  7731  0B85  1D03               	skipz
  7732  0B86  2B82               	goto	u3735
  7733  0B87  1683               	bsf	3,5	;RP0=1, select bank3
  7734  0B88  1703               	bsf	3,6	;RP1=1, select bank3
  7735  0B89  085C               	movf	(main@RTC_Date^(0+384)+3),w
  7736  0B8A  3ED0               	addlw	208
  7737  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  7738  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  7739  0B8D  0436               	iorwf	??_main,w
  7740  0B8E  00FF               	movwf	btemp+1
  7741  0B8F  087F               	movf	btemp+1,w
  7742  0B90  00CF               	movwf	main@temp_
  7743                           
  7744                           ;main.c: 395:                     RTC_DS1307_Write(0x01, temp_);
  7745  0B91  084F               	movf	main@temp_,w
  7746  0B92  00FF               	movwf	btemp+1
  7747  0B93  087F               	movf	btemp+1,w
  7748  0B94  00F4               	movwf	RTC_DS1307_Write@Data
  7749  0B95  3001               	movlw	1
  7750  0B96  160A  118A  20B2  120A  158A  	fcall	_RTC_DS1307_Write
  7751  0B9B                     l4746:
  7752                           
  7753                           ;main.c: 397:                     temp_ = ((RTC_Date.Hours[0] - '0') << 4) | (RTC_Date.H
      +                          ours[1] - '0');
  7754  0B9B  1683               	bsf	3,5	;RP0=1, select bank3
  7755  0B9C  1703               	bsf	3,6	;RP1=1, select bank3
  7756  0B9D  085D               	movf	(main@RTC_Date^(0+384)+4),w
  7757  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  7758  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  7759  0BA0  00B6               	movwf	??_main
  7760  0BA1  3004               	movlw	4
  7761  0BA2                     u3745:
  7762  0BA2  1003               	clrc
  7763  0BA3  0DB6               	rlf	??_main,f
  7764  0BA4  3EFF               	addlw	-1
  7765  0BA5  1D03               	skipz
  7766  0BA6  2BA2               	goto	u3745
  7767  0BA7  1683               	bsf	3,5	;RP0=1, select bank3
  7768  0BA8  1703               	bsf	3,6	;RP1=1, select bank3
  7769  0BA9  085E               	movf	(main@RTC_Date^(0+384)+5),w
  7770  0BAA  3ED0               	addlw	208
  7771  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  7772  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  7773  0BAD  0436               	iorwf	??_main,w
  7774  0BAE  00FF               	movwf	btemp+1
  7775  0BAF  087F               	movf	btemp+1,w
  7776  0BB0  00CF               	movwf	main@temp_
  7777  0BB1                     l4748:
  7778                           
  7779                           ;main.c: 398:                     RTC_DS1307_Write(0x02, temp_);
  7780  0BB1  084F               	movf	main@temp_,w
  7781  0BB2  00FF               	movwf	btemp+1
  7782  0BB3  087F               	movf	btemp+1,w
  7783  0BB4  00F4               	movwf	RTC_DS1307_Write@Data
  7784  0BB5  3002               	movlw	2
  7785  0BB6  160A  118A  20B2  120A  158A  	fcall	_RTC_DS1307_Write
  7786  0BBB                     l4750:
  7787                           
  7788                           ;main.c: 400:                     LCD_SendCMD((0x01));
  7789  0BBB  3001               	movlw	1
  7790  0BBC  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7791  0BC1                     l4752:
  7792                           
  7793                           ;main.c: 401:                     LCD_GotoRC(0, 0);
  7794  0BC1  01F6               	clrf	LCD_GotoRC@column
  7795  0BC2  3000               	movlw	0
  7796  0BC3  160A  118A  2013  120A  158A  	fcall	_LCD_GotoRC
  7797  0BC8                     l4754:
  7798                           
  7799                           ;main.c: 402:                     LCD_DisChar('T');
  7800  0BC8  3054               	movlw	84
  7801  0BC9  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7802  0BCE                     l4756:
  7803                           
  7804                           ;main.c: 403:                     LCD_DisChar('I');
  7805  0BCE  3049               	movlw	73
  7806  0BCF  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7807  0BD4                     l4758:
  7808                           
  7809                           ;main.c: 404:                     LCD_DisChar('M');
  7810  0BD4  304D               	movlw	77
  7811  0BD5  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7812  0BDA                     l4760:
  7813                           
  7814                           ;main.c: 405:                     LCD_DisChar('E');
  7815  0BDA  3045               	movlw	69
  7816  0BDB  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7817  0BE0                     l4762:
  7818                           
  7819                           ;main.c: 406:                     LCD_DisChar(' ');
  7820  0BE0  3020               	movlw	32
  7821  0BE1  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7822  0BE6                     l4764:
  7823                           
  7824                           ;main.c: 407:                     LCD_DisChar('I');
  7825  0BE6  3049               	movlw	73
  7826  0BE7  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7827  0BEC                     l4766:
  7828                           
  7829                           ;main.c: 408:                     LCD_DisChar('S');
  7830  0BEC  3053               	movlw	83
  7831  0BED  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7832  0BF2                     l4768:
  7833                           
  7834                           ;main.c: 409:                     LCD_DisChar(' ');
  7835  0BF2  3020               	movlw	32
  7836  0BF3  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7837  0BF8                     l4770:
  7838                           
  7839                           ;main.c: 410:                     LCD_DisChar('S');
  7840  0BF8  3053               	movlw	83
  7841  0BF9  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7842  0BFE                     l4772:
  7843                           
  7844                           ;main.c: 411:                     LCD_DisChar('E');
  7845  0BFE  3045               	movlw	69
  7846  0BFF  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7847  0C04                     l4774:
  7848                           
  7849                           ;main.c: 412:                     LCD_DisChar('T');
  7850  0C04  3054               	movlw	84
  7851  0C05  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7852  0C0A                     l4776:
  7853                           
  7854                           ;main.c: 413:                     LCD_GotoRC(1, 0);
  7855  0C0A  01F6               	clrf	LCD_GotoRC@column
  7856  0C0B  3001               	movlw	1
  7857  0C0C  160A  118A  2013  120A  158A  	fcall	_LCD_GotoRC
  7858  0C11                     l4778:
  7859                           
  7860                           ;main.c: 414:                     LCD_DisChar('S');
  7861  0C11  3053               	movlw	83
  7862  0C12  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7863  0C17                     l4780:
  7864                           
  7865                           ;main.c: 415:                     LCD_DisChar('U');
  7866  0C17  3055               	movlw	85
  7867  0C18  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7868  0C1D                     l4782:
  7869                           
  7870                           ;main.c: 416:                     LCD_DisChar('C');
  7871  0C1D  3043               	movlw	67
  7872  0C1E  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7873  0C23                     l4784:
  7874                           
  7875                           ;main.c: 417:                     LCD_DisChar('C');
  7876  0C23  3043               	movlw	67
  7877  0C24  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7878  0C29                     l4786:
  7879                           
  7880                           ;main.c: 418:                     LCD_DisChar('E');
  7881  0C29  3045               	movlw	69
  7882  0C2A  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7883  0C2F                     l4788:
  7884                           
  7885                           ;main.c: 419:                     LCD_DisChar('S');
  7886  0C2F  3053               	movlw	83
  7887  0C30  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7888  0C35                     l4790:
  7889                           
  7890                           ;main.c: 420:                     LCD_DisChar('S');
  7891  0C35  3053               	movlw	83
  7892  0C36  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7893  0C3B                     l4792:
  7894                           
  7895                           ;main.c: 421:                     LCD_DisChar('F');
  7896  0C3B  3046               	movlw	70
  7897  0C3C  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7898  0C41                     l4794:
  7899                           
  7900                           ;main.c: 422:                     LCD_DisChar('U');
  7901  0C41  3055               	movlw	85
  7902  0C42  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7903  0C47                     l4796:
  7904                           
  7905                           ;main.c: 423:                     LCD_DisChar('L');
  7906  0C47  304C               	movlw	76
  7907  0C48  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7908  0C4D                     l4798:
  7909                           
  7910                           ;main.c: 424:                     LCD_DisChar('Y');
  7911  0C4D  3059               	movlw	89
  7912  0C4E  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  7913  0C53                     l4800:
  7914                           
  7915                           ;main.c: 425:                     _delay((unsigned long)((2000)*(8000000/4000.0)));
  7916  0C53  3015               	movlw	21
  7917  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  7918  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  7919  0C56  00B8               	movwf	??_main+2
  7920  0C57  304B               	movlw	75
  7921  0C58  00B7               	movwf	??_main+1
  7922  0C59  30BD               	movlw	189
  7923  0C5A  00B6               	movwf	??_main
  7924  0C5B                     u4097:
  7925  0C5B  0BB6               	decfsz	??_main,f
  7926  0C5C  2C5B               	goto	u4097
  7927  0C5D  0BB7               	decfsz	??_main+1,f
  7928  0C5E  2C5B               	goto	u4097
  7929  0C5F  0BB8               	decfsz	??_main+2,f
  7930  0C60  2C5B               	goto	u4097
  7931  0C61  2C62               	nop2
  7932  0C62                     l4802:
  7933                           
  7934                           ;main.c: 426:                     LCD_SendCMD((0x01));
  7935  0C62  3001               	movlw	1
  7936  0C63  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  7937  0C68                     l4804:
  7938                           
  7939                           ;main.c: 427:                     TMR1ON = 0;
  7940  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  7941  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  7942  0C6A  1010               	bcf	16,0	;volatile
  7943  0C6B                     l4806:
  7944                           
  7945                           ;main.c: 428:                     Screen_Status = 10;
  7946  0C6B  300A               	movlw	10
  7947  0C6C  00FF               	movwf	btemp+1
  7948  0C6D  087F               	movf	btemp+1,w
  7949  0C6E  00D1               	movwf	_Screen_Status
  7950  0C6F                     l4808:
  7951                           
  7952                           ;main.c: 434:         if (Button_Read(RB4) == 0) {
  7953  0C6F  3000               	movlw	0
  7954  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  7955  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  7956  0C72  1A06               	btfsc	6,4	;volatile
  7957  0C73  3001               	movlw	1
  7958  0C74  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7959  0C79  3A00               	xorlw	0
  7960  0C7A  1D03               	skipz
  7961  0C7B  2C7F               	goto	u3751
  7962  0C7C  120A  158A  2855   	goto	u3750
  7963  0C7F                     u3751:
  7964  0C7F  120A  118A  2FA8   	goto	l5224
  7965                           
  7966                           	psect	maintext_split_3
  7967  0855                     u3750:
  7968  0855                     l4810:
  7969                           
  7970                           ;main.c: 435:             if (Screen_Status == 8) {
  7971  0855  3008               	movlw	8
  7972  0856  1283               	bcf	3,5	;RP0=0, select bank0
  7973  0857  1303               	bcf	3,6	;RP1=0, select bank0
  7974  0858  0651               	xorwf	_Screen_Status,w
  7975  0859  1D03               	btfss	3,2
  7976  085A  285C               	goto	u3761
  7977  085B  285D               	goto	u3760
  7978  085C                     u3761:
  7979  085C  2889               	goto	l4822
  7980  085D                     u3760:
  7981  085D                     l4814:
  7982  085D  3000               	movlw	0
  7983  085E  1283               	bcf	3,5	;RP0=0, select bank0
  7984  085F  1303               	bcf	3,6	;RP1=0, select bank0
  7985  0860  1A06               	btfsc	6,4	;volatile
  7986  0861  3001               	movlw	1
  7987  0862  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  7988  0867  3A00               	xorlw	0
  7989  0868  1903               	skipnz
  7990  0869  286B               	goto	u3771
  7991  086A  286C               	goto	u3770
  7992  086B                     u3771:
  7993  086B  285D               	goto	l4814
  7994  086C                     u3770:
  7995  086C                     l4816:
  7996                           
  7997                           ;main.c: 437:                 LCD_SendCMD((0x01));
  7998  086C  3001               	movlw	1
  7999  086D  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8000  0872                     l4818:
  8001                           
  8002                           ;main.c: 438:                 LCD_DisStrRC(Passwordmsg, 0, 1);
  8003  0872  30B4               	movlw	(low (_Passwordmsg| 0))& (0+255)
  8004  0873  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0874  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0875  00A3               	movwf	LCD_DisStrRC@str
  8007  0876  3000               	movlw	0
  8008  0877  00A4               	movwf	LCD_DisStrRC@str+1
  8009  0878  01A5               	clrf	LCD_DisStrRC@row
  8010  0879  01A6               	clrf	LCD_DisStrRC@column
  8011  087A  0AA6               	incf	LCD_DisStrRC@column,f
  8012  087B  160A  118A  202B  120A  158A  	fcall	_LCD_DisStrRC
  8013  0880                     l4820:
  8014                           
  8015                           ;main.c: 439:                 Screen_Status = 9;
  8016  0880  3009               	movlw	9
  8017  0881  00FF               	movwf	btemp+1
  8018  0882  087F               	movf	btemp+1,w
  8019  0883  1283               	bcf	3,5	;RP0=0, select bank0
  8020  0884  1303               	bcf	3,6	;RP1=0, select bank0
  8021  0885  00D1               	movwf	_Screen_Status
  8022  0886                     L1:
  8023                           
  8024                           ;main.c: 440:             } else if (Screen_Status == 9) {
  8025  0886  120A  118A  2FA8   	goto	l5224
  8026  0889                     l4822:
  8027  0889  3009               	movlw	9
  8028  088A  0651               	xorwf	_Screen_Status,w
  8029  088B  1D03               	btfss	3,2
  8030  088C  288E               	goto	u3781
  8031  088D  288F               	goto	u3780
  8032  088E                     u3781:
  8033  088E  28B3               	goto	l4834
  8034  088F                     u3780:
  8035  088F                     l4826:
  8036  088F  3000               	movlw	0
  8037  0890  1283               	bcf	3,5	;RP0=0, select bank0
  8038  0891  1303               	bcf	3,6	;RP1=0, select bank0
  8039  0892  1A06               	btfsc	6,4	;volatile
  8040  0893  3001               	movlw	1
  8041  0894  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  8042  0899  3A00               	xorlw	0
  8043  089A  1903               	skipnz
  8044  089B  289D               	goto	u3791
  8045  089C  289E               	goto	u3790
  8046  089D                     u3791:
  8047  089D  288F               	goto	l4826
  8048  089E                     u3790:
  8049  089E                     l4828:
  8050                           
  8051                           ;main.c: 443:                 Input_Password[Pass_Offset] = '0';
  8052  089E  3030               	movlw	48
  8053  089F  00FF               	movwf	btemp+1
  8054  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  8055  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  8056  08A2  084C               	movf	main@Pass_Offset,w
  8057  08A3  3EE8               	addlw	(low (_Input_Password| 0))& (0+255)
  8058  08A4  0084               	movwf	4
  8059  08A5  087F               	movf	btemp+1,w
  8060  08A6  1383               	bcf	3,7	;select IRP bank1
  8061  08A7  0080               	movwf	0
  8062  08A8                     l4830:
  8063                           
  8064                           ;main.c: 444:                 Pass_Offset++;
  8065  08A8  3001               	movlw	1
  8066  08A9  00FF               	movwf	btemp+1
  8067  08AA  087F               	movf	btemp+1,w
  8068  08AB  07CC               	addwf	main@Pass_Offset,f
  8069  08AC                     l4832:
  8070                           
  8071                           ;main.c: 445:                 LCD_DisChar('*');
  8072  08AC  302A               	movlw	42
  8073  08AD  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  8074                           
  8075                           ;main.c: 446:             } else if (Screen_Status == 10) {
  8076  08B2  2886               	goto	L1
  8077  08B3                     l4834:
  8078  08B3  300A               	movlw	10
  8079  08B4  0651               	xorwf	_Screen_Status,w
  8080  08B5  1D03               	btfss	3,2
  8081  08B6  28B8               	goto	u3801
  8082  08B7  28B9               	goto	u3800
  8083  08B8                     u3801:
  8084  08B8  2909               	goto	l4858
  8085  08B9                     u3800:
  8086  08B9  28C2               	goto	l4840
  8087  08BA                     l4838:
  8088                           
  8089                           ;main.c: 448:                     Button_5_counter++;
  8090  08BA  3001               	movlw	1
  8091  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  8092  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  8093  08BD  07BD               	addwf	main@Button_5_counter,f
  8094  08BE  1803               	skipnc
  8095  08BF  0ABE               	incf	main@Button_5_counter+1,f
  8096  08C0  3000               	movlw	0
  8097  08C1  07BE               	addwf	main@Button_5_counter+1,f
  8098  08C2                     l4840:
  8099                           
  8100                           ;main.c: 447:                 while (Button_Read(RB4) == 0) {
  8101  08C2  3000               	movlw	0
  8102  08C3  1A06               	btfsc	6,4	;volatile
  8103  08C4  3001               	movlw	1
  8104  08C5  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  8105  08CA  3A00               	xorlw	0
  8106  08CB  1903               	skipnz
  8107  08CC  28CE               	goto	u3811
  8108  08CD  28CF               	goto	u3810
  8109  08CE                     u3811:
  8110  08CE  28BA               	goto	l4838
  8111  08CF                     u3810:
  8112  08CF                     l4842:
  8113                           
  8114                           ;main.c: 450:                 if (Button_5_counter < 500) {
  8115  08CF  3001               	movlw	1
  8116  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  8117  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  8118  08D2  023E               	subwf	main@Button_5_counter+1,w
  8119  08D3  30F4               	movlw	244
  8120  08D4  1903               	skipnz
  8121  08D5  023D               	subwf	main@Button_5_counter,w
  8122  08D6  1803               	skipnc
  8123  08D7  28D9               	goto	u3821
  8124  08D8  28DA               	goto	u3820
  8125  08D9                     u3821:
  8126  08D9  28F4               	goto	l4852
  8127  08DA                     u3820:
  8128  08DA                     l4844:
  8129                           
  8130                           ;main.c: 451:                     LCD_SendCMD((0x01));
  8131  08DA  3001               	movlw	1
  8132  08DB  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8133  08E0                     l4846:
  8134                           
  8135                           ;main.c: 452:                     Main_Menu_Offset++;
  8136  08E0  3001               	movlw	1
  8137  08E1  00FF               	movwf	btemp+1
  8138  08E2  087F               	movf	btemp+1,w
  8139  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  8140  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  8141  08E5  07E1               	addwf	_Main_Menu_Offset,f
  8142  08E6                     l4848:
  8143                           
  8144                           ;main.c: 453:                     if (Main_Menu_Offset > 4) {
  8145  08E6  0861               	movf	_Main_Menu_Offset,w
  8146  08E7  3A80               	xorlw	128
  8147  08E8  3E7B               	addlw	-133
  8148  08E9  1C03               	skipc
  8149  08EA  28EC               	goto	u3831
  8150  08EB  28EF               	goto	u3830
  8151  08EC                     u3831:
  8152  08EC  160A  118A  2DF4   	goto	l444
  8153  08EF                     u3830:
  8154  08EF                     l4850:
  8155                           
  8156                           ;main.c: 454:                         Main_Menu_Offset = 4;
  8157  08EF  3004               	movlw	4
  8158  08F0  00FF               	movwf	btemp+1
  8159  08F1  087F               	movf	btemp+1,w
  8160  08F2  00E1               	movwf	_Main_Menu_Offset
  8161  08F3  2886               	goto	L1
  8162  08F4                     l4852:
  8163                           
  8164                           ;main.c: 458:                     LCD_SendCMD((0x01));
  8165  08F4  3001               	movlw	1
  8166  08F5  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8167                           
  8168                           ;main.c: 459:                     LCD_SendCMD((0x0C));
  8169  08FA  300C               	movlw	12
  8170  08FB  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8171  0900                     l4854:
  8172                           
  8173                           ;main.c: 460:                     Screen_Status = 8;
  8174  0900  3008               	movlw	8
  8175  0901  00FF               	movwf	btemp+1
  8176  0902  087F               	movf	btemp+1,w
  8177  0903  1283               	bcf	3,5	;RP0=0, select bank0
  8178  0904  1303               	bcf	3,6	;RP1=0, select bank0
  8179  0905  00D1               	movwf	_Screen_Status
  8180  0906                     l4856:
  8181                           
  8182                           ;main.c: 461:                     Button_5_counter = 0;
  8183  0906  01BD               	clrf	main@Button_5_counter
  8184  0907  01BE               	clrf	main@Button_5_counter+1
  8185  0908  2886               	goto	L1
  8186  0909                     l4858:
  8187  0909  300B               	movlw	11
  8188  090A  0651               	xorwf	_Screen_Status,w
  8189  090B  1D03               	btfss	3,2
  8190  090C  290E               	goto	u3841
  8191  090D  290F               	goto	u3840
  8192  090E                     u3841:
  8193  090E  294D               	goto	l4882
  8194  090F                     u3840:
  8195  090F  2918               	goto	l4864
  8196  0910                     l4862:
  8197                           
  8198                           ;main.c: 466:                     Button_5_counter++;
  8199  0910  3001               	movlw	1
  8200  0911  1283               	bcf	3,5	;RP0=0, select bank0
  8201  0912  1303               	bcf	3,6	;RP1=0, select bank0
  8202  0913  07BD               	addwf	main@Button_5_counter,f
  8203  0914  1803               	skipnc
  8204  0915  0ABE               	incf	main@Button_5_counter+1,f
  8205  0916  3000               	movlw	0
  8206  0917  07BE               	addwf	main@Button_5_counter+1,f
  8207  0918                     l4864:
  8208                           
  8209                           ;main.c: 465:                 while (Button_Read(RB4) == 0) {
  8210  0918  3000               	movlw	0
  8211  0919  1A06               	btfsc	6,4	;volatile
  8212  091A  3001               	movlw	1
  8213  091B  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  8214  0920  3A00               	xorlw	0
  8215  0921  1903               	skipnz
  8216  0922  2924               	goto	u3851
  8217  0923  2925               	goto	u3850
  8218  0924                     u3851:
  8219  0924  2910               	goto	l4862
  8220  0925                     u3850:
  8221  0925                     l4866:
  8222                           
  8223                           ;main.c: 468:                 if (Button_5_counter < 500) {
  8224  0925  3001               	movlw	1
  8225  0926  1283               	bcf	3,5	;RP0=0, select bank0
  8226  0927  1303               	bcf	3,6	;RP1=0, select bank0
  8227  0928  023E               	subwf	main@Button_5_counter+1,w
  8228  0929  30F4               	movlw	244
  8229  092A  1903               	skipnz
  8230  092B  023D               	subwf	main@Button_5_counter,w
  8231  092C  1803               	skipnc
  8232  092D  292F               	goto	u3861
  8233  092E  2930               	goto	u3860
  8234  092F                     u3861:
  8235  092F  2940               	goto	l4876
  8236  0930                     u3860:
  8237  0930                     l4868:
  8238                           
  8239                           ;main.c: 469:                     View_Log_Counter -= 16;
  8240  0930  30F0               	movlw	240
  8241  0931  00FF               	movwf	btemp+1
  8242  0932  087F               	movf	btemp+1,w
  8243  0933  07CE               	addwf	main@View_Log_Counter,f
  8244  0934                     l4870:
  8245                           
  8246                           ;main.c: 470:                     if (View_Log_Counter < 0) {
  8247  0934  1FCE               	btfss	main@View_Log_Counter,7
  8248  0935  2937               	goto	u3871
  8249  0936  2938               	goto	u3870
  8250  0937                     u3871:
  8251  0937  2939               	goto	l4874
  8252  0938                     u3870:
  8253  0938                     l4872:
  8254                           
  8255                           ;main.c: 471:                         View_Log_Counter = 0;
  8256  0938  01CE               	clrf	main@View_Log_Counter
  8257  0939                     l4874:
  8258                           
  8259                           ;main.c: 473:                     LCD_SendCMD((0x01));
  8260  0939  3001               	movlw	1
  8261  093A  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8262                           
  8263                           ;main.c: 474:                 } else {
  8264  093F  2886               	goto	L1
  8265  0940                     l4876:
  8266                           
  8267                           ;main.c: 475:                     LCD_SendCMD((0x01));
  8268  0940  3001               	movlw	1
  8269  0941  160A  118A  238B  120A  158A  	fcall	_LCD_SendCMD
  8270  0946                     l4878:
  8271                           
  8272                           ;main.c: 476:                     Screen_Status = 10;
  8273  0946  300A               	movlw	10
  8274  0947  00FF               	movwf	btemp+1
  8275  0948  087F               	movf	btemp+1,w
  8276  0949  1283               	bcf	3,5	;RP0=0, select bank0
  8277  094A  1303               	bcf	3,6	;RP1=0, select bank0
  8278  094B  00D1               	movwf	_Screen_Status
  8279  094C  2906               	goto	l4856
  8280  094D                     l4882:
  8281  094D  300F               	movlw	15
  8282  094E  0651               	xorwf	_Screen_Status,w
  8283  094F  1D03               	btfss	3,2
  8284  0950  2952               	goto	u3881
  8285  0951  2955               	goto	u3880
  8286  0952                     u3881:
  8287  0952  160A  118A  2DCB   	goto	l4896
  8288  0955                     u3880:
  8289  0955                     l4886:
  8290  0955  3000               	movlw	0
  8291  0956  1283               	bcf	3,5	;RP0=0, select bank0
  8292  0957  1303               	bcf	3,6	;RP1=0, select bank0
  8293  0958  1A06               	btfsc	6,4	;volatile
  8294  0959  3001               	movlw	1
  8295  095A  160A  158A  27E8  120A  158A  	fcall	_Button_Read
  8296  095F  3A00               	xorlw	0
  8297  0960  1903               	skipnz
  8298  0961  2963               	goto	u3891
  8299  0962  2964               	goto	u3890
  8300  0963                     u3891:
  8301  0963  2955               	goto	l4886
  8302  0964                     u3890:
  8303  0964                     l4888:
  8304                           
  8305                           ;main.c: 481:                 Input_Password[New_Password_Offset] = '0';
  8306  0964  3030               	movlw	48
  8307  0965  00FF               	movwf	btemp+1
  8308  0966  1283               	bcf	3,5	;RP0=0, select bank0
  8309  0967  1303               	bcf	3,6	;RP1=0, select bank0
  8310  0968  0863               	movf	_New_Password_Offset,w
  8311  0969  3EE8               	addlw	(low (_Input_Password| 0))& (0+255)
  8312  096A  0084               	movwf	4
  8313  096B  087F               	movf	btemp+1,w
  8314  096C  1383               	bcf	3,7	;select IRP bank1
  8315  096D  0080               	movwf	0
  8316  096E                     l4890:
  8317                           
  8318                           ;main.c: 482:                 New_Password_Offset++;
  8319  096E  3001               	movlw	1
  8320  096F  00FF               	movwf	btemp+1
  8321  0970  087F               	movf	btemp+1,w
  8322  0971  07E3               	addwf	_New_Password_Offset,f
  8323  0972                     l4892:
  8324                           
  8325                           ;main.c: 483:                 LCD_DisChar('*');
  8326  0972  302A               	movlw	42
  8327  0973  160A  118A  2328  120A  158A  	fcall	_LCD_DisChar
  8328  0978                     l4894:
  8329                           
  8330                           ;main.c: 484:                 Password_Waiting_Time = 0;
  8331  0978  1283               	bcf	3,5	;RP0=0, select bank0
  8332  0979  1303               	bcf	3,6	;RP1=0, select bank0
  8333  097A  01E2               	clrf	_Password_Waiting_Time
  8334                           
  8335                           ;main.c: 485:             } else if (Screen_Status == 14) {
  8336  097B  2886               	goto	L1
  8337                           
  8338                           	psect	maintext_split_4
  8339  15CB                     l4896:
  8340  15CB  300E               	movlw	14
  8341  15CC  0651               	xorwf	_Screen_Status,w
  8342  15CD  1D03               	btfss	3,2
  8343  15CE  2DD0               	goto	u3901
  8344  15CF  2DD3               	goto	u3900
  8345  15D0                     u3901:
  8346  15D0  120A  118A  2FA8   	goto	l5224
  8347  15D3                     u3900:
  8348  15D3  2DE1               	goto	l4906
  8349  15D4                     l4900:
  8350                           
  8351                           ;main.c: 488:                         Selection_Part = 2;
  8352  15D4  3002               	movlw	2
  8353  15D5  00FF               	movwf	btemp+1
  8354  15D6  087F               	movf	btemp+1,w
  8355  15D7  00D2               	movwf	_Selection_Part
  8356                           
  8357                           ;main.c: 489:                         break;
  8358  15D8  2DD0               	goto	u3901
  8359  15D9                     l4902:
  8360                           
  8361                           ;main.c: 491:                         Selection_Part = 3;
  8362  15D9  3003               	movlw	3
  8363  15DA  00FF               	movwf	btemp+1
  8364  15DB  087F               	movf	btemp+1,w
  8365  15DC  00D2               	movwf	_Selection_Part
  8366                           
  8367                           ;main.c: 492:                         break;
  8368  15DD  2DD0               	goto	u3901
  8369  15DE                     l471:	
  8370                           ;main.c: 493:                     case 3:
  8371                           
  8372                           
  8373                           ;main.c: 494:                         Selection_Part = 1;
  8374  15DE  01D2               	clrf	_Selection_Part
  8375  15DF  0AD2               	incf	_Selection_Part,f
  8376                           
  8377                           ;main.c: 495:                         break;
  8378  15E0  2DD0               	goto	u3901
  8379  15E1                     l4906:
  8380  15E1  0852               	movf	_Selection_Part,w
  8381  15E2  00B6               	movwf	??_main
  8382  15E3  01B7               	clrf	??_main+1
  8383                           
  8384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8385                           ; Switch size 1, requested type "simple"
  8386                           ; Number of cases is 1, Range of values is 0 to 0
  8387                           ; switch strategies available:
  8388                           ; Name         Instructions Cycles
  8389                           ; simple_byte            4     3 (average)
  8390                           ; direct_byte           11     8 (fixed)
  8391                           ; jumptable            260     6 (fixed)
  8392                           ;	Chosen strategy is simple_byte
  8393  15E4  0837               	movf	??_main+1,w
  8394  15E5  3A00               	xorlw	0	; case 0
  8395  15E6  1903               	skipnz
  8396  15E7  2DE9               	goto	l5298
  8397  15E8  2DF4               	goto	l444
  8398  15E9                     l5298:
  8399                           
  8400                           ; Switch size 1, requested type "simple"
  8401                           ; Number of cases is 3, Range of values is 1 to 3
  8402                           ; switch strategies available:
  8403                           ; Name         Instructions Cycles
  8404                           ; simple_byte           10     6 (average)
  8405                           ; direct_byte           20    11 (fixed)
  8406                           ; jumptable            263     9 (fixed)
  8407                           ;	Chosen strategy is simple_byte
  8408  15E9  0836               	movf	??_main,w
  8409  15EA  3A01               	xorlw	1	; case 1
  8410  15EB  1903               	skipnz
  8411  15EC  2DD4               	goto	l4900
  8412  15ED  3A03               	xorlw	3	; case 2
  8413  15EE  1903               	skipnz
  8414  15EF  2DD9               	goto	l4902
  8415  15F0  3A01               	xorlw	1	; case 3
  8416  15F1  1903               	skipnz
  8417  15F2  2DDE               	goto	l471
  8418  15F3  2DF4               	goto	l444
  8419  15F4                     l444:
  8420  15F4  2DD0               	goto	u3901
  8421  15F5                     l473:	
  8422                           ;main.c: 501:             case (8):
  8423                           
  8424                           
  8425                           ;main.c: 502:                 TMR1ON = 0;
  8426  15F5  1010               	bcf	16,0	;volatile
  8427  15F6                     l4908:
  8428                           
  8429                           ;main.c: 503:                 LCD_SendCMD((0x0C));
  8430  15F6  300C               	movlw	12
  8431  15F7  160A  118A  238B  160A  118A  	fcall	_LCD_SendCMD
  8432  15FC                     l4910:
  8433                           
  8434                           ;main.c: 504:                 LCD_DisStrRC(LCD_Timemsg, 0, 2);
  8435  15FC  30DD               	movlw	(low (_LCD_Timemsg| 0))& (0+255)
  8436  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  8437  15FE  1303               	bcf	3,6	;RP1=0, select bank0
  8438  15FF  00A3               	movwf	LCD_DisStrRC@str
  8439  1600  3000               	movlw	0
  8440  1601  00A4               	movwf	LCD_DisStrRC@str+1
  8441  1602  01A5               	clrf	LCD_DisStrRC@row
  8442  1603  3002               	movlw	2
  8443  1604  00FF               	movwf	btemp+1
  8444  1605  087F               	movf	btemp+1,w
  8445  1606  00A6               	movwf	LCD_DisStrRC@column
  8446  1607  160A  118A  202B  160A  118A  	fcall	_LCD_DisStrRC
  8447  160C                     l4912:
  8448                           
  8449                           ;main.c: 505:                 LCD_DisStrRC(LCD_Eventmsg, 0, 11);
  8450  160C  305F               	movlw	(low (_LCD_Eventmsg| 0))& (0+255)
  8451  160D  1283               	bcf	3,5	;RP0=0, select bank0
  8452  160E  1303               	bcf	3,6	;RP1=0, select bank0
  8453  160F  00A3               	movwf	LCD_DisStrRC@str
  8454  1610  3000               	movlw	0
  8455  1611  00A4               	movwf	LCD_DisStrRC@str+1
  8456  1612  01A5               	clrf	LCD_DisStrRC@row
  8457  1613  300B               	movlw	11
  8458  1614  00FF               	movwf	btemp+1
  8459  1615  087F               	movf	btemp+1,w
  8460  1616  00A6               	movwf	LCD_DisStrRC@column
  8461  1617  160A  118A  202B  160A  118A  	fcall	_LCD_DisStrRC
  8462  161C                     l4914:
  8463                           
  8464                           ;main.c: 506:                 LCD_DisStrRC(LCD_Speedmsg, 0, 14);
  8465  161C  30E5               	movlw	(low (_LCD_Speedmsg| 0))& (0+255)
  8466  161D  1283               	bcf	3,5	;RP0=0, select bank0
  8467  161E  1303               	bcf	3,6	;RP1=0, select bank0
  8468  161F  00A3               	movwf	LCD_DisStrRC@str
  8469  1620  3000               	movlw	0
  8470  1621  00A4               	movwf	LCD_DisStrRC@str+1
  8471  1622  01A5               	clrf	LCD_DisStrRC@row
  8472  1623  300E               	movlw	14
  8473  1624  00FF               	movwf	btemp+1
  8474  1625  087F               	movf	btemp+1,w
  8475  1626  00A6               	movwf	LCD_DisStrRC@column
  8476  1627  160A  118A  202B  160A  118A  	fcall	_LCD_DisStrRC
  8477  162C                     l4916:
  8478                           
  8479                           ;main.c: 508:                 LCD_Display_Current_Event(Current_Event);
  8480  162C  1283               	bcf	3,5	;RP0=0, select bank0
  8481  162D  1303               	bcf	3,6	;RP1=0, select bank0
  8482  162E  0853               	movf	_Current_Event,w
  8483  162F  120A  118A  27D5  160A  118A  	fcall	_LCD_Display_Current_Event
  8484  1634                     l4918:
  8485                           
  8486                           ;main.c: 510:                 Adc_Return_Value = Adc_Read();
  8487  1634  160A  158A  27AC  160A  118A  	fcall	_Adc_Read
  8488  1639  0873               	movf	?_Adc_Read,w
  8489  163A  1283               	bcf	3,5	;RP0=0, select bank0
  8490  163B  1303               	bcf	3,6	;RP1=0, select bank0
  8491  163C  00C4               	movwf	main@Adc_Return_Value
  8492  163D  0874               	movf	?_Adc_Read+1,w
  8493  163E  00C5               	movwf	main@Adc_Return_Value+1
  8494  163F  01C6               	clrf	main@Adc_Return_Value+2
  8495  1640  01C7               	clrf	main@Adc_Return_Value+3
  8496  1641                     l4920:
  8497                           
  8498                           ;main.c: 511:                 Car_Speed = (Adc_Return_Value * 99) / 1023;
  8499  1641  3000               	movlw	0
  8500  1642  00AB               	movwf	___lldiv@divisor+3
  8501  1643  3000               	movlw	0
  8502  1644  00AA               	movwf	___lldiv@divisor+2
  8503  1645  3003               	movlw	3
  8504  1646  00A9               	movwf	___lldiv@divisor+1
  8505  1647  30FF               	movlw	255
  8506  1648  00A8               	movwf	___lldiv@divisor
  8507  1649  0847               	movf	main@Adc_Return_Value+3,w
  8508  164A  00A3               	movwf	___lmul@multiplier+3
  8509  164B  0846               	movf	main@Adc_Return_Value+2,w
  8510  164C  00A2               	movwf	___lmul@multiplier+2
  8511  164D  0845               	movf	main@Adc_Return_Value+1,w
  8512  164E  00A1               	movwf	___lmul@multiplier+1
  8513  164F  0844               	movf	main@Adc_Return_Value,w
  8514  1650  00A0               	movwf	___lmul@multiplier
  8515  1651  3000               	movlw	0
  8516  1652  00A7               	movwf	___lmul@multiplicand+3
  8517  1653  3000               	movlw	0
  8518  1654  00A6               	movwf	___lmul@multiplicand+2
  8519  1655  3000               	movlw	0
  8520  1656  00A5               	movwf	___lmul@multiplicand+1
  8521  1657  3063               	movlw	99
  8522  1658  00A4               	movwf	___lmul@multiplicand
  8523  1659  160A  118A  21DE  160A  118A  	fcall	___lmul
  8524  165E  1283               	bcf	3,5	;RP0=0, select bank0
  8525  165F  1303               	bcf	3,6	;RP1=0, select bank0
  8526  1660  0823               	movf	?___lmul+3,w
  8527  1661  00AF               	movwf	___lldiv@dividend+3
  8528  1662  0822               	movf	?___lmul+2,w
  8529  1663  00AE               	movwf	___lldiv@dividend+2
  8530  1664  0821               	movf	?___lmul+1,w
  8531  1665  00AD               	movwf	___lldiv@dividend+1
  8532  1666  0820               	movf	?___lmul,w
  8533  1667  00AC               	movwf	___lldiv@dividend
  8534  1668  160A  118A  23EE  160A  118A  	fcall	___lldiv
  8535  166D  1283               	bcf	3,5	;RP0=0, select bank0
  8536  166E  1303               	bcf	3,6	;RP1=0, select bank0
  8537  166F  082B               	movf	?___lldiv+3,w
  8538  1670  00CB               	movwf	main@Car_Speed+3
  8539  1671  082A               	movf	?___lldiv+2,w
  8540  1672  00CA               	movwf	main@Car_Speed+2
  8541  1673  0829               	movf	?___lldiv+1,w
  8542  1674  00C9               	movwf	main@Car_Speed+1
  8543  1675  0828               	movf	?___lldiv,w
  8544  1676  00C8               	movwf	main@Car_Speed
  8545  1677                     l4922:
  8546                           
  8547                           ;main.c: 512:                 LCD_2DigitIntToStr(Car_Speed, Adc_Str);
  8548  1677  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  8549  1678  00FF               	movwf	btemp+1
  8550  1679  087F               	movf	btemp+1,w
  8551  167A  00A4               	movwf	LCD_2DigitIntToStr@str
  8552  167B  0848               	movf	main@Car_Speed,w
  8553  167C  160A  118A  24BF  160A  118A  	fcall	_LCD_2DigitIntToStr
  8554  1681                     l4924:
  8555                           
  8556                           ;main.c: 513:                 LCD_DisStrRC(Adc_Str, 1, 14);
  8557  1681  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  8558  1682  1283               	bcf	3,5	;RP0=0, select bank0
  8559  1683  1303               	bcf	3,6	;RP1=0, select bank0
  8560  1684  00A3               	movwf	LCD_DisStrRC@str
  8561  1685  3000               	movlw	0
  8562  1686  00A4               	movwf	LCD_DisStrRC@str+1
  8563  1687  01A5               	clrf	LCD_DisStrRC@row
  8564  1688  0AA5               	incf	LCD_DisStrRC@row,f
  8565  1689  300E               	movlw	14
  8566  168A  00FF               	movwf	btemp+1
  8567  168B  087F               	movf	btemp+1,w
  8568  168C  00A6               	movwf	LCD_DisStrRC@column
  8569  168D  160A  118A  202B  160A  118A  	fcall	_LCD_DisStrRC
  8570  1692                     l4926:
  8571                           
  8572                           ;main.c: 516:                 RTC_DS1307_Get_Date(&RTC_Date);
  8573  1692  30D9               	movlw	(low (main@RTC_Date| (0+256)))& (0+255)
  8574  1693  160A  118A  26DA  160A  118A  	fcall	_RTC_DS1307_Get_Date
  8575  1698                     l4928:
  8576                           
  8577                           ;main.c: 517:                 LCD_Time[7] = RTC_Date.Seconds[1];
  8578  1698  1683               	bsf	3,5	;RP0=1, select bank3
  8579  1699  1703               	bsf	3,6	;RP1=1, select bank3
  8580  169A  085A               	movf	(main@RTC_Date^(0+384)+1),w
  8581  169B  00FF               	movwf	btemp+1
  8582  169C  087F               	movf	btemp+1,w
  8583  169D  1283               	bcf	3,5	;RP0=0, select bank0
  8584  169E  1303               	bcf	3,6	;RP1=0, select bank0
  8585  169F  00DD               	movwf	_LCD_Time+7
  8586  16A0                     l4930:
  8587                           
  8588                           ;main.c: 518:                 LCD_Time[6] = RTC_Date.Seconds[0];
  8589  16A0  1683               	bsf	3,5	;RP0=1, select bank3
  8590  16A1  1703               	bsf	3,6	;RP1=1, select bank3
  8591  16A2  0859               	movf	main@RTC_Date^(0+384),w
  8592  16A3  00FF               	movwf	btemp+1
  8593  16A4  087F               	movf	btemp+1,w
  8594  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  8595  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  8596  16A7  00DC               	movwf	_LCD_Time+6
  8597  16A8                     l4932:
  8598                           
  8599                           ;main.c: 519:                 LCD_Time[4] = RTC_Date.Minutes[1];
  8600  16A8  1683               	bsf	3,5	;RP0=1, select bank3
  8601  16A9  1703               	bsf	3,6	;RP1=1, select bank3
  8602  16AA  085C               	movf	(main@RTC_Date^(0+384)+3),w
  8603  16AB  00FF               	movwf	btemp+1
  8604  16AC  087F               	movf	btemp+1,w
  8605  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  8606  16AE  1303               	bcf	3,6	;RP1=0, select bank0
  8607  16AF  00DA               	movwf	_LCD_Time+4
  8608  16B0                     l4934:
  8609                           
  8610                           ;main.c: 520:                 LCD_Time[3] = RTC_Date.Minutes[0];
  8611  16B0  1683               	bsf	3,5	;RP0=1, select bank3
  8612  16B1  1703               	bsf	3,6	;RP1=1, select bank3
  8613  16B2  085B               	movf	(main@RTC_Date^(0+384)+2),w
  8614  16B3  00FF               	movwf	btemp+1
  8615  16B4  087F               	movf	btemp+1,w
  8616  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  8617  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  8618  16B7  00D9               	movwf	_LCD_Time+3
  8619  16B8                     l4936:
  8620                           
  8621                           ;main.c: 521:                 LCD_Time[1] = RTC_Date.Hours[1];
  8622  16B8  1683               	bsf	3,5	;RP0=1, select bank3
  8623  16B9  1703               	bsf	3,6	;RP1=1, select bank3
  8624  16BA  085E               	movf	(main@RTC_Date^(0+384)+5),w
  8625  16BB  00FF               	movwf	btemp+1
  8626  16BC  087F               	movf	btemp+1,w
  8627  16BD  1283               	bcf	3,5	;RP0=0, select bank0
  8628  16BE  1303               	bcf	3,6	;RP1=0, select bank0
  8629  16BF  00D7               	movwf	_LCD_Time+1
  8630  16C0                     l4938:
  8631                           
  8632                           ;main.c: 522:                 LCD_Time[0] = RTC_Date.Hours[0];
  8633  16C0  1683               	bsf	3,5	;RP0=1, select bank3
  8634  16C1  1703               	bsf	3,6	;RP1=1, select bank3
  8635  16C2  085D               	movf	(main@RTC_Date^(0+384)+4),w
  8636  16C3  00FF               	movwf	btemp+1
  8637  16C4  087F               	movf	btemp+1,w
  8638  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  8639  16C6  1303               	bcf	3,6	;RP1=0, select bank0
  8640  16C7  00D6               	movwf	_LCD_Time
  8641  16C8                     l4940:
  8642                           
  8643                           ;main.c: 524:                 LCD_DisStrRC(LCD_Time, 1, 2);
  8644  16C8  3056               	movlw	(low (_LCD_Time| 0))& (0+255)
  8645  16C9  00A3               	movwf	LCD_DisStrRC@str
  8646  16CA  3000               	movlw	0
  8647  16CB  00A4               	movwf	LCD_DisStrRC@str+1
  8648  16CC  01A5               	clrf	LCD_DisStrRC@row
  8649  16CD  0AA5               	incf	LCD_DisStrRC@row,f
  8650  16CE  3002               	movlw	2
  8651  16CF  00FF               	movwf	btemp+1
  8652  16D0  087F               	movf	btemp+1,w
  8653  16D1  00A6               	movwf	LCD_DisStrRC@column
  8654  16D2  160A  118A  202B  160A  118A  	fcall	_LCD_DisStrRC
  8655                           
  8656                           ;main.c: 525:                 break;
  8657  16D7  120A  118A  2F12   	goto	u4081
  8658                           
  8659                           	psect	maintext_split_5
  8660  005E                     l475:	
  8661                           ;main.c: 528:             case (9):
  8662                           
  8663                           
  8664                           ;main.c: 529:                 TMR1ON = 1;
  8665  005E  1410               	bsf	16,0	;volatile
  8666  005F                     l4942:
  8667                           
  8668                           ;main.c: 530:                 if (Pass_Offset == 4) {
  8669  005F  3004               	movlw	4
  8670  0060  064C               	xorwf	main@Pass_Offset,w
  8671  0061  1D03               	btfss	3,2
  8672  0062  2864               	goto	u3911
  8673  0063  2865               	goto	u3910
  8674  0064                     u3911:
  8675  0064  28BB               	goto	l4964
  8676  0065                     u3910:
  8677  0065                     l4944:
  8678                           
  8679                           ;main.c: 532:                     if (Check_Password() == 0) {
  8680  0065  160A  118A  2176  120A  118A  	fcall	_Check_Password
  8681  006A  3A00               	xorlw	0
  8682  006B  1D03               	skipz
  8683  006C  286E               	goto	u3921
  8684  006D  286F               	goto	u3920
  8685  006E                     u3921:
  8686  006E  287C               	goto	l4950
  8687  006F                     u3920:
  8688  006F                     l4946:
  8689                           
  8690                           ;main.c: 533:                         LCD_SendCMD((0x01));
  8691  006F  3001               	movlw	1
  8692  0070  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8693  0075                     l4948:
  8694                           
  8695                           ;main.c: 534:                         Screen_Status = 10;
  8696  0075  300A               	movlw	10
  8697  0076  00FF               	movwf	btemp+1
  8698  0077  087F               	movf	btemp+1,w
  8699  0078  1283               	bcf	3,5	;RP0=0, select bank0
  8700  0079  1303               	bcf	3,6	;RP1=0, select bank0
  8701  007A  00D1               	movwf	_Screen_Status
  8702                           
  8703                           ;main.c: 535:                     } else {
  8704  007B  28B7               	goto	l4962
  8705  007C                     l4950:
  8706                           
  8707                           ;main.c: 536:                         Password_Trails--;
  8708  007C  3001               	movlw	1
  8709  007D  1283               	bcf	3,5	;RP0=0, select bank0
  8710  007E  1303               	bcf	3,6	;RP1=0, select bank0
  8711  007F  02BA               	subwf	main@Password_Trails,f
  8712  0080                     l4952:
  8713                           
  8714                           ;main.c: 537:                         Password_Trails_msg[0] = Password_Trails + '0';
  8715  0080  083A               	movf	main@Password_Trails,w
  8716  0081  3E30               	addlw	48
  8717  0082  00FF               	movwf	btemp+1
  8718  0083  087F               	movf	btemp+1,w
  8719  0084  1683               	bsf	3,5	;RP0=1, select bank3
  8720  0085  1703               	bsf	3,6	;RP1=1, select bank3
  8721  0086  00A8               	movwf	_Password_Trails_msg^(0+384)
  8722  0087                     l4954:
  8723                           
  8724                           ;main.c: 538:                         LCD_DisStrRC(Password_Trails_msg, 1, 0);
  8725  0087  30A8               	movlw	(low (_Password_Trails_msg| (0+256)))& (0+255)
  8726  0088  1283               	bcf	3,5	;RP0=0, select bank0
  8727  0089  1303               	bcf	3,6	;RP1=0, select bank0
  8728  008A  00A3               	movwf	LCD_DisStrRC@str
  8729  008B  3001               	movlw	1
  8730  008C  00A4               	movwf	LCD_DisStrRC@str+1
  8731  008D  01A5               	clrf	LCD_DisStrRC@row
  8732  008E  0AA5               	incf	LCD_DisStrRC@row,f
  8733  008F  01A6               	clrf	LCD_DisStrRC@column
  8734  0090  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  8735  0095                     l4956:
  8736                           
  8737                           ;main.c: 539:                         _delay((unsigned long)((500)*(8000000/4000.0)));
  8738  0095  3006               	movlw	6
  8739  0096  1283               	bcf	3,5	;RP0=0, select bank0
  8740  0097  1303               	bcf	3,6	;RP1=0, select bank0
  8741  0098  00B8               	movwf	??_main+2
  8742  0099  3013               	movlw	19
  8743  009A  00B7               	movwf	??_main+1
  8744  009B  30AD               	movlw	173
  8745  009C  00B6               	movwf	??_main
  8746  009D                     u4107:
  8747  009D  0BB6               	decfsz	??_main,f
  8748  009E  289D               	goto	u4107
  8749  009F  0BB7               	decfsz	??_main+1,f
  8750  00A0  289D               	goto	u4107
  8751  00A1  0BB8               	decfsz	??_main+2,f
  8752  00A2  289D               	goto	u4107
  8753  00A3                     l4958:
  8754                           
  8755                           ;main.c: 540:                         LCD_SendCMD((0x01));
  8756  00A3  3001               	movlw	1
  8757  00A4  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8758  00A9                     l4960:
  8759                           
  8760                           ;main.c: 541:                         LCD_DisStrRC(Passwordmsg, 0, 1);
  8761  00A9  30B4               	movlw	(low (_Passwordmsg| 0))& (0+255)
  8762  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  8763  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  8764  00AC  00A3               	movwf	LCD_DisStrRC@str
  8765  00AD  3000               	movlw	0
  8766  00AE  00A4               	movwf	LCD_DisStrRC@str+1
  8767  00AF  01A5               	clrf	LCD_DisStrRC@row
  8768  00B0  01A6               	clrf	LCD_DisStrRC@column
  8769  00B1  0AA6               	incf	LCD_DisStrRC@column,f
  8770  00B2  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  8771  00B7                     l4962:
  8772                           
  8773                           ;main.c: 544:                     Pass_Offset = 0;
  8774  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  8775  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  8776  00B9  01CC               	clrf	main@Pass_Offset
  8777                           
  8778                           ;main.c: 545:                 } else if (Password_Waiting_Time == 50) {
  8779  00BA  28CF               	goto	l4972
  8780  00BB                     l4964:
  8781  00BB  3032               	movlw	50
  8782  00BC  0662               	xorwf	_Password_Waiting_Time,w
  8783  00BD  1D03               	btfss	3,2
  8784  00BE  28C0               	goto	u3931
  8785  00BF  28C1               	goto	u3930
  8786  00C0                     u3931:
  8787  00C0  28CF               	goto	l4972
  8788  00C1                     u3930:
  8789  00C1                     l4966:
  8790                           
  8791                           ;main.c: 547:                     Pass_Offset = 0;
  8792  00C1  01CC               	clrf	main@Pass_Offset
  8793                           
  8794                           ;main.c: 548:                     Password_Waiting_Time = 0;
  8795  00C2  01E2               	clrf	_Password_Waiting_Time
  8796  00C3                     l4968:
  8797                           
  8798                           ;main.c: 549:                     LCD_SendCMD((0x01));
  8799  00C3  3001               	movlw	1
  8800  00C4  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8801  00C9                     l4970:
  8802                           
  8803                           ;main.c: 550:                     Screen_Status = 8;
  8804  00C9  3008               	movlw	8
  8805  00CA  00FF               	movwf	btemp+1
  8806  00CB  087F               	movf	btemp+1,w
  8807  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  8808  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  8809  00CE  00D1               	movwf	_Screen_Status
  8810  00CF                     l4972:
  8811                           
  8812                           ;main.c: 552:                 LCD_GotoRC(1, Pass_Offset + 6);
  8813  00CF  084C               	movf	main@Pass_Offset,w
  8814  00D0  3E06               	addlw	6
  8815  00D1  00FF               	movwf	btemp+1
  8816  00D2  087F               	movf	btemp+1,w
  8817  00D3  00F6               	movwf	LCD_GotoRC@column
  8818  00D4  3001               	movlw	1
  8819  00D5  160A  118A  2013  120A  118A  	fcall	_LCD_GotoRC
  8820  00DA                     l4974:
  8821                           
  8822                           ;main.c: 553:                 LCD_SendCMD((0x0F));
  8823  00DA  300F               	movlw	15
  8824  00DB  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8825                           
  8826                           ;main.c: 554:                 break;
  8827  00E0  2F12               	goto	u4081
  8828  00E1                     l4976:
  8829                           
  8830                           ;main.c: 557:                 LCD_SendCMD((0x0C));
  8831  00E1  300C               	movlw	12
  8832  00E2  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8833  00E7                     l4978:
  8834                           
  8835                           ;main.c: 558:                 if (Waiting_Minutes == 0) {
  8836  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  8837  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  8838  00E9  0855               	movf	_Waiting_Minutes,w
  8839  00EA  1D03               	btfss	3,2
  8840  00EB  28ED               	goto	u3941
  8841  00EC  28EE               	goto	u3940
  8842  00ED                     u3941:
  8843  00ED  28F8               	goto	l482
  8844  00EE                     u3940:
  8845  00EE                     l4980:
  8846                           
  8847                           ;main.c: 559:                     Screen_Status = 9;
  8848  00EE  3009               	movlw	9
  8849  00EF  00FF               	movwf	btemp+1
  8850  00F0  087F               	movf	btemp+1,w
  8851  00F1  00D1               	movwf	_Screen_Status
  8852                           
  8853                           ;main.c: 560:                     Waiting_Minutes = 15;
  8854  00F2  300F               	movlw	15
  8855  00F3  00FF               	movwf	btemp+1
  8856  00F4  087F               	movf	btemp+1,w
  8857  00F5  00D5               	movwf	_Waiting_Minutes
  8858  00F6                     l4982:
  8859                           
  8860                           ;main.c: 561:                     TMR1ON = 0;
  8861  00F6  1010               	bcf	16,0	;volatile
  8862                           
  8863                           ;main.c: 562:                 } else {
  8864  00F7  2F12               	goto	u4081
  8865  00F8                     l482:
  8866                           
  8867                           ;main.c: 563:                     TMR1ON = 1;
  8868  00F8  1410               	bsf	16,0	;volatile
  8869  00F9                     l4984:
  8870                           
  8871                           ;main.c: 564:                     Blocked_Sreen_Line2_msg[8] = (Waiting_Minutes / 10) + 
      +                          '0';
  8872  00F9  300A               	movlw	10
  8873  00FA  00F3               	movwf	___awdiv@divisor
  8874  00FB  3000               	movlw	0
  8875  00FC  00F4               	movwf	___awdiv@divisor+1
  8876  00FD  0855               	movf	_Waiting_Minutes,w
  8877  00FE  00B6               	movwf	??_main
  8878  00FF  01B7               	clrf	??_main+1
  8879  0100  0836               	movf	??_main,w
  8880  0101  00F5               	movwf	___awdiv@dividend
  8881  0102  0837               	movf	??_main+1,w
  8882  0103  00F6               	movwf	___awdiv@dividend+1
  8883  0104  160A  118A  2456  120A  118A  	fcall	___awdiv
  8884  0109  0873               	movf	?___awdiv,w
  8885  010A  3E30               	addlw	48
  8886  010B  00FF               	movwf	btemp+1
  8887  010C  087F               	movf	btemp+1,w
  8888  010D  1683               	bsf	3,5	;RP0=1, select bank1
  8889  010E  1303               	bcf	3,6	;RP1=0, select bank1
  8890  010F  00AD               	movwf	(_Blocked_Sreen_Line2_msg^(0+128)+8)
  8891                           
  8892                           ;main.c: 565:                     Blocked_Sreen_Line2_msg[9] = (Waiting_Minutes % 10) + 
      +                          '0';
  8893  0110  300A               	movlw	10
  8894  0111  00F3               	movwf	___awmod@divisor
  8895  0112  3000               	movlw	0
  8896  0113  00F4               	movwf	___awmod@divisor+1
  8897  0114  1283               	bcf	3,5	;RP0=0, select bank0
  8898  0115  1303               	bcf	3,6	;RP1=0, select bank0
  8899  0116  0855               	movf	_Waiting_Minutes,w
  8900  0117  00B6               	movwf	??_main
  8901  0118  01B7               	clrf	??_main+1
  8902  0119  0836               	movf	??_main,w
  8903  011A  00F5               	movwf	___awmod@dividend
  8904  011B  0837               	movf	??_main+1,w
  8905  011C  00F6               	movwf	___awmod@dividend+1
  8906  011D  160A  118A  226E  120A  118A  	fcall	___awmod
  8907  0122  0873               	movf	?___awmod,w
  8908  0123  3E30               	addlw	48
  8909  0124  00FF               	movwf	btemp+1
  8910  0125  087F               	movf	btemp+1,w
  8911  0126  1683               	bsf	3,5	;RP0=1, select bank1
  8912  0127  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0128  00AE               	movwf	(_Blocked_Sreen_Line2_msg^(0+128)+9)
  8914  0129                     l4986:
  8915                           
  8916                           ;main.c: 566:                     LCD_DisStrRC(Blocked_Sreen_Line1_msg, 0, 0);
  8917  0129  30C9               	movlw	(low (_Blocked_Sreen_Line1_msg| (0+256)))& (0+255)
  8918  012A  1283               	bcf	3,5	;RP0=0, select bank0
  8919  012B  1303               	bcf	3,6	;RP1=0, select bank0
  8920  012C  00A3               	movwf	LCD_DisStrRC@str
  8921  012D  3001               	movlw	1
  8922  012E  00A4               	movwf	LCD_DisStrRC@str+1
  8923  012F  01A5               	clrf	LCD_DisStrRC@row
  8924  0130  01A6               	clrf	LCD_DisStrRC@column
  8925  0131  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  8926  0136                     l4988:
  8927                           
  8928                           ;main.c: 567:                     LCD_DisStrRC(Blocked_Sreen_Line2_msg, 1, 0);
  8929  0136  30A5               	movlw	(low (_Blocked_Sreen_Line2_msg| 0))& (0+255)
  8930  0137  1283               	bcf	3,5	;RP0=0, select bank0
  8931  0138  1303               	bcf	3,6	;RP1=0, select bank0
  8932  0139  00A3               	movwf	LCD_DisStrRC@str
  8933  013A  3000               	movlw	0
  8934  013B  00A4               	movwf	LCD_DisStrRC@str+1
  8935  013C  01A5               	clrf	LCD_DisStrRC@row
  8936  013D  0AA5               	incf	LCD_DisStrRC@row,f
  8937  013E  01A6               	clrf	LCD_DisStrRC@column
  8938  013F  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  8939  0144  2F12               	goto	u4081
  8940  0145                     l484:	
  8941                           ;main.c: 572:             case (10):
  8942                           
  8943                           
  8944                           ;main.c: 573:                 TMR1ON = 0;
  8945  0145  1010               	bcf	16,0	;volatile
  8946  0146                     l4990:
  8947                           
  8948                           ;main.c: 574:                 LCD_SendCMD((0x0C));
  8949  0146  300C               	movlw	12
  8950  0147  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  8951                           
  8952                           ;main.c: 575:                 LCD_GotoRC(0, 0);
  8953  014C  01F6               	clrf	LCD_GotoRC@column
  8954  014D  3000               	movlw	0
  8955  014E  160A  118A  2013  120A  118A  	fcall	_LCD_GotoRC
  8956                           
  8957                           ;main.c: 576:                 LCD_DisChar('*');
  8958  0153  302A               	movlw	42
  8959  0154  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  8960  0159                     l4992:
  8961                           
  8962                           ;main.c: 577:                 if (Main_Menu_Offset < 4) {
  8963  0159  1283               	bcf	3,5	;RP0=0, select bank0
  8964  015A  1303               	bcf	3,6	;RP1=0, select bank0
  8965  015B  0861               	movf	_Main_Menu_Offset,w
  8966  015C  3A80               	xorlw	128
  8967  015D  3E7C               	addlw	-132
  8968  015E  1803               	skipnc
  8969  015F  2961               	goto	u3951
  8970  0160  2962               	goto	u3950
  8971  0161                     u3951:
  8972  0161  299A               	goto	l4996
  8973  0162                     u3950:
  8974  0162                     l4994:
  8975                           
  8976                           ;main.c: 578:                     LCD_DisStrRC(Main_Menu[0 + Main_Menu_Offset], 0, 2);
  8977  0162  300D               	movlw	13
  8978  0163  00FF               	movwf	btemp+1
  8979  0164  087F               	movf	btemp+1,w
  8980  0165  00F3               	movwf	___bmul@multiplicand
  8981  0166  0861               	movf	_Main_Menu_Offset,w
  8982  0167  160A  158A  27D3  120A  118A  	fcall	___bmul
  8983  016C  3E10               	addlw	(low (_Main_Menu| (0+256)))& (0+255)
  8984  016D  1283               	bcf	3,5	;RP0=0, select bank0
  8985  016E  1303               	bcf	3,6	;RP1=0, select bank0
  8986  016F  00A3               	movwf	LCD_DisStrRC@str
  8987  0170  3001               	movlw	1
  8988  0171  00A4               	movwf	LCD_DisStrRC@str+1
  8989  0172  01A5               	clrf	LCD_DisStrRC@row
  8990  0173  3002               	movlw	2
  8991  0174  00FF               	movwf	btemp+1
  8992  0175  087F               	movf	btemp+1,w
  8993  0176  00A6               	movwf	LCD_DisStrRC@column
  8994  0177  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  8995                           
  8996                           ;main.c: 579:                     LCD_DisStrRC(Main_Menu[1 + Main_Menu_Offset], 1, 2);
  8997  017C  300D               	movlw	13
  8998  017D  00FF               	movwf	btemp+1
  8999  017E  087F               	movf	btemp+1,w
  9000  017F  00F3               	movwf	___bmul@multiplicand
  9001  0180  1283               	bcf	3,5	;RP0=0, select bank0
  9002  0181  1303               	bcf	3,6	;RP1=0, select bank0
  9003  0182  0861               	movf	_Main_Menu_Offset,w
  9004  0183  160A  158A  27D3  120A  118A  	fcall	___bmul
  9005  0188  3E1D               	addlw	(low ((_Main_Menu| (0+256)+13)))& (0+255)
  9006  0189  1283               	bcf	3,5	;RP0=0, select bank0
  9007  018A  1303               	bcf	3,6	;RP1=0, select bank0
  9008  018B  00A3               	movwf	LCD_DisStrRC@str
  9009  018C  3001               	movlw	1
  9010  018D  00A4               	movwf	LCD_DisStrRC@str+1
  9011  018E  01A5               	clrf	LCD_DisStrRC@row
  9012  018F  0AA5               	incf	LCD_DisStrRC@row,f
  9013  0190  3002               	movlw	2
  9014  0191  00FF               	movwf	btemp+1
  9015  0192  087F               	movf	btemp+1,w
  9016  0193  00A6               	movwf	LCD_DisStrRC@column
  9017  0194  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9018                           
  9019                           ;main.c: 580:                 } else {
  9020  0199  2F12               	goto	u4081
  9021  019A                     l4996:
  9022                           
  9023                           ;main.c: 581:                     LCD_DisStrRC(Main_Menu[0 + Main_Menu_Offset], 0, 2);
  9024  019A  300D               	movlw	13
  9025  019B  00FF               	movwf	btemp+1
  9026  019C  087F               	movf	btemp+1,w
  9027  019D  00F3               	movwf	___bmul@multiplicand
  9028  019E  0861               	movf	_Main_Menu_Offset,w
  9029  019F  160A  158A  27D3  120A  118A  	fcall	___bmul
  9030  01A4  3E10               	addlw	(low (_Main_Menu| (0+256)))& (0+255)
  9031  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  9032  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  9033  01A7  00A3               	movwf	LCD_DisStrRC@str
  9034  01A8  3001               	movlw	1
  9035  01A9  00A4               	movwf	LCD_DisStrRC@str+1
  9036  01AA  01A5               	clrf	LCD_DisStrRC@row
  9037  01AB  3002               	movlw	2
  9038  01AC  00FF               	movwf	btemp+1
  9039  01AD  087F               	movf	btemp+1,w
  9040  01AE  00A6               	movwf	LCD_DisStrRC@column
  9041  01AF  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9042  01B4  2F12               	goto	u4081
  9043  01B5                     l487:	
  9044                           ;main.c: 585:             case (11):
  9045                           
  9046                           
  9047                           ;main.c: 586:                 TMR1ON = 0;
  9048  01B5  1010               	bcf	16,0	;volatile
  9049  01B6                     l4998:
  9050                           
  9051                           ;main.c: 587:                 LCD_SendCMD((0x0C));
  9052  01B6  300C               	movlw	12
  9053  01B7  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  9054  01BC                     l5000:
  9055                           
  9056                           ;main.c: 588:                 LCD_DisStrRC(LCD_Logsmsg, 0, 0);
  9057  01BC  30D8               	movlw	(low (_LCD_Logsmsg| 0))& (0+255)
  9058  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  9059  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  9060  01BF  00A3               	movwf	LCD_DisStrRC@str
  9061  01C0  3000               	movlw	0
  9062  01C1  00A4               	movwf	LCD_DisStrRC@str+1
  9063  01C2  01A5               	clrf	LCD_DisStrRC@row
  9064  01C3  01A6               	clrf	LCD_DisStrRC@column
  9065  01C4  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9066  01C9                     l5002:
  9067                           
  9068                           ;main.c: 590:                 LCD_GotoRC(1, 0);
  9069  01C9  01F6               	clrf	LCD_GotoRC@column
  9070  01CA  3001               	movlw	1
  9071  01CB  160A  118A  2013  120A  118A  	fcall	_LCD_GotoRC
  9072  01D0                     l5004:
  9073                           
  9074                           ;main.c: 591:                 temp_ = Memory_Offset / 16;
  9075  01D0  3010               	movlw	16
  9076  01D1  00F3               	movwf	___awdiv@divisor
  9077  01D2  3000               	movlw	0
  9078  01D3  00F4               	movwf	___awdiv@divisor+1
  9079  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  9080  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  9081  01D6  0850               	movf	main@Memory_Offset,w
  9082  01D7  00B6               	movwf	??_main
  9083  01D8  01B7               	clrf	??_main+1
  9084  01D9  0836               	movf	??_main,w
  9085  01DA  00F5               	movwf	___awdiv@dividend
  9086  01DB  0837               	movf	??_main+1,w
  9087  01DC  00F6               	movwf	___awdiv@dividend+1
  9088  01DD  160A  118A  2456  120A  118A  	fcall	___awdiv
  9089  01E2  0873               	movf	?___awdiv,w
  9090  01E3  00FF               	movwf	btemp+1
  9091  01E4  087F               	movf	btemp+1,w
  9092  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  9093  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  9094  01E7  00CF               	movwf	main@temp_
  9095  01E8                     l5006:
  9096                           
  9097                           ;main.c: 592:                 if (temp_ == 0) {
  9098  01E8  084F               	movf	main@temp_,w
  9099  01E9  1D03               	btfss	3,2
  9100  01EA  29EC               	goto	u3961
  9101  01EB  29ED               	goto	u3960
  9102  01EC                     u3961:
  9103  01EC  2A1C               	goto	l5010
  9104  01ED                     u3960:
  9105  01ED                     l5008:
  9106                           
  9107                           ;main.c: 593:                     LCD_DisStrRC(LCD_NoLogsmsg, 1, 0);
  9108  01ED  30E2               	movlw	(low (_LCD_NoLogsmsg| 0))& (0+255)
  9109  01EE  00A3               	movwf	LCD_DisStrRC@str
  9110  01EF  3000               	movlw	0
  9111  01F0  00A4               	movwf	LCD_DisStrRC@str+1
  9112  01F1  01A5               	clrf	LCD_DisStrRC@row
  9113  01F2  0AA5               	incf	LCD_DisStrRC@row,f
  9114  01F3  01A6               	clrf	LCD_DisStrRC@column
  9115  01F4  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9116                           
  9117                           ;main.c: 594:                     LCD_DisStrRC(LCD_Logsmsg, 1, 3);
  9118  01F9  30D8               	movlw	(low (_LCD_Logsmsg| 0))& (0+255)
  9119  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  9120  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  9121  01FC  00A3               	movwf	LCD_DisStrRC@str
  9122  01FD  3000               	movlw	0
  9123  01FE  00A4               	movwf	LCD_DisStrRC@str+1
  9124  01FF  01A5               	clrf	LCD_DisStrRC@row
  9125  0200  0AA5               	incf	LCD_DisStrRC@row,f
  9126  0201  3003               	movlw	3
  9127  0202  00FF               	movwf	btemp+1
  9128  0203  087F               	movf	btemp+1,w
  9129  0204  00A6               	movwf	LCD_DisStrRC@column
  9130  0205  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9131                           
  9132                           ;main.c: 595:                     LCD_DisStrRC(&Clear_Events_msg1[12], 1, 9);
  9133  020A  30C5               	movlw	(low ((_Clear_Events_msg1| (0+256)+12)))& (0+255)
  9134  020B  1283               	bcf	3,5	;RP0=0, select bank0
  9135  020C  1303               	bcf	3,6	;RP1=0, select bank0
  9136  020D  00A3               	movwf	LCD_DisStrRC@str
  9137  020E  3001               	movlw	1
  9138  020F  00A4               	movwf	LCD_DisStrRC@str+1
  9139  0210  01A5               	clrf	LCD_DisStrRC@row
  9140  0211  0AA5               	incf	LCD_DisStrRC@row,f
  9141  0212  3009               	movlw	9
  9142  0213  00FF               	movwf	btemp+1
  9143  0214  087F               	movf	btemp+1,w
  9144  0215  00A6               	movwf	LCD_DisStrRC@column
  9145  0216  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9146                           
  9147                           ;main.c: 596:                 } else {
  9148  021B  2F12               	goto	u4081
  9149  021C                     l5010:
  9150                           
  9151                           ;main.c: 597:                     temp_ = View_Log_Counter / 16;
  9152  021C  3010               	movlw	16
  9153  021D  00F3               	movwf	___awdiv@divisor
  9154  021E  3000               	movlw	0
  9155  021F  00F4               	movwf	___awdiv@divisor+1
  9156  0220  084E               	movf	main@View_Log_Counter,w
  9157  0221  00F5               	movwf	___awdiv@dividend
  9158  0222  01F6               	clrf	___awdiv@dividend+1
  9159  0223  1BF5               	btfsc	___awdiv@dividend,7
  9160  0224  03F6               	decf	___awdiv@dividend+1,f
  9161  0225  160A  118A  2456  120A  118A  	fcall	___awdiv
  9162  022A  0873               	movf	?___awdiv,w
  9163  022B  00FF               	movwf	btemp+1
  9164  022C  087F               	movf	btemp+1,w
  9165  022D  1283               	bcf	3,5	;RP0=0, select bank0
  9166  022E  1303               	bcf	3,6	;RP1=0, select bank0
  9167  022F  00CF               	movwf	main@temp_
  9168  0230                     l5012:
  9169                           
  9170                           ;main.c: 598:                     LCD_DisChar(temp_ + '0');
  9171  0230  084F               	movf	main@temp_,w
  9172  0231  3E30               	addlw	48
  9173  0232  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9174  0237                     l5014:
  9175                           
  9176                           ;main.c: 600:                     temp_ = E2PROM_24C04_Read(0xA1, View_Log_Counter + 0x2
      +                          6);
  9177  0237  1283               	bcf	3,5	;RP0=0, select bank0
  9178  0238  1303               	bcf	3,6	;RP1=0, select bank0
  9179  0239  084E               	movf	main@View_Log_Counter,w
  9180  023A  3E26               	addlw	38
  9181  023B  00FF               	movwf	btemp+1
  9182  023C  087F               	movf	btemp+1,w
  9183  023D  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9184  023E  30A1               	movlw	161
  9185  023F  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9186  0244  00FF               	movwf	btemp+1
  9187  0245  087F               	movf	btemp+1,w
  9188  0246  1283               	bcf	3,5	;RP0=0, select bank0
  9189  0247  1303               	bcf	3,6	;RP1=0, select bank0
  9190  0248  00CF               	movwf	main@temp_
  9191  0249                     l5016:
  9192                           
  9193                           ;main.c: 601:                     LCD_Display_Current_Event(temp_);
  9194  0249  084F               	movf	main@temp_,w
  9195  024A  120A  118A  27D5  120A  118A  	fcall	_LCD_Display_Current_Event
  9196  024F                     l5018:
  9197                           
  9198                           ;main.c: 603:                     Adc_Str[0] = E2PROM_24C04_Read(0xA1, View_Log_Counter 
      +                          + 0x27);
  9199  024F  1283               	bcf	3,5	;RP0=0, select bank0
  9200  0250  1303               	bcf	3,6	;RP1=0, select bank0
  9201  0251  084E               	movf	main@View_Log_Counter,w
  9202  0252  3E27               	addlw	39
  9203  0253  00FF               	movwf	btemp+1
  9204  0254  087F               	movf	btemp+1,w
  9205  0255  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9206  0256  30A1               	movlw	161
  9207  0257  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9208  025C  00FF               	movwf	btemp+1
  9209  025D  087F               	movf	btemp+1,w
  9210  025E  1283               	bcf	3,5	;RP0=0, select bank0
  9211  025F  1303               	bcf	3,6	;RP1=0, select bank0
  9212  0260  00BF               	movwf	main@Adc_Str
  9213  0261                     l5020:
  9214                           
  9215                           ;main.c: 604:                     Adc_Str[1] = E2PROM_24C04_Read(0xA1, View_Log_Counter 
      +                          + 0x28);
  9216  0261  084E               	movf	main@View_Log_Counter,w
  9217  0262  3E28               	addlw	40
  9218  0263  00FF               	movwf	btemp+1
  9219  0264  087F               	movf	btemp+1,w
  9220  0265  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9221  0266  30A1               	movlw	161
  9222  0267  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9223  026C  00FF               	movwf	btemp+1
  9224  026D  087F               	movf	btemp+1,w
  9225  026E  1283               	bcf	3,5	;RP0=0, select bank0
  9226  026F  1303               	bcf	3,6	;RP1=0, select bank0
  9227  0270  00C0               	movwf	main@Adc_Str+1
  9228  0271                     l5022:
  9229                           
  9230                           ;main.c: 605:                     Adc_Str[2] = 0;
  9231  0271  01C1               	clrf	main@Adc_Str+2
  9232  0272                     l5024:
  9233                           
  9234                           ;main.c: 606:                     LCD_DisStrRC(Adc_Str, 1, 14);
  9235  0272  303F               	movlw	(low (main@Adc_Str| 0))& (0+255)
  9236  0273  00A3               	movwf	LCD_DisStrRC@str
  9237  0274  3000               	movlw	0
  9238  0275  00A4               	movwf	LCD_DisStrRC@str+1
  9239  0276  01A5               	clrf	LCD_DisStrRC@row
  9240  0277  0AA5               	incf	LCD_DisStrRC@row,f
  9241  0278  300E               	movlw	14
  9242  0279  00FF               	movwf	btemp+1
  9243  027A  087F               	movf	btemp+1,w
  9244  027B  00A6               	movwf	LCD_DisStrRC@column
  9245  027C  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9246  0281                     l5026:
  9247                           
  9248                           ;main.c: 608:                     LCD_Time[7] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x25);
  9249  0281  1283               	bcf	3,5	;RP0=0, select bank0
  9250  0282  1303               	bcf	3,6	;RP1=0, select bank0
  9251  0283  084E               	movf	main@View_Log_Counter,w
  9252  0284  3E25               	addlw	37
  9253  0285  00FF               	movwf	btemp+1
  9254  0286  087F               	movf	btemp+1,w
  9255  0287  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9256  0288  30A1               	movlw	161
  9257  0289  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9258  028E  00FF               	movwf	btemp+1
  9259  028F  087F               	movf	btemp+1,w
  9260  0290  1283               	bcf	3,5	;RP0=0, select bank0
  9261  0291  1303               	bcf	3,6	;RP1=0, select bank0
  9262  0292  00DD               	movwf	_LCD_Time+7
  9263  0293                     l5028:
  9264                           
  9265                           ;main.c: 609:                     LCD_Time[6] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x24);
  9266  0293  084E               	movf	main@View_Log_Counter,w
  9267  0294  3E24               	addlw	36
  9268  0295  00FF               	movwf	btemp+1
  9269  0296  087F               	movf	btemp+1,w
  9270  0297  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9271  0298  30A1               	movlw	161
  9272  0299  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9273  029E  00FF               	movwf	btemp+1
  9274  029F  087F               	movf	btemp+1,w
  9275  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  9276  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  9277  02A2  00DC               	movwf	_LCD_Time+6
  9278  02A3                     l5030:
  9279                           
  9280                           ;main.c: 610:                     LCD_Time[4] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x23);
  9281  02A3  084E               	movf	main@View_Log_Counter,w
  9282  02A4  3E23               	addlw	35
  9283  02A5  00FF               	movwf	btemp+1
  9284  02A6  087F               	movf	btemp+1,w
  9285  02A7  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9286  02A8  30A1               	movlw	161
  9287  02A9  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9288  02AE  00FF               	movwf	btemp+1
  9289  02AF  087F               	movf	btemp+1,w
  9290  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  9291  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  9292  02B2  00DA               	movwf	_LCD_Time+4
  9293  02B3                     l5032:
  9294                           
  9295                           ;main.c: 611:                     LCD_Time[3] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x22);
  9296  02B3  084E               	movf	main@View_Log_Counter,w
  9297  02B4  3E22               	addlw	34
  9298  02B5  00FF               	movwf	btemp+1
  9299  02B6  087F               	movf	btemp+1,w
  9300  02B7  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9301  02B8  30A1               	movlw	161
  9302  02B9  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9303  02BE  00FF               	movwf	btemp+1
  9304  02BF  087F               	movf	btemp+1,w
  9305  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  9306  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  9307  02C2  00D9               	movwf	_LCD_Time+3
  9308  02C3                     l5034:
  9309                           
  9310                           ;main.c: 612:                     LCD_Time[1] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x21);
  9311  02C3  084E               	movf	main@View_Log_Counter,w
  9312  02C4  3E21               	addlw	33
  9313  02C5  00FF               	movwf	btemp+1
  9314  02C6  087F               	movf	btemp+1,w
  9315  02C7  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9316  02C8  30A1               	movlw	161
  9317  02C9  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9318  02CE  00FF               	movwf	btemp+1
  9319  02CF  087F               	movf	btemp+1,w
  9320  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  9321  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  9322  02D2  00D7               	movwf	_LCD_Time+1
  9323  02D3                     l5036:
  9324                           
  9325                           ;main.c: 613:                     LCD_Time[0] = E2PROM_24C04_Read(0xA1, View_Log_Counter
      +                           + 0x20);
  9326  02D3  084E               	movf	main@View_Log_Counter,w
  9327  02D4  3E20               	addlw	32
  9328  02D5  00FF               	movwf	btemp+1
  9329  02D6  087F               	movf	btemp+1,w
  9330  02D7  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9331  02D8  30A1               	movlw	161
  9332  02D9  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9333  02DE  00FF               	movwf	btemp+1
  9334  02DF  087F               	movf	btemp+1,w
  9335  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  9336  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  9337  02E2  00D6               	movwf	_LCD_Time
  9338  02E3  160A  118A  2EC8   	goto	l4940
  9339  02E6                     l5040:
  9340                           
  9341                           ;main.c: 620:                 Memory_Offset = 0;
  9342  02E6  01D0               	clrf	main@Memory_Offset
  9343  02E7                     l5042:
  9344                           
  9345                           ;main.c: 622:                 E2PROM_24C04_Write(0xA0, 0x01, Memory_Offset);
  9346  02E7  01F4               	clrf	E2PROM_24C04_Write@word_Address
  9347  02E8  0AF4               	incf	E2PROM_24C04_Write@word_Address,f
  9348  02E9  0850               	movf	main@Memory_Offset,w
  9349  02EA  00FF               	movwf	btemp+1
  9350  02EB  087F               	movf	btemp+1,w
  9351  02EC  00F5               	movwf	E2PROM_24C04_Write@Data
  9352  02ED  30A0               	movlw	160
  9353  02EE  160A  118A  2076  120A  118A  	fcall	_E2PROM_24C04_Write
  9354  02F3                     l5044:
  9355                           
  9356                           ;main.c: 623:                 View_Log_Counter = 0;
  9357  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  9358  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  9359  02F5  01CE               	clrf	main@View_Log_Counter
  9360                           
  9361                           ;main.c: 624:                 Clear_Events();
  9362  02F6  160A  118A  2043  120A  118A  	fcall	_Clear_Events
  9363  02FB                     l5046:
  9364                           
  9365                           ;main.c: 625:                 LCD_SendCMD((0x01));
  9366  02FB  3001               	movlw	1
  9367  02FC  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  9368  0301                     l5048:
  9369                           
  9370                           ;main.c: 626:                 LCD_DisStrRC(Clear_Events_msg1, 0, 0);
  9371  0301  30B9               	movlw	(low (_Clear_Events_msg1| (0+256)))& (0+255)
  9372  0302  1283               	bcf	3,5	;RP0=0, select bank0
  9373  0303  1303               	bcf	3,6	;RP1=0, select bank0
  9374  0304  00A3               	movwf	LCD_DisStrRC@str
  9375  0305  3001               	movlw	1
  9376  0306  00A4               	movwf	LCD_DisStrRC@str+1
  9377  0307  01A5               	clrf	LCD_DisStrRC@row
  9378  0308  01A6               	clrf	LCD_DisStrRC@column
  9379  0309  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9380  030E                     l5050:
  9381                           
  9382                           ;main.c: 627:                 LCD_DisStrRC(Clear_Events_msg2, 1, 2);
  9383  030E  30C3               	movlw	(low (_Clear_Events_msg2| 0))& (0+255)
  9384  030F  1283               	bcf	3,5	;RP0=0, select bank0
  9385  0310  1303               	bcf	3,6	;RP1=0, select bank0
  9386  0311  00A3               	movwf	LCD_DisStrRC@str
  9387  0312  3000               	movlw	0
  9388  0313  00A4               	movwf	LCD_DisStrRC@str+1
  9389  0314  01A5               	clrf	LCD_DisStrRC@row
  9390  0315  0AA5               	incf	LCD_DisStrRC@row,f
  9391  0316  3002               	movlw	2
  9392  0317  00FF               	movwf	btemp+1
  9393  0318  087F               	movf	btemp+1,w
  9394  0319  00A6               	movwf	LCD_DisStrRC@column
  9395  031A  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9396  031F                     l5052:
  9397                           
  9398                           ;main.c: 628:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  9399  031F  300B               	movlw	11
  9400  0320  1283               	bcf	3,5	;RP0=0, select bank0
  9401  0321  1303               	bcf	3,6	;RP1=0, select bank0
  9402  0322  00B8               	movwf	??_main+2
  9403  0323  3026               	movlw	38
  9404  0324  00B7               	movwf	??_main+1
  9405  0325  305D               	movlw	93
  9406  0326  00B6               	movwf	??_main
  9407  0327                     u4117:
  9408  0327  0BB6               	decfsz	??_main,f
  9409  0328  2B27               	goto	u4117
  9410  0329  0BB7               	decfsz	??_main+1,f
  9411  032A  2B27               	goto	u4117
  9412  032B  0BB8               	decfsz	??_main+2,f
  9413  032C  2B27               	goto	u4117
  9414  032D                     l5054:
  9415                           
  9416                           ;main.c: 629:                 LCD_SendCMD((0x01));
  9417  032D  3001               	movlw	1
  9418  032E  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  9419  0333                     l5056:
  9420                           
  9421                           ;main.c: 630:                 Screen_Status = 8;
  9422  0333  3008               	movlw	8
  9423  0334  00FF               	movwf	btemp+1
  9424  0335  087F               	movf	btemp+1,w
  9425  0336  1283               	bcf	3,5	;RP0=0, select bank0
  9426  0337  1303               	bcf	3,6	;RP1=0, select bank0
  9427  0338  00D1               	movwf	_Screen_Status
  9428                           
  9429                           ;main.c: 631:                 break;
  9430  0339  2F12               	goto	u4081
  9431  033A                     l5058:
  9432                           
  9433                           ;main.c: 634:                 temp_ = E2PROM_24C04_Read(0xA1, 0x01);
  9434  033A  01F4               	clrf	E2PROM_24C04_Read@word_Address
  9435  033B  0AF4               	incf	E2PROM_24C04_Read@word_Address,f
  9436  033C  30A1               	movlw	161
  9437  033D  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9438  0342  00FF               	movwf	btemp+1
  9439  0343  087F               	movf	btemp+1,w
  9440  0344  1283               	bcf	3,5	;RP0=0, select bank0
  9441  0345  1303               	bcf	3,6	;RP1=0, select bank0
  9442  0346  00CF               	movwf	main@temp_
  9443                           
  9444                           ;main.c: 635:                 if (temp_ / 16 == 0) {
  9445  0347  3010               	movlw	16
  9446  0348  00F3               	movwf	___awdiv@divisor
  9447  0349  3000               	movlw	0
  9448  034A  00F4               	movwf	___awdiv@divisor+1
  9449  034B  084F               	movf	main@temp_,w
  9450  034C  00B6               	movwf	??_main
  9451  034D  01B7               	clrf	??_main+1
  9452  034E  0836               	movf	??_main,w
  9453  034F  00F5               	movwf	___awdiv@dividend
  9454  0350  0837               	movf	??_main+1,w
  9455  0351  00F6               	movwf	___awdiv@dividend+1
  9456  0352  160A  118A  2456  120A  118A  	fcall	___awdiv
  9457  0357  0873               	movf	?___awdiv,w
  9458  0358  0474               	iorwf	?___awdiv+1,w
  9459  0359  1D03               	btfss	3,2
  9460  035A  2B5C               	goto	u3971
  9461  035B  2B5D               	goto	u3970
  9462  035C                     u3971:
  9463  035C  2BE2               	goto	l5062
  9464  035D                     u3970:
  9465  035D                     l5060:
  9466                           
  9467                           ;main.c: 637:                     UART_Write('N');
  9468  035D  304E               	movlw	78
  9469  035E  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9470                           
  9471                           ;main.c: 638:                     UART_Write('o');
  9472  0363  306F               	movlw	111
  9473  0364  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9474                           
  9475                           ;main.c: 639:                     UART_Write(' ');
  9476  0369  3020               	movlw	32
  9477  036A  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9478                           
  9479                           ;main.c: 640:                     UART_Write('L');
  9480  036F  304C               	movlw	76
  9481  0370  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9482                           
  9483                           ;main.c: 641:                     UART_Write('o');
  9484  0375  306F               	movlw	111
  9485  0376  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9486                           
  9487                           ;main.c: 642:                     UART_Write('g');
  9488  037B  3067               	movlw	103
  9489  037C  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9490                           
  9491                           ;main.c: 643:                     UART_Write('s');
  9492  0381  3073               	movlw	115
  9493  0382  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9494                           
  9495                           ;main.c: 644:                     UART_Write(' ');
  9496  0387  3020               	movlw	32
  9497  0388  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9498                           
  9499                           ;main.c: 645:                     UART_Write('A');
  9500  038D  3041               	movlw	65
  9501  038E  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9502                           
  9503                           ;main.c: 646:                     UART_Write('v');
  9504  0393  3076               	movlw	118
  9505  0394  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9506                           
  9507                           ;main.c: 647:                     UART_Write('a');
  9508  0399  3061               	movlw	97
  9509  039A  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9510                           
  9511                           ;main.c: 648:                     UART_Write('i');
  9512  039F  3069               	movlw	105
  9513  03A0  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9514                           
  9515                           ;main.c: 649:                     UART_Write('L');
  9516  03A5  304C               	movlw	76
  9517  03A6  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9518                           
  9519                           ;main.c: 650:                     UART_Write('a');
  9520  03AB  3061               	movlw	97
  9521  03AC  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9522                           
  9523                           ;main.c: 651:                     UART_Write('b');
  9524  03B1  3062               	movlw	98
  9525  03B2  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9526                           
  9527                           ;main.c: 652:                     UART_Write('l');
  9528  03B7  306C               	movlw	108
  9529  03B8  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9530                           
  9531                           ;main.c: 653:                     UART_Write('e');
  9532  03BD  3065               	movlw	101
  9533  03BE  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9534                           
  9535                           ;main.c: 654:                     UART_Write('.');
  9536  03C3  302E               	movlw	46
  9537  03C4  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9538                           
  9539                           ;main.c: 655:                     UART_Write('.');
  9540  03C9  302E               	movlw	46
  9541  03CA  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9542                           
  9543                           ;main.c: 656:                     UART_Write('.');
  9544  03CF  302E               	movlw	46
  9545  03D0  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9546                           
  9547                           ;main.c: 657:                     UART_Write('.');
  9548  03D5  302E               	movlw	46
  9549  03D6  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9550                           
  9551                           ;main.c: 658:                     UART_Write(10);
  9552  03DB  300A               	movlw	10
  9553  03DC  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9554                           
  9555                           ;main.c: 660:                 } else {
  9556  03E1  2D29               	goto	l5122
  9557  03E2                     l5062:
  9558                           
  9559                           ;main.c: 661:                     Download_Log_Counter = 0;
  9560  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  9561  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  9562  03E4  01CD               	clrf	main@Download_Log_Counter
  9563                           
  9564                           ;main.c: 662:                     while (Download_Log_Counter / 16 < 10) {
  9565  03E5  2D0C               	goto	l5120
  9566  03E6                     l5064:
  9567                           
  9568                           ;main.c: 664:                         temp_ = E2PROM_24C04_Read(0xA1, Download_Log_Count
      +                          er + 0x26);
  9569  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  9570  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  9571  03E8  084D               	movf	main@Download_Log_Counter,w
  9572  03E9  3E26               	addlw	38
  9573  03EA  00FF               	movwf	btemp+1
  9574  03EB  087F               	movf	btemp+1,w
  9575  03EC  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9576  03ED  30A1               	movlw	161
  9577  03EE  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9578  03F3  00FF               	movwf	btemp+1
  9579  03F4  087F               	movf	btemp+1,w
  9580  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  9581  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  9582  03F7  00CF               	movwf	main@temp_
  9583  03F8                     l5066:
  9584                           
  9585                           ;main.c: 665:                         if ((temp_ == 0x00) || (temp_ == 0xFF)) {
  9586  03F8  084F               	movf	main@temp_,w
  9587  03F9  1903               	btfsc	3,2
  9588  03FA  2BFC               	goto	u3981
  9589  03FB  2BFD               	goto	u3980
  9590  03FC                     u3981:
  9591  03FC  2D29               	goto	l5122
  9592  03FD                     u3980:
  9593  03FD                     l5068:
  9594  03FD  0A4F               	incf	main@temp_,w
  9595  03FE  1D03               	btfss	3,2
  9596  03FF  2C01               	goto	u3991
  9597  0400  2C02               	goto	u3990
  9598  0401                     u3991:
  9599  0401  2C03               	goto	l5070
  9600  0402                     u3990:
  9601  0402  2D29               	goto	l5122
  9602  0403                     l5070:
  9603                           
  9604                           ;main.c: 669:                         UART_Write((Download_Log_Counter / 16) + '0');
  9605  0403  3010               	movlw	16
  9606  0404  00F3               	movwf	___awdiv@divisor
  9607  0405  3000               	movlw	0
  9608  0406  00F4               	movwf	___awdiv@divisor+1
  9609  0407  084D               	movf	main@Download_Log_Counter,w
  9610  0408  00B6               	movwf	??_main
  9611  0409  01B7               	clrf	??_main+1
  9612  040A  0836               	movf	??_main,w
  9613  040B  00F5               	movwf	___awdiv@dividend
  9614  040C  0837               	movf	??_main+1,w
  9615  040D  00F6               	movwf	___awdiv@dividend+1
  9616  040E  160A  118A  2456  120A  118A  	fcall	___awdiv
  9617  0413  0873               	movf	?___awdiv,w
  9618  0414  3E30               	addlw	48
  9619  0415  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9620  041A                     l5072:
  9621                           
  9622                           ;main.c: 670:                         UART_Write(' ');
  9623  041A  3020               	movlw	32
  9624  041B  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9625  0420                     l5074:
  9626                           
  9627                           ;main.c: 671:                         LCD_Time[7] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x25);
  9628  0420  1283               	bcf	3,5	;RP0=0, select bank0
  9629  0421  1303               	bcf	3,6	;RP1=0, select bank0
  9630  0422  084D               	movf	main@Download_Log_Counter,w
  9631  0423  3E25               	addlw	37
  9632  0424  00FF               	movwf	btemp+1
  9633  0425  087F               	movf	btemp+1,w
  9634  0426  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9635  0427  30A1               	movlw	161
  9636  0428  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9637  042D  00FF               	movwf	btemp+1
  9638  042E  087F               	movf	btemp+1,w
  9639  042F  1283               	bcf	3,5	;RP0=0, select bank0
  9640  0430  1303               	bcf	3,6	;RP1=0, select bank0
  9641  0431  00DD               	movwf	_LCD_Time+7
  9642  0432                     l5076:
  9643                           
  9644                           ;main.c: 672:                         LCD_Time[6] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x24);
  9645  0432  084D               	movf	main@Download_Log_Counter,w
  9646  0433  3E24               	addlw	36
  9647  0434  00FF               	movwf	btemp+1
  9648  0435  087F               	movf	btemp+1,w
  9649  0436  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9650  0437  30A1               	movlw	161
  9651  0438  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9652  043D  00FF               	movwf	btemp+1
  9653  043E  087F               	movf	btemp+1,w
  9654  043F  1283               	bcf	3,5	;RP0=0, select bank0
  9655  0440  1303               	bcf	3,6	;RP1=0, select bank0
  9656  0441  00DC               	movwf	_LCD_Time+6
  9657  0442                     l5078:
  9658                           
  9659                           ;main.c: 673:                         LCD_Time[4] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x23);
  9660  0442  084D               	movf	main@Download_Log_Counter,w
  9661  0443  3E23               	addlw	35
  9662  0444  00FF               	movwf	btemp+1
  9663  0445  087F               	movf	btemp+1,w
  9664  0446  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9665  0447  30A1               	movlw	161
  9666  0448  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9667  044D  00FF               	movwf	btemp+1
  9668  044E  087F               	movf	btemp+1,w
  9669  044F  1283               	bcf	3,5	;RP0=0, select bank0
  9670  0450  1303               	bcf	3,6	;RP1=0, select bank0
  9671  0451  00DA               	movwf	_LCD_Time+4
  9672  0452                     l5080:
  9673                           
  9674                           ;main.c: 674:                         LCD_Time[3] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x22);
  9675  0452  084D               	movf	main@Download_Log_Counter,w
  9676  0453  3E22               	addlw	34
  9677  0454  00FF               	movwf	btemp+1
  9678  0455  087F               	movf	btemp+1,w
  9679  0456  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9680  0457  30A1               	movlw	161
  9681  0458  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9682  045D  00FF               	movwf	btemp+1
  9683  045E  087F               	movf	btemp+1,w
  9684  045F  1283               	bcf	3,5	;RP0=0, select bank0
  9685  0460  1303               	bcf	3,6	;RP1=0, select bank0
  9686  0461  00D9               	movwf	_LCD_Time+3
  9687  0462                     l5082:
  9688                           
  9689                           ;main.c: 675:                         LCD_Time[1] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x21);
  9690  0462  084D               	movf	main@Download_Log_Counter,w
  9691  0463  3E21               	addlw	33
  9692  0464  00FF               	movwf	btemp+1
  9693  0465  087F               	movf	btemp+1,w
  9694  0466  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9695  0467  30A1               	movlw	161
  9696  0468  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9697  046D  00FF               	movwf	btemp+1
  9698  046E  087F               	movf	btemp+1,w
  9699  046F  1283               	bcf	3,5	;RP0=0, select bank0
  9700  0470  1303               	bcf	3,6	;RP1=0, select bank0
  9701  0471  00D7               	movwf	_LCD_Time+1
  9702  0472                     l5084:
  9703                           
  9704                           ;main.c: 676:                         LCD_Time[0] = E2PROM_24C04_Read(0xA1, Download_Log
      +                          _Counter + 0x20);
  9705  0472  084D               	movf	main@Download_Log_Counter,w
  9706  0473  3E20               	addlw	32
  9707  0474  00FF               	movwf	btemp+1
  9708  0475  087F               	movf	btemp+1,w
  9709  0476  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9710  0477  30A1               	movlw	161
  9711  0478  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9712  047D  00FF               	movwf	btemp+1
  9713  047E  087F               	movf	btemp+1,w
  9714  047F  1283               	bcf	3,5	;RP0=0, select bank0
  9715  0480  1303               	bcf	3,6	;RP1=0, select bank0
  9716  0481  00D6               	movwf	_LCD_Time
  9717  0482                     l5086:
  9718                           
  9719                           ;main.c: 677:                         UART_Write(LCD_Time[0]);
  9720  0482  0856               	movf	_LCD_Time,w
  9721  0483  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9722  0488                     l5088:
  9723                           
  9724                           ;main.c: 678:                         UART_Write(LCD_Time[1]);
  9725  0488  1283               	bcf	3,5	;RP0=0, select bank0
  9726  0489  1303               	bcf	3,6	;RP1=0, select bank0
  9727  048A  0857               	movf	_LCD_Time+1,w
  9728  048B  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9729  0490                     l5090:
  9730                           
  9731                           ;main.c: 679:                         UART_Write(':');
  9732  0490  303A               	movlw	58
  9733  0491  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9734  0496                     l5092:
  9735                           
  9736                           ;main.c: 680:                         UART_Write(LCD_Time[3]);
  9737  0496  1283               	bcf	3,5	;RP0=0, select bank0
  9738  0497  1303               	bcf	3,6	;RP1=0, select bank0
  9739  0498  0859               	movf	_LCD_Time+3,w
  9740  0499  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9741  049E                     l5094:
  9742                           
  9743                           ;main.c: 681:                         UART_Write(LCD_Time[4]);
  9744  049E  1283               	bcf	3,5	;RP0=0, select bank0
  9745  049F  1303               	bcf	3,6	;RP1=0, select bank0
  9746  04A0  085A               	movf	_LCD_Time+4,w
  9747  04A1  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9748  04A6                     l5096:
  9749                           
  9750                           ;main.c: 682:                         UART_Write(':');
  9751  04A6  303A               	movlw	58
  9752  04A7  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9753  04AC                     l5098:
  9754                           
  9755                           ;main.c: 683:                         UART_Write(LCD_Time[6]);
  9756  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  9757  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  9758  04AE  085C               	movf	_LCD_Time+6,w
  9759  04AF  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9760  04B4                     l5100:
  9761                           
  9762                           ;main.c: 684:                         UART_Write(LCD_Time[7]);
  9763  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  9764  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  9765  04B6  085D               	movf	_LCD_Time+7,w
  9766  04B7  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9767  04BC                     l5102:
  9768                           
  9769                           ;main.c: 685:                         UART_Write(' ');
  9770  04BC  3020               	movlw	32
  9771  04BD  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9772  04C2                     l5104:
  9773                           
  9774                           ;main.c: 688:                         UART_Send_Current_Event(temp_);
  9775  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  9776  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  9777  04C4  084F               	movf	main@temp_,w
  9778  04C5  160A  158A  279A  120A  118A  	fcall	_UART_Send_Current_Event
  9779  04CA                     l5106:
  9780                           
  9781                           ;main.c: 689:                         UART_Write(' ');
  9782  04CA  3020               	movlw	32
  9783  04CB  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9784  04D0                     l5108:
  9785                           
  9786                           ;main.c: 691:                         Adc_Str[0] = E2PROM_24C04_Read(0xA1, Download_Log_
      +                          Counter + 0x27);
  9787  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  9788  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  9789  04D2  084D               	movf	main@Download_Log_Counter,w
  9790  04D3  3E27               	addlw	39
  9791  04D4  00FF               	movwf	btemp+1
  9792  04D5  087F               	movf	btemp+1,w
  9793  04D6  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9794  04D7  30A1               	movlw	161
  9795  04D8  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9796  04DD  00FF               	movwf	btemp+1
  9797  04DE  087F               	movf	btemp+1,w
  9798  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  9799  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  9800  04E1  00BF               	movwf	main@Adc_Str
  9801  04E2                     l5110:
  9802                           
  9803                           ;main.c: 692:                         Adc_Str[1] = E2PROM_24C04_Read(0xA1, Download_Log_
      +                          Counter + 0x28);
  9804  04E2  084D               	movf	main@Download_Log_Counter,w
  9805  04E3  3E28               	addlw	40
  9806  04E4  00FF               	movwf	btemp+1
  9807  04E5  087F               	movf	btemp+1,w
  9808  04E6  00F4               	movwf	E2PROM_24C04_Read@word_Address
  9809  04E7  30A1               	movlw	161
  9810  04E8  160A  118A  21A8  120A  118A  	fcall	_E2PROM_24C04_Read
  9811  04ED  00FF               	movwf	btemp+1
  9812  04EE  087F               	movf	btemp+1,w
  9813  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  9814  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  9815  04F1  00C0               	movwf	main@Adc_Str+1
  9816  04F2                     l5112:
  9817                           
  9818                           ;main.c: 693:                         UART_Write(Adc_Str[0]);
  9819  04F2  083F               	movf	main@Adc_Str,w
  9820  04F3  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9821  04F8                     l5114:
  9822                           
  9823                           ;main.c: 694:                         UART_Write(Adc_Str[1]);
  9824  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  9825  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  9826  04FA  0840               	movf	main@Adc_Str+1,w
  9827  04FB  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9828  0500                     l5116:
  9829                           
  9830                           ;main.c: 695:                         UART_Write(10);
  9831  0500  300A               	movlw	10
  9832  0501  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  9833  0506                     l5118:
  9834                           
  9835                           ;main.c: 697:                         Download_Log_Counter += 16;
  9836  0506  3010               	movlw	16
  9837  0507  00FF               	movwf	btemp+1
  9838  0508  087F               	movf	btemp+1,w
  9839  0509  1283               	bcf	3,5	;RP0=0, select bank0
  9840  050A  1303               	bcf	3,6	;RP1=0, select bank0
  9841  050B  07CD               	addwf	main@Download_Log_Counter,f
  9842  050C                     l5120:
  9843                           
  9844                           ;main.c: 662:                     while (Download_Log_Counter / 16 < 10) {
  9845  050C  3010               	movlw	16
  9846  050D  00F3               	movwf	___awdiv@divisor
  9847  050E  3000               	movlw	0
  9848  050F  00F4               	movwf	___awdiv@divisor+1
  9849  0510  084D               	movf	main@Download_Log_Counter,w
  9850  0511  00B6               	movwf	??_main
  9851  0512  01B7               	clrf	??_main+1
  9852  0513  0836               	movf	??_main,w
  9853  0514  00F5               	movwf	___awdiv@dividend
  9854  0515  0837               	movf	??_main+1,w
  9855  0516  00F6               	movwf	___awdiv@dividend+1
  9856  0517  160A  118A  2456  120A  118A  	fcall	___awdiv
  9857  051C  0874               	movf	?___awdiv+1,w
  9858  051D  3A80               	xorlw	128
  9859  051E  00FF               	movwf	btemp+1
  9860  051F  3080               	movlw	128
  9861  0520  027F               	subwf	btemp+1,w
  9862  0521  1D03               	skipz
  9863  0522  2D25               	goto	u4005
  9864  0523  300A               	movlw	10
  9865  0524  0273               	subwf	?___awdiv,w
  9866  0525                     u4005:
  9867  0525  1C03               	skipc
  9868  0526  2D28               	goto	u4001
  9869  0527  2D29               	goto	u4000
  9870  0528                     u4001:
  9871  0528  2BE6               	goto	l5064
  9872  0529                     u4000:
  9873  0529                     l5122:
  9874                           
  9875                           ;main.c: 701:                 LCD_SendCMD((0x01));
  9876  0529  3001               	movlw	1
  9877  052A  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  9878  052F                     l5124:
  9879                           
  9880                           ;main.c: 702:                 LCD_DisStrRC(LCD_Logsmsg, 0, 0);
  9881  052F  30D8               	movlw	(low (_LCD_Logsmsg| 0))& (0+255)
  9882  0530  1283               	bcf	3,5	;RP0=0, select bank0
  9883  0531  1303               	bcf	3,6	;RP1=0, select bank0
  9884  0532  00A3               	movwf	LCD_DisStrRC@str
  9885  0533  3000               	movlw	0
  9886  0534  00A4               	movwf	LCD_DisStrRC@str+1
  9887  0535  01A5               	clrf	LCD_DisStrRC@row
  9888  0536  01A6               	clrf	LCD_DisStrRC@column
  9889  0537  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9890  053C                     l5126:
  9891                           
  9892                           ;main.c: 703:                 LCD_DisChar(' ');
  9893  053C  3020               	movlw	32
  9894  053D  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9895  0542                     l5128:
  9896                           
  9897                           ;main.c: 704:                 LCD_DisChar('D');
  9898  0542  3044               	movlw	68
  9899  0543  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9900  0548                     l5130:
  9901                           
  9902                           ;main.c: 705:                 LCD_DisChar('o');
  9903  0548  306F               	movlw	111
  9904  0549  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9905  054E                     l5132:
  9906                           
  9907                           ;main.c: 706:                 LCD_DisChar('w');
  9908  054E  3077               	movlw	119
  9909  054F  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9910  0554                     l5134:
  9911                           
  9912                           ;main.c: 707:                 LCD_DisChar('n');
  9913  0554  306E               	movlw	110
  9914  0555  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9915  055A                     l5136:
  9916                           
  9917                           ;main.c: 708:                 LCD_DisChar('l');
  9918  055A  306C               	movlw	108
  9919  055B  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9920  0560                     l5138:
  9921                           
  9922                           ;main.c: 709:                 LCD_DisChar('o');
  9923  0560  306F               	movlw	111
  9924  0561  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9925  0566                     l5140:
  9926                           
  9927                           ;main.c: 710:                 LCD_DisChar('a');
  9928  0566  3061               	movlw	97
  9929  0567  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9930  056C                     l5142:
  9931                           
  9932                           ;main.c: 711:                 LCD_DisChar('d');
  9933  056C  3064               	movlw	100
  9934  056D  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9935  0572                     l5144:
  9936                           
  9937                           ;main.c: 712:                 LCD_DisChar('e');
  9938  0572  3065               	movlw	101
  9939  0573  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9940  0578                     l5146:
  9941                           
  9942                           ;main.c: 713:                 LCD_DisChar('d');
  9943  0578  3064               	movlw	100
  9944  0579  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
  9945                           
  9946                           ;main.c: 714:                 LCD_DisStrRC(Clear_Events_msg2, 1, 0);
  9947  057E  30C3               	movlw	(low (_Clear_Events_msg2| 0))& (0+255)
  9948  057F  1283               	bcf	3,5	;RP0=0, select bank0
  9949  0580  1303               	bcf	3,6	;RP1=0, select bank0
  9950  0581  00A3               	movwf	LCD_DisStrRC@str
  9951  0582  3000               	movlw	0
  9952  0583  00A4               	movwf	LCD_DisStrRC@str+1
  9953  0584  01A5               	clrf	LCD_DisStrRC@row
  9954  0585  0AA5               	incf	LCD_DisStrRC@row,f
  9955  0586  01A6               	clrf	LCD_DisStrRC@column
  9956  0587  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
  9957  058C                     l5148:
  9958                           
  9959                           ;main.c: 715:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  9960  058C  3015               	movlw	21
  9961  058D  1283               	bcf	3,5	;RP0=0, select bank0
  9962  058E  1303               	bcf	3,6	;RP1=0, select bank0
  9963  058F  00B8               	movwf	??_main+2
  9964  0590  304B               	movlw	75
  9965  0591  00B7               	movwf	??_main+1
  9966  0592  30BD               	movlw	189
  9967  0593  00B6               	movwf	??_main
  9968  0594                     u4127:
  9969  0594  0BB6               	decfsz	??_main,f
  9970  0595  2D94               	goto	u4127
  9971  0596  0BB7               	decfsz	??_main+1,f
  9972  0597  2D94               	goto	u4127
  9973  0598  0BB8               	decfsz	??_main+2,f
  9974  0599  2D94               	goto	u4127
  9975  059A  2D9B               	nop2
  9976  059B                     l5150:
  9977                           
  9978                           ;main.c: 716:                 LCD_SendCMD((0x01));
  9979  059B  3001               	movlw	1
  9980  059C  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
  9981  05A1                     l5152:
  9982                           
  9983                           ;main.c: 717:                 Screen_Status = 10;
  9984  05A1  300A               	movlw	10
  9985  05A2  00FF               	movwf	btemp+1
  9986  05A3  087F               	movf	btemp+1,w
  9987  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  9988  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  9989  05A6  00D1               	movwf	_Screen_Status
  9990                           
  9991                           ;main.c: 718:                 break;
  9992  05A7  2F12               	goto	u4081
  9993  05A8                     l500:	
  9994                           ;main.c: 720:             case(14):
  9995                           
  9996                           
  9997                           ;main.c: 721:                 TMR1ON = 1;
  9998  05A8  1410               	bsf	16,0	;volatile
  9999  05A9                     l5154:
 10000                           
 10001                           ;main.c: 722:                 LCD_GotoRC(0, 0);
 10002  05A9  01F6               	clrf	LCD_GotoRC@column
 10003  05AA  3000               	movlw	0
 10004  05AB  160A  118A  2013  120A  118A  	fcall	_LCD_GotoRC
 10005                           
 10006                           ;main.c: 723:                 LCD_DisChar('T');
 10007  05B0  3054               	movlw	84
 10008  05B1  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10009                           
 10010                           ;main.c: 724:                 LCD_DisChar('I');
 10011  05B6  3049               	movlw	73
 10012  05B7  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10013                           
 10014                           ;main.c: 725:                 LCD_DisChar('M');
 10015  05BC  304D               	movlw	77
 10016  05BD  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10017                           
 10018                           ;main.c: 726:                 LCD_DisChar('E');
 10019  05C2  3045               	movlw	69
 10020  05C3  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10021                           
 10022                           ;main.c: 727:                 LCD_DisChar(' ');
 10023  05C8  3020               	movlw	32
 10024  05C9  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10025                           
 10026                           ;main.c: 728:                 LCD_DisChar('(');
 10027  05CE  3028               	movlw	40
 10028  05CF  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10029                           
 10030                           ;main.c: 729:                 LCD_DisChar('H');
 10031  05D4  3048               	movlw	72
 10032  05D5  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10033                           
 10034                           ;main.c: 730:                 LCD_DisChar('H');
 10035  05DA  3048               	movlw	72
 10036  05DB  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10037                           
 10038                           ;main.c: 731:                 LCD_DisChar(':');
 10039  05E0  303A               	movlw	58
 10040  05E1  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10041                           
 10042                           ;main.c: 732:                 LCD_DisChar('M');
 10043  05E6  304D               	movlw	77
 10044  05E7  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10045                           
 10046                           ;main.c: 733:                 LCD_DisChar('M');
 10047  05EC  304D               	movlw	77
 10048  05ED  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10049                           
 10050                           ;main.c: 734:                 LCD_DisChar(':');
 10051  05F2  303A               	movlw	58
 10052  05F3  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10053                           
 10054                           ;main.c: 735:                 LCD_DisChar('S');
 10055  05F8  3053               	movlw	83
 10056  05F9  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10057                           
 10058                           ;main.c: 736:                 LCD_DisChar('S');
 10059  05FE  3053               	movlw	83
 10060  05FF  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10061                           
 10062                           ;main.c: 737:                 LCD_DisChar(')');
 10063  0604  3029               	movlw	41
 10064  0605  160A  118A  2328  120A  118A  	fcall	_LCD_DisChar
 10065  060A                     l5156:
 10066                           
 10067                           ;main.c: 740:                 if (Selection_Part == 1) {
 10068  060A  1283               	bcf	3,5	;RP0=0, select bank0
 10069  060B  1303               	bcf	3,6	;RP1=0, select bank0
 10070  060C  0352               	decf	_Selection_Part,w
 10071  060D  1D03               	btfss	3,2
 10072  060E  2E10               	goto	u4011
 10073  060F  2E11               	goto	u4010
 10074  0610                     u4011:
 10075  0610  2E70               	goto	l5164
 10076  0611                     u4010:
 10077  0611                     l5158:
 10078                           
 10079                           ;main.c: 741:                     if (Set_Time_Blinking_flag == 1) {
 10080  0611  0354               	decf	_Set_Time_Blinking_flag,w
 10081  0612  1D03               	btfss	3,2
 10082  0613  2E15               	goto	u4021
 10083  0614  2E16               	goto	u4020
 10084  0615                     u4021:
 10085  0615  2E47               	goto	l5162
 10086  0616                     u4020:
 10087  0616                     l5160:
 10088                           
 10089                           ;main.c: 742:                         LCD_Time[7] = RTC_Date.Seconds[1];
 10090  0616  1683               	bsf	3,5	;RP0=1, select bank3
 10091  0617  1703               	bsf	3,6	;RP1=1, select bank3
 10092  0618  085A               	movf	(main@RTC_Date^(0+384)+1),w
 10093  0619  00FF               	movwf	btemp+1
 10094  061A  087F               	movf	btemp+1,w
 10095  061B  1283               	bcf	3,5	;RP0=0, select bank0
 10096  061C  1303               	bcf	3,6	;RP1=0, select bank0
 10097  061D  00DD               	movwf	_LCD_Time+7
 10098                           
 10099                           ;main.c: 743:                         LCD_Time[6] = RTC_Date.Seconds[0];
 10100  061E  1683               	bsf	3,5	;RP0=1, select bank3
 10101  061F  1703               	bsf	3,6	;RP1=1, select bank3
 10102  0620  0859               	movf	main@RTC_Date^(0+384),w
 10103  0621  00FF               	movwf	btemp+1
 10104  0622  087F               	movf	btemp+1,w
 10105  0623  1283               	bcf	3,5	;RP0=0, select bank0
 10106  0624  1303               	bcf	3,6	;RP1=0, select bank0
 10107  0625  00DC               	movwf	_LCD_Time+6
 10108                           
 10109                           ;main.c: 744:                         LCD_Time[4] = RTC_Date.Minutes[1];
 10110  0626  1683               	bsf	3,5	;RP0=1, select bank3
 10111  0627  1703               	bsf	3,6	;RP1=1, select bank3
 10112  0628  085C               	movf	(main@RTC_Date^(0+384)+3),w
 10113  0629  00FF               	movwf	btemp+1
 10114  062A  087F               	movf	btemp+1,w
 10115  062B  1283               	bcf	3,5	;RP0=0, select bank0
 10116  062C  1303               	bcf	3,6	;RP1=0, select bank0
 10117  062D  00DA               	movwf	_LCD_Time+4
 10118                           
 10119                           ;main.c: 745:                         LCD_Time[3] = RTC_Date.Minutes[0];
 10120  062E  1683               	bsf	3,5	;RP0=1, select bank3
 10121  062F  1703               	bsf	3,6	;RP1=1, select bank3
 10122  0630  085B               	movf	(main@RTC_Date^(0+384)+2),w
 10123  0631  00FF               	movwf	btemp+1
 10124  0632  087F               	movf	btemp+1,w
 10125  0633  1283               	bcf	3,5	;RP0=0, select bank0
 10126  0634  1303               	bcf	3,6	;RP1=0, select bank0
 10127  0635  00D9               	movwf	_LCD_Time+3
 10128                           
 10129                           ;main.c: 746:                         LCD_Time[1] = RTC_Date.Hours[1];
 10130  0636  1683               	bsf	3,5	;RP0=1, select bank3
 10131  0637  1703               	bsf	3,6	;RP1=1, select bank3
 10132  0638  085E               	movf	(main@RTC_Date^(0+384)+5),w
 10133  0639  00FF               	movwf	btemp+1
 10134  063A  087F               	movf	btemp+1,w
 10135  063B  1283               	bcf	3,5	;RP0=0, select bank0
 10136  063C  1303               	bcf	3,6	;RP1=0, select bank0
 10137  063D  00D7               	movwf	_LCD_Time+1
 10138                           
 10139                           ;main.c: 747:                         LCD_Time[0] = RTC_Date.Hours[0];
 10140  063E  1683               	bsf	3,5	;RP0=1, select bank3
 10141  063F  1703               	bsf	3,6	;RP1=1, select bank3
 10142  0640  085D               	movf	(main@RTC_Date^(0+384)+4),w
 10143  0641  00FF               	movwf	btemp+1
 10144  0642  087F               	movf	btemp+1,w
 10145  0643  1283               	bcf	3,5	;RP0=0, select bank0
 10146  0644  1303               	bcf	3,6	;RP1=0, select bank0
 10147  0645  00D6               	movwf	_LCD_Time
 10148                           
 10149                           ;main.c: 748:                     } else {
 10150  0646  2ED9               	goto	l5180
 10151  0647                     l5162:
 10152                           
 10153                           ;main.c: 749:                         LCD_Time[7] = ' ';
 10154  0647  3020               	movlw	32
 10155  0648  00FF               	movwf	btemp+1
 10156  0649  087F               	movf	btemp+1,w
 10157  064A  00DD               	movwf	_LCD_Time+7
 10158                           
 10159                           ;main.c: 750:                         LCD_Time[6] = ' ';
 10160  064B  3020               	movlw	32
 10161  064C  00FF               	movwf	btemp+1
 10162  064D  087F               	movf	btemp+1,w
 10163  064E  00DC               	movwf	_LCD_Time+6
 10164                           
 10165                           ;main.c: 751:                         LCD_Time[4] = RTC_Date.Minutes[1];
 10166  064F  1683               	bsf	3,5	;RP0=1, select bank3
 10167  0650  1703               	bsf	3,6	;RP1=1, select bank3
 10168  0651  085C               	movf	(main@RTC_Date^(0+384)+3),w
 10169  0652  00FF               	movwf	btemp+1
 10170  0653  087F               	movf	btemp+1,w
 10171  0654  1283               	bcf	3,5	;RP0=0, select bank0
 10172  0655  1303               	bcf	3,6	;RP1=0, select bank0
 10173  0656  00DA               	movwf	_LCD_Time+4
 10174                           
 10175                           ;main.c: 752:                         LCD_Time[3] = RTC_Date.Minutes[0];
 10176  0657  1683               	bsf	3,5	;RP0=1, select bank3
 10177  0658  1703               	bsf	3,6	;RP1=1, select bank3
 10178  0659  085B               	movf	(main@RTC_Date^(0+384)+2),w
 10179  065A  00FF               	movwf	btemp+1
 10180  065B  087F               	movf	btemp+1,w
 10181  065C  1283               	bcf	3,5	;RP0=0, select bank0
 10182  065D  1303               	bcf	3,6	;RP1=0, select bank0
 10183  065E  00D9               	movwf	_LCD_Time+3
 10184                           
 10185                           ;main.c: 753:                         LCD_Time[1] = RTC_Date.Hours[1];
 10186  065F  1683               	bsf	3,5	;RP0=1, select bank3
 10187  0660  1703               	bsf	3,6	;RP1=1, select bank3
 10188  0661  085E               	movf	(main@RTC_Date^(0+384)+5),w
 10189  0662  00FF               	movwf	btemp+1
 10190  0663  087F               	movf	btemp+1,w
 10191  0664  1283               	bcf	3,5	;RP0=0, select bank0
 10192  0665  1303               	bcf	3,6	;RP1=0, select bank0
 10193  0666  00D7               	movwf	_LCD_Time+1
 10194                           
 10195                           ;main.c: 754:                         LCD_Time[0] = RTC_Date.Hours[0];
 10196  0667  1683               	bsf	3,5	;RP0=1, select bank3
 10197  0668  1703               	bsf	3,6	;RP1=1, select bank3
 10198  0669  085D               	movf	(main@RTC_Date^(0+384)+4),w
 10199  066A  00FF               	movwf	btemp+1
 10200  066B  087F               	movf	btemp+1,w
 10201  066C  1283               	bcf	3,5	;RP0=0, select bank0
 10202  066D  1303               	bcf	3,6	;RP1=0, select bank0
 10203  066E  00D6               	movwf	_LCD_Time
 10204  066F  2ED9               	goto	l5180
 10205  0670                     l5164:
 10206  0670  3002               	movlw	2
 10207  0671  0652               	xorwf	_Selection_Part,w
 10208  0672  1D03               	btfss	3,2
 10209  0673  2E75               	goto	u4031
 10210  0674  2E76               	goto	u4030
 10211  0675                     u4031:
 10212  0675  2EA5               	goto	l5172
 10213  0676                     u4030:
 10214  0676                     l5166:
 10215                           
 10216                           ;main.c: 758:                     if (Set_Time_Blinking_flag == 1) {
 10217  0676  0354               	decf	_Set_Time_Blinking_flag,w
 10218  0677  1D03               	btfss	3,2
 10219  0678  2E7A               	goto	u4041
 10220  0679  2E7B               	goto	u4040
 10221  067A                     u4041:
 10222  067A  2E7C               	goto	l5170
 10223  067B                     u4040:
 10224  067B  2E16               	goto	l5160
 10225  067C                     l5170:
 10226                           
 10227                           ;main.c: 766:                         LCD_Time[7] = RTC_Date.Seconds[1];
 10228  067C  1683               	bsf	3,5	;RP0=1, select bank3
 10229  067D  1703               	bsf	3,6	;RP1=1, select bank3
 10230  067E  085A               	movf	(main@RTC_Date^(0+384)+1),w
 10231  067F  00FF               	movwf	btemp+1
 10232  0680  087F               	movf	btemp+1,w
 10233  0681  1283               	bcf	3,5	;RP0=0, select bank0
 10234  0682  1303               	bcf	3,6	;RP1=0, select bank0
 10235  0683  00DD               	movwf	_LCD_Time+7
 10236                           
 10237                           ;main.c: 767:                         LCD_Time[6] = RTC_Date.Seconds[0];
 10238  0684  1683               	bsf	3,5	;RP0=1, select bank3
 10239  0685  1703               	bsf	3,6	;RP1=1, select bank3
 10240  0686  0859               	movf	main@RTC_Date^(0+384),w
 10241  0687  00FF               	movwf	btemp+1
 10242  0688  087F               	movf	btemp+1,w
 10243  0689  1283               	bcf	3,5	;RP0=0, select bank0
 10244  068A  1303               	bcf	3,6	;RP1=0, select bank0
 10245  068B  00DC               	movwf	_LCD_Time+6
 10246                           
 10247                           ;main.c: 768:                         LCD_Time[4] = ' ';
 10248  068C  3020               	movlw	32
 10249  068D  00FF               	movwf	btemp+1
 10250  068E  087F               	movf	btemp+1,w
 10251  068F  00DA               	movwf	_LCD_Time+4
 10252                           
 10253                           ;main.c: 769:                         LCD_Time[3] = ' ';
 10254  0690  3020               	movlw	32
 10255  0691  00FF               	movwf	btemp+1
 10256  0692  087F               	movf	btemp+1,w
 10257  0693  00D9               	movwf	_LCD_Time+3
 10258                           
 10259                           ;main.c: 770:                         LCD_Time[1] = RTC_Date.Hours[1];
 10260  0694  1683               	bsf	3,5	;RP0=1, select bank3
 10261  0695  1703               	bsf	3,6	;RP1=1, select bank3
 10262  0696  085E               	movf	(main@RTC_Date^(0+384)+5),w
 10263  0697  00FF               	movwf	btemp+1
 10264  0698  087F               	movf	btemp+1,w
 10265  0699  1283               	bcf	3,5	;RP0=0, select bank0
 10266  069A  1303               	bcf	3,6	;RP1=0, select bank0
 10267  069B  00D7               	movwf	_LCD_Time+1
 10268                           
 10269                           ;main.c: 771:                         LCD_Time[0] = RTC_Date.Hours[0];
 10270  069C  1683               	bsf	3,5	;RP0=1, select bank3
 10271  069D  1703               	bsf	3,6	;RP1=1, select bank3
 10272  069E  085D               	movf	(main@RTC_Date^(0+384)+4),w
 10273  069F  00FF               	movwf	btemp+1
 10274  06A0  087F               	movf	btemp+1,w
 10275  06A1  1283               	bcf	3,5	;RP0=0, select bank0
 10276  06A2  1303               	bcf	3,6	;RP1=0, select bank0
 10277  06A3  00D6               	movwf	_LCD_Time
 10278  06A4  2ED9               	goto	l5180
 10279  06A5                     l5172:
 10280  06A5  3003               	movlw	3
 10281  06A6  0652               	xorwf	_Selection_Part,w
 10282  06A7  1D03               	btfss	3,2
 10283  06A8  2EAA               	goto	u4051
 10284  06A9  2EAB               	goto	u4050
 10285  06AA                     u4051:
 10286  06AA  2ED9               	goto	l5180
 10287  06AB                     u4050:
 10288  06AB                     l5174:
 10289                           
 10290                           ;main.c: 775:                     if (Set_Time_Blinking_flag == 1) {
 10291  06AB  0354               	decf	_Set_Time_Blinking_flag,w
 10292  06AC  1D03               	btfss	3,2
 10293  06AD  2EAF               	goto	u4061
 10294  06AE  2EB0               	goto	u4060
 10295  06AF                     u4061:
 10296  06AF  2EB1               	goto	l5178
 10297  06B0                     u4060:
 10298  06B0  2E16               	goto	l5160
 10299  06B1                     l5178:
 10300                           
 10301                           ;main.c: 783:                         LCD_Time[7] = RTC_Date.Seconds[1];
 10302  06B1  1683               	bsf	3,5	;RP0=1, select bank3
 10303  06B2  1703               	bsf	3,6	;RP1=1, select bank3
 10304  06B3  085A               	movf	(main@RTC_Date^(0+384)+1),w
 10305  06B4  00FF               	movwf	btemp+1
 10306  06B5  087F               	movf	btemp+1,w
 10307  06B6  1283               	bcf	3,5	;RP0=0, select bank0
 10308  06B7  1303               	bcf	3,6	;RP1=0, select bank0
 10309  06B8  00DD               	movwf	_LCD_Time+7
 10310                           
 10311                           ;main.c: 784:                         LCD_Time[6] = RTC_Date.Seconds[0];
 10312  06B9  1683               	bsf	3,5	;RP0=1, select bank3
 10313  06BA  1703               	bsf	3,6	;RP1=1, select bank3
 10314  06BB  0859               	movf	main@RTC_Date^(0+384),w
 10315  06BC  00FF               	movwf	btemp+1
 10316  06BD  087F               	movf	btemp+1,w
 10317  06BE  1283               	bcf	3,5	;RP0=0, select bank0
 10318  06BF  1303               	bcf	3,6	;RP1=0, select bank0
 10319  06C0  00DC               	movwf	_LCD_Time+6
 10320                           
 10321                           ;main.c: 785:                         LCD_Time[4] = RTC_Date.Minutes[1];
 10322  06C1  1683               	bsf	3,5	;RP0=1, select bank3
 10323  06C2  1703               	bsf	3,6	;RP1=1, select bank3
 10324  06C3  085C               	movf	(main@RTC_Date^(0+384)+3),w
 10325  06C4  00FF               	movwf	btemp+1
 10326  06C5  087F               	movf	btemp+1,w
 10327  06C6  1283               	bcf	3,5	;RP0=0, select bank0
 10328  06C7  1303               	bcf	3,6	;RP1=0, select bank0
 10329  06C8  00DA               	movwf	_LCD_Time+4
 10330                           
 10331                           ;main.c: 786:                         LCD_Time[3] = RTC_Date.Minutes[0];
 10332  06C9  1683               	bsf	3,5	;RP0=1, select bank3
 10333  06CA  1703               	bsf	3,6	;RP1=1, select bank3
 10334  06CB  085B               	movf	(main@RTC_Date^(0+384)+2),w
 10335  06CC  00FF               	movwf	btemp+1
 10336  06CD  087F               	movf	btemp+1,w
 10337  06CE  1283               	bcf	3,5	;RP0=0, select bank0
 10338  06CF  1303               	bcf	3,6	;RP1=0, select bank0
 10339  06D0  00D9               	movwf	_LCD_Time+3
 10340                           
 10341                           ;main.c: 787:                         LCD_Time[1] = ' ';
 10342  06D1  3020               	movlw	32
 10343  06D2  00FF               	movwf	btemp+1
 10344  06D3  087F               	movf	btemp+1,w
 10345  06D4  00D7               	movwf	_LCD_Time+1
 10346                           
 10347                           ;main.c: 788:                         LCD_Time[0] = ' ';
 10348  06D5  3020               	movlw	32
 10349  06D6  00FF               	movwf	btemp+1
 10350  06D7  087F               	movf	btemp+1,w
 10351  06D8  00D6               	movwf	_LCD_Time
 10352  06D9                     l5180:
 10353                           
 10354                           ;main.c: 793:                 LCD_DisStrRC(LCD_Time, 1, 0);
 10355  06D9  3056               	movlw	(low (_LCD_Time| 0))& (0+255)
 10356  06DA  00A3               	movwf	LCD_DisStrRC@str
 10357  06DB  3000               	movlw	0
 10358  06DC  00A4               	movwf	LCD_DisStrRC@str+1
 10359  06DD  01A5               	clrf	LCD_DisStrRC@row
 10360  06DE  0AA5               	incf	LCD_DisStrRC@row,f
 10361  06DF  01A6               	clrf	LCD_DisStrRC@column
 10362  06E0  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
 10363                           
 10364                           ;main.c: 794:                 break;
 10365  06E5  2F12               	goto	u4081
 10366  06E6                     l512:	
 10367                           ;main.c: 796:             case(15):
 10368                           
 10369                           
 10370                           ;main.c: 797:                 TMR1ON = 1;
 10371  06E6  1410               	bsf	16,0	;volatile
 10372  06E7                     l5182:
 10373                           
 10374                           ;main.c: 798:                 if (Password_Waiting_Time == 50) {
 10375  06E7  3032               	movlw	50
 10376  06E8  0662               	xorwf	_Password_Waiting_Time,w
 10377  06E9  1D03               	btfss	3,2
 10378  06EA  2EEC               	goto	u4071
 10379  06EB  2EED               	goto	u4070
 10380  06EC                     u4071:
 10381  06EC  2EFB               	goto	l5190
 10382  06ED                     u4070:
 10383  06ED                     l5184:
 10384                           
 10385                           ;main.c: 800:                     New_Password_Offset = 0;
 10386  06ED  01E3               	clrf	_New_Password_Offset
 10387                           
 10388                           ;main.c: 801:                     Password_Waiting_Time = 0;
 10389  06EE  01E2               	clrf	_Password_Waiting_Time
 10390  06EF                     l5186:
 10391                           
 10392                           ;main.c: 802:                     LCD_SendCMD((0x01));
 10393  06EF  3001               	movlw	1
 10394  06F0  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
 10395  06F5                     l5188:
 10396                           
 10397                           ;main.c: 803:                     Screen_Status = 10;
 10398  06F5  300A               	movlw	10
 10399  06F6  00FF               	movwf	btemp+1
 10400  06F7  087F               	movf	btemp+1,w
 10401  06F8  1283               	bcf	3,5	;RP0=0, select bank0
 10402  06F9  1303               	bcf	3,6	;RP1=0, select bank0
 10403  06FA  00D1               	movwf	_Screen_Status
 10404  06FB                     l5190:
 10405                           
 10406                           ;main.c: 805:                 LCD_GotoRC(1, New_Password_Offset + 0);
 10407  06FB  0863               	movf	_New_Password_Offset,w
 10408  06FC  00FF               	movwf	btemp+1
 10409  06FD  087F               	movf	btemp+1,w
 10410  06FE  00F6               	movwf	LCD_GotoRC@column
 10411  06FF  3001               	movlw	1
 10412  0700  160A  118A  2013  120A  118A  	fcall	_LCD_GotoRC
 10413  0705                     l5192:
 10414                           
 10415                           ;main.c: 806:                 LCD_SendCMD((0x0F));
 10416  0705  300F               	movlw	15
 10417  0706  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
 10418  070B                     l5194:
 10419                           
 10420                           ;main.c: 808:                 if (New_Password_Offset == 4) {
 10421  070B  3004               	movlw	4
 10422  070C  1283               	bcf	3,5	;RP0=0, select bank0
 10423  070D  1303               	bcf	3,6	;RP1=0, select bank0
 10424  070E  0663               	xorwf	_New_Password_Offset,w
 10425  070F  1D03               	btfss	3,2
 10426  0710  2F12               	goto	u4081
 10427  0711  2F15               	goto	u4080
 10428  0712                     u4081:
 10429  0712  120A  158A  2D68   	goto	l367
 10430  0715                     u4080:
 10431  0715                     l5196:
 10432                           
 10433                           ;main.c: 809:                     LCD_SendCMD((0x0C));
 10434  0715  300C               	movlw	12
 10435  0716  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
 10436  071B                     l5198:
 10437                           
 10438                           ;main.c: 811:                     E2PROM_24C04_Write(0xA0, 0x05, Input_Password[0]);
 10439  071B  3005               	movlw	5
 10440  071C  00FF               	movwf	btemp+1
 10441  071D  087F               	movf	btemp+1,w
 10442  071E  00F4               	movwf	E2PROM_24C04_Write@word_Address
 10443  071F  1683               	bsf	3,5	;RP0=1, select bank1
 10444  0720  1303               	bcf	3,6	;RP1=0, select bank1
 10445  0721  0868               	movf	_Input_Password^(0+128),w
 10446  0722  00FF               	movwf	btemp+1
 10447  0723  087F               	movf	btemp+1,w
 10448  0724  00F5               	movwf	E2PROM_24C04_Write@Data
 10449  0725  30A0               	movlw	160
 10450  0726  160A  118A  2076  120A  118A  	fcall	_E2PROM_24C04_Write
 10451  072B                     l5200:
 10452                           
 10453                           ;main.c: 812:                     E2PROM_24C04_Write(0xA0, 0x06, Input_Password[1]);
 10454  072B  3006               	movlw	6
 10455  072C  00FF               	movwf	btemp+1
 10456  072D  087F               	movf	btemp+1,w
 10457  072E  00F4               	movwf	E2PROM_24C04_Write@word_Address
 10458  072F  1683               	bsf	3,5	;RP0=1, select bank1
 10459  0730  1303               	bcf	3,6	;RP1=0, select bank1
 10460  0731  0869               	movf	(_Input_Password^(0+128)+1),w
 10461  0732  00FF               	movwf	btemp+1
 10462  0733  087F               	movf	btemp+1,w
 10463  0734  00F5               	movwf	E2PROM_24C04_Write@Data
 10464  0735  30A0               	movlw	160
 10465  0736  160A  118A  2076  120A  118A  	fcall	_E2PROM_24C04_Write
 10466  073B                     l5202:
 10467                           
 10468                           ;main.c: 813:                     E2PROM_24C04_Write(0xA0, 0x07, Input_Password[2]);
 10469  073B  3007               	movlw	7
 10470  073C  00FF               	movwf	btemp+1
 10471  073D  087F               	movf	btemp+1,w
 10472  073E  00F4               	movwf	E2PROM_24C04_Write@word_Address
 10473  073F  1683               	bsf	3,5	;RP0=1, select bank1
 10474  0740  1303               	bcf	3,6	;RP1=0, select bank1
 10475  0741  086A               	movf	(_Input_Password^(0+128)+2),w
 10476  0742  00FF               	movwf	btemp+1
 10477  0743  087F               	movf	btemp+1,w
 10478  0744  00F5               	movwf	E2PROM_24C04_Write@Data
 10479  0745  30A0               	movlw	160
 10480  0746  160A  118A  2076  120A  118A  	fcall	_E2PROM_24C04_Write
 10481  074B                     l5204:
 10482                           
 10483                           ;main.c: 814:                     E2PROM_24C04_Write(0xA0, 0x08, Input_Password[3]);
 10484  074B  3008               	movlw	8
 10485  074C  00FF               	movwf	btemp+1
 10486  074D  087F               	movf	btemp+1,w
 10487  074E  00F4               	movwf	E2PROM_24C04_Write@word_Address
 10488  074F  1683               	bsf	3,5	;RP0=1, select bank1
 10489  0750  1303               	bcf	3,6	;RP1=0, select bank1
 10490  0751  086B               	movf	(_Input_Password^(0+128)+3),w
 10491  0752  00FF               	movwf	btemp+1
 10492  0753  087F               	movf	btemp+1,w
 10493  0754  00F5               	movwf	E2PROM_24C04_Write@Data
 10494  0755  30A0               	movlw	160
 10495  0756  160A  118A  2076  120A  118A  	fcall	_E2PROM_24C04_Write
 10496  075B                     l5206:
 10497                           
 10498                           ;main.c: 815:                     New_Password_Offset = 0;
 10499  075B  1283               	bcf	3,5	;RP0=0, select bank0
 10500  075C  1303               	bcf	3,6	;RP1=0, select bank0
 10501  075D  01E3               	clrf	_New_Password_Offset
 10502  075E                     l5208:
 10503                           
 10504                           ;main.c: 816:                     LCD_SendCMD((0x01));
 10505  075E  3001               	movlw	1
 10506  075F  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
 10507  0764                     l5210:
 10508                           
 10509                           ;main.c: 817:                     LCD_DisStrRC(&Passwordmsg[6], 0, 0);
 10510  0764  30BA               	movlw	(low ((_Passwordmsg| 0+6)))& (0+255)
 10511  0765  1283               	bcf	3,5	;RP0=0, select bank0
 10512  0766  1303               	bcf	3,6	;RP1=0, select bank0
 10513  0767  00A3               	movwf	LCD_DisStrRC@str
 10514  0768  3000               	movlw	0
 10515  0769  00A4               	movwf	LCD_DisStrRC@str+1
 10516  076A  01A5               	clrf	LCD_DisStrRC@row
 10517  076B  01A6               	clrf	LCD_DisStrRC@column
 10518  076C  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
 10519  0771                     l5212:
 10520                           
 10521                           ;main.c: 818:                     LCD_DisStrRC(passwordChangedSuccessfullymsg, 0, 9);
 10522  0771  30D0               	movlw	(low (_passwordChangedSuccessfullymsg| 0))& (0+255)
 10523  0772  1283               	bcf	3,5	;RP0=0, select bank0
 10524  0773  1303               	bcf	3,6	;RP1=0, select bank0
 10525  0774  00A3               	movwf	LCD_DisStrRC@str
 10526  0775  3000               	movlw	0
 10527  0776  00A4               	movwf	LCD_DisStrRC@str+1
 10528  0777  01A5               	clrf	LCD_DisStrRC@row
 10529  0778  3009               	movlw	9
 10530  0779  00FF               	movwf	btemp+1
 10531  077A  087F               	movf	btemp+1,w
 10532  077B  00A6               	movwf	LCD_DisStrRC@column
 10533  077C  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
 10534  0781                     l5214:
 10535                           
 10536                           ;main.c: 819:                     LCD_DisStrRC(Clear_Events_msg2, 1, 2);
 10537  0781  30C3               	movlw	(low (_Clear_Events_msg2| 0))& (0+255)
 10538  0782  1283               	bcf	3,5	;RP0=0, select bank0
 10539  0783  1303               	bcf	3,6	;RP1=0, select bank0
 10540  0784  00A3               	movwf	LCD_DisStrRC@str
 10541  0785  3000               	movlw	0
 10542  0786  00A4               	movwf	LCD_DisStrRC@str+1
 10543  0787  01A5               	clrf	LCD_DisStrRC@row
 10544  0788  0AA5               	incf	LCD_DisStrRC@row,f
 10545  0789  3002               	movlw	2
 10546  078A  00FF               	movwf	btemp+1
 10547  078B  087F               	movf	btemp+1,w
 10548  078C  00A6               	movwf	LCD_DisStrRC@column
 10549  078D  160A  118A  202B  120A  118A  	fcall	_LCD_DisStrRC
 10550  0792                     l5216:
 10551                           
 10552                           ;main.c: 820:                     _delay((unsigned long)((2000)*(8000000/4000.0)));
 10553  0792  3015               	movlw	21
 10554  0793  1283               	bcf	3,5	;RP0=0, select bank0
 10555  0794  1303               	bcf	3,6	;RP1=0, select bank0
 10556  0795  00B8               	movwf	??_main+2
 10557  0796  304B               	movlw	75
 10558  0797  00B7               	movwf	??_main+1
 10559  0798  30BD               	movlw	189
 10560  0799  00B6               	movwf	??_main
 10561  079A                     u4137:
 10562  079A  0BB6               	decfsz	??_main,f
 10563  079B  2F9A               	goto	u4137
 10564  079C  0BB7               	decfsz	??_main+1,f
 10565  079D  2F9A               	goto	u4137
 10566  079E  0BB8               	decfsz	??_main+2,f
 10567  079F  2F9A               	goto	u4137
 10568  07A0  2FA1               	nop2
 10569  07A1                     l5218:
 10570                           
 10571                           ;main.c: 821:                     LCD_SendCMD((0x01));
 10572  07A1  3001               	movlw	1
 10573  07A2  160A  118A  238B  120A  118A  	fcall	_LCD_SendCMD
 10574  07A7  2DA1               	goto	l5152
 10575  07A8                     l5224:
 10576  07A8  1283               	bcf	3,5	;RP0=0, select bank0
 10577  07A9  1303               	bcf	3,6	;RP1=0, select bank0
 10578  07AA  0851               	movf	_Screen_Status,w
 10579  07AB  00B6               	movwf	??_main
 10580  07AC  01B7               	clrf	??_main+1
 10581                           
 10582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10583                           ; Switch size 1, requested type "simple"
 10584                           ; Number of cases is 1, Range of values is 0 to 0
 10585                           ; switch strategies available:
 10586                           ; Name         Instructions Cycles
 10587                           ; simple_byte            4     3 (average)
 10588                           ; direct_byte           11     8 (fixed)
 10589                           ; jumptable            260     6 (fixed)
 10590                           ;	Chosen strategy is simple_byte
 10591  07AD  0837               	movf	??_main+1,w
 10592  07AE  3A00               	xorlw	0	; case 0
 10593  07AF  1903               	skipnz
 10594  07B0  2FB2               	goto	l5300
 10595  07B1  2F12               	goto	u4081
 10596  07B2                     l5300:
 10597                           
 10598                           ; Switch size 1, requested type "simple"
 10599                           ; Number of cases is 9, Range of values is 8 to 30
 10600                           ; switch strategies available:
 10601                           ; Name         Instructions Cycles
 10602                           ; simple_byte           28    15 (average)
 10603                           ; direct_byte           80    11 (fixed)
 10604                           ; jumptable            263     9 (fixed)
 10605                           ;	Chosen strategy is simple_byte
 10606  07B2  0836               	movf	??_main,w
 10607  07B3  3A08               	xorlw	8	; case 8
 10608  07B4  1903               	skipnz
 10609  07B5  2FD2               	goto	L2
 10610  07B6  3A01               	xorlw	1	; case 9
 10611  07B7  1903               	skipnz
 10612  07B8  285E               	goto	l475
 10613  07B9  3A03               	xorlw	3	; case 10
 10614  07BA  1903               	skipnz
 10615  07BB  2945               	goto	l484
 10616  07BC  3A01               	xorlw	1	; case 11
 10617  07BD  1903               	skipnz
 10618  07BE  29B5               	goto	l487
 10619  07BF  3A07               	xorlw	7	; case 12
 10620  07C0  1903               	skipnz
 10621  07C1  2AE6               	goto	l5040
 10622  07C2  3A01               	xorlw	1	; case 13
 10623  07C3  1903               	skipnz
 10624  07C4  2B3A               	goto	l5058
 10625  07C5  3A03               	xorlw	3	; case 14
 10626  07C6  1903               	skipnz
 10627  07C7  2DA8               	goto	l500
 10628  07C8  3A01               	xorlw	1	; case 15
 10629  07C9  1903               	skipnz
 10630  07CA  2EE6               	goto	l512
 10631  07CB  3A11               	xorlw	17	; case 30
 10632  07CC  1903               	skipnz
 10633  07CD  28E1               	goto	l4976
 10634  07CE  2F12               	goto	u4081
 10635  07CF  120A  118A  2810   	ljmp	start
 10636  07D2                     L2:
 10637  07D2                     __end_of_main:
 10638  07D2  160A  118A  2DF5   	ljmp	l473

Data Sizes:
    Strings     0
    Constant    0
    Data        256
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     49      68
    BANK1            80      0      79
    BANK3            96     14      87
    BANK2            96      0      95

Pointer List with Targets:

    RTC_DS1307_Get_Date@Date_Structure.DOW_String	PTR unsigned char  size(1) Largest target is 24
		 -> DOW_To_String(BANK3[24]), 

    RTC_DS1307_Get_Date@Date_Structure	PTR struct . size(1) Largest target is 15
		 -> main@RTC_Date(BANK3[14]), 

    sp__RTC_DS1307_DOW_To_String	PTR unsigned char  size(1) Largest target is 24
		 -> DOW_To_String(BANK3[24]), 

    RTC_Date.DOW_String	PTR unsigned char  size(1) Largest target is 24
		 -> DOW_To_String(BANK3[24]), 

    UART_WriteStr@String	PTR unsigned char  size(1) Largest target is 30
		 -> Events_Strings(BANK2[30]), 

    Save_Event_to_24c04@Speed	PTR unsigned char  size(1) Largest target is 5
		 -> main@Adc_Str(BANK0[5]), 

    S252$DOW_String	PTR unsigned char  size(1) Largest target is 24
		 -> DOW_To_String(BANK3[24]), 

    RTC_Date.DOW_String	PTR unsigned char  size(1) Largest target is 24
		 -> DOW_To_String(BANK3[24]), 

    LCD_DisStrRC@str	PTR unsigned char  size(2) Largest target is 65
		 -> passwordChangedSuccessfullymsg(BANK1[8]), Clear_Events_msg2(BANK1[13]), Clear_Events_msg1(BANK3[16]), LCD_NoLogsmsg(BANK1[3]), 
		 -> LCD_Logsmsg(BANK1[5]), Main_Menu(BANK2[65]), Blocked_Sreen_Line1_msg(BANK3[16]), Blocked_Sreen_Line2_msg(BANK1[15]), 
		 -> Password_Trails_msg(BANK3[17]), LCD_Time(BANK0[9]), LCD_Speedmsg(BANK1[3]), LCD_Eventmsg(BANK0[2]), 
		 -> LCD_Timemsg(BANK1[5]), Passwordmsg(BANK1[15]), main@Adc_Str(BANK0[5]), Events_Strings(BANK2[30]), 

    LCD_2DigitIntToStr@str	PTR unsigned char  size(1) Largest target is 5
		 -> main@Adc_Str(BANK0[5]), 

    LCD_DisStr@str	PTR unsigned char  size(2) Largest target is 65
		 -> passwordChangedSuccessfullymsg(BANK1[8]), Clear_Events_msg2(BANK1[13]), Clear_Events_msg1(BANK3[16]), LCD_NoLogsmsg(BANK1[3]), 
		 -> LCD_Logsmsg(BANK1[5]), Main_Menu(BANK2[65]), Blocked_Sreen_Line1_msg(BANK3[16]), Blocked_Sreen_Line2_msg(BANK1[15]), 
		 -> Password_Trails_msg(BANK3[17]), LCD_Time(BANK0[9]), LCD_Speedmsg(BANK1[3]), LCD_Eventmsg(BANK0[2]), 
		 -> LCD_Timemsg(BANK1[5]), Passwordmsg(BANK1[15]), main@Adc_Str(BANK0[5]), Events_Strings(BANK2[30]), 


Critical Paths under _main in COMMON

    _main->_Clear_Events
    _main->_LCD_2DigitIntToStr
    _main->_LCD_GotoRC
    _main->_UART_Send_Current_Event
    _main->___lmul
    ___lldiv->___lmul
    _UART_Send_Current_Event->_UART_WriteStr
    _UART_WriteStr->_UART_Write
    _Save_Event_to_24c04->_E2PROM_24C04_Write
    _RTC_DS1307_Write->_I2C_Write
    _RTC_DS1307_Get_Date->_RTC_DS1307_DOW_To_String
    _RTC_DS1307_Read->_I2C_Read
    _RTC_DS1307_Read->_I2C_Write
    _RTC_DS1307_DOW_To_String->___bmul
    _LCD_Init->_LCD_SendCMD
    _LCD_DisStrRC->_LCD_DisStr
    _LCD_DisStrRC->_LCD_GotoRC
    _LCD_GotoRC->_LCD_SendCMD
    _LCD_DisStr->_LCD_DisChar
    _LCD_2DigitIntToStr->___awdiv
    _LCD_2DigitIntToStr->___awmod
    _Clear_Events->_E2PROM_24C04_Write
    _E2PROM_24C04_Write->_I2C_Write
    _Check_Password->_E2PROM_24C04_Read
    _E2PROM_24C04_Read->_I2C_Read
    _E2PROM_24C04_Read->_I2C_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul
    _LCD_Display_Current_Event->_LCD_DisStrRC
    _LCD_DisStrRC->_LCD_DisStr
    _LCD_2DigitIntToStr->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   55651
                                             22 BANK0     27    27      0
                                              0 BANK3     14    14      0
                           _Adc_Init
                           _Adc_Read
                        _Button_Init
                        _Button_Read
                     _Check_Password
                       _Clear_Events
                           _Dio_Init
                  _E2PROM_24C04_Init
                  _E2PROM_24C04_Read
                 _E2PROM_24C04_Write
                 _LCD_2DigitIntToStr
                        _LCD_DisChar
                       _LCD_DisStrRC
          _LCD_Display_Current_Event
                         _LCD_GotoRC
                           _LCD_Init
                        _LCD_SendCMD
                _RTC_DS1307_Get_Date
                    _RTC_DS1307_Init
                    _RTC_DS1307_Read
                   _RTC_DS1307_Write
                _Save_Event_to_24c04
            _UART_Send_Current_Event
                       _UART_TX_Init
                         _UART_Write
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     856
                                              3 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     961
                                              8 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Send_Current_Event                              1     1      0     574
                                              7 COMMON     1     1      0
                      _UART_WriteStr
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_WriteStr                                        3     3      0     197
                                              4 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Save_Event_to_24c04                                 17     0     17    6277
                                              0 BANK0     17     0     17
                 _E2PROM_24C04_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_DS1307_Write                                     2     1      1     453
                                              4 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_DS1307_Init                                      0     0      0       0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _RTC_DS1307_Get_Date                                  9     9      0    2046
                                              0 BANK0      9     9      0
      _RTC_DS1307_BCD_To_Decimal_LSB
      _RTC_DS1307_BCD_To_Decimal_MSB
           _RTC_DS1307_DOW_To_String
                    _RTC_DS1307_Read
 ---------------------------------------------------------------------------------
 (1) _RTC_DS1307_Read                                      2     2      0     198
                                              4 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_DS1307_DOW_To_String                             1     1      0     377
                                              6 COMMON     1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _RTC_DS1307_BCD_To_Decimal_MSB                        3     3      0      65
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RTC_DS1307_BCD_To_Decimal_LSB                        2     2      0      65
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      62
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Display_Current_Event                            1     1      0    8208
                                              7 BANK0      1     1      0
                       _LCD_DisStrRC
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               3     2      1     346
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_DisStrRC                                         4     0      4    7831
                                              3 BANK0      4     0      4
                         _LCD_DisStr
                         _LCD_GotoRC
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_GotoRC                                           2     1      1     906
                                              6 COMMON     2     1      1
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SendCMD                                          3     3      0      62
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _LCD_DisStr                                           5     3      2     232
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _LCD_DisChar
 ---------------------------------------------------------------------------------
 (4) _LCD_DisChar                                          3     3      0      62
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_2DigitIntToStr                                   2     1      1    4037
                                              7 COMMON     1     1      0
                                              4 BANK0      1     0      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     973
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2425
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _E2PROM_24C04_Init                                    0     0      0       0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clear_Events                                         1     1      0    4726
                                              7 COMMON     1     1      0
                 _E2PROM_24C04_Write
 ---------------------------------------------------------------------------------
 (2) _E2PROM_24C04_Write                                   3     1      2    4624
                                              4 COMMON     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Check_Password                                       2     2      0    2531
                                              0 BANK0      2     2      0
                  _E2PROM_24C04_Read
 ---------------------------------------------------------------------------------
 (1) _E2PROM_24C04_Read                                    3     2      1    2330
                                              4 COMMON     3     2      1
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      31
                                              3 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             1     1      0      34
                                              3 COMMON     1     1      0
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Button_Read                                          3     3      0      62
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          0     0      0       0
                           _Dio_Init
 ---------------------------------------------------------------------------------
 (1) _Dio_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc_Read                                             4     2      2      34
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Adc_Init                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_Init
   _Adc_Read
   _Button_Init
     _Dio_Init
   _Button_Read
   _Check_Password
     _E2PROM_24C04_Read
       _I2C_Read
         _I2C_NACK
           _I2C_Wait
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
   _Clear_Events
     _E2PROM_24C04_Write
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
   _Dio_Init
   _E2PROM_24C04_Init
     _I2C_Master_Init
   _E2PROM_24C04_Read
     _I2C_Read
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _E2PROM_24C04_Write
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _LCD_2DigitIntToStr
     ___awdiv
     ___awmod
   _LCD_DisChar
   _LCD_DisStrRC
     _LCD_DisStr
       _LCD_DisChar
     _LCD_GotoRC
       _LCD_SendCMD
     ___bmul (ARG)
   _LCD_Display_Current_Event
     _LCD_DisStrRC
       _LCD_DisStr
         _LCD_DisChar
       _LCD_GotoRC
         _LCD_SendCMD
       ___bmul (ARG)
     ___bmul
   _LCD_GotoRC
     _LCD_SendCMD
   _LCD_Init
     _LCD_SendCMD
   _LCD_SendCMD
   _RTC_DS1307_Get_Date
     _RTC_DS1307_BCD_To_Decimal_LSB
     _RTC_DS1307_BCD_To_Decimal_MSB
     _RTC_DS1307_DOW_To_String
       ___bmul
     _RTC_DS1307_Read
       _I2C_Read
         _I2C_NACK
           _I2C_Wait
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
   _RTC_DS1307_Init
     _I2C_Master_Init
   _RTC_DS1307_Read
     _I2C_Read
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _RTC_DS1307_Write
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _Save_Event_to_24c04
     _E2PROM_24C04_Write
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
   _UART_Send_Current_Event
     _UART_WriteStr
       _UART_Write
     ___bmul
   _UART_TX_Init
   _UART_Write
   ___awdiv
   ___awmod
   ___bmul
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      E      57       9       90.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      5F      11       99.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     154      12        0.0%
ABS                  0      0     154       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 18 07:28:36 2020

                                    ?_LCD_DisStr 0076                                     ?_LCD_DisChar 0070  
                                              pc 0002                                      ?_LCD_GotoRC 0076  
                                 ___bmul@product 0074                               __size_of_I2C_Start 0009  
                             __size_of_I2C_Write 0010                                               l20 1FB5  
                                             l23 1FBE                                               l32 1F25  
                                             l17 1F5A                                               l60 1FD2  
                                             l37 1FFF                                               l73 1EF7  
                                             l76 1093                                               l79 11DD  
                                   ___awdiv@sign 0021                                               fsr 0004  
                                  ?_LCD_DisStrRC 0023                                     ?_LCD_SendCMD 0070  
                               ??_Check_Password 0077                                              l111 1F26  
                                            l120 1F0F                                              l114 1F32  
                                            l123 080B                                              l108 1F3F  
                                            l117 1F06                                              l126 1F79  
                                            l152 138A                                              l129 1075  
                                            l314 07F3                                              l146 10B1  
                                            l410 0A8C                                              l323 11A7  
                                            l163 152A                                              l171 1042  
                                            l500 05A8                                              l149 13ED  
                                            l342 105B                                              l158 1175  
                                            l351 07FF                                              l168 102A  
                                            l360 1FAB                                              l512 06E6  
                                            l337 15CA                                              l345 1F69  
                                            l532 1EFD                                              l348 07F5  
                                            l444 15F4                                              l541 1F89  
                                            l357 10ED                                              l365 0D1C  
                                            l535 10CF                                              l471 15DE  
                                            l367 0D68                                              l544 1F18  
                                            l552 17FF                                              l473 15F5  
                                            l538 1119                                              l482 00F8  
                                            l547 1F4C                                              l475 005E  
                                            l804 12C8                                              l652 1225  
                                            l484 0145                                              l487 01B5  
                                            l664 1FE7                                              l674 1455  
                                            l791 14BE                                              _GIE 005F  
                                            _RB0 0030                                              _RB1 0031  
                                            _RB2 0032                                              _RB3 0033  
                                            _RB4 0034                                              _RE1 0049  
                                            _RE2 004A                                              _PEN 048A  
                          ??_Save_Event_to_24c04 0077                                              _ISR 111A  
                                            _SEN 0488                                              fsr0 0004  
                                            indf 0000                                     ___awmod@sign 0021  
              RTC_DS1307_Get_Date@Date_Structure 0020                                             ?_ISR 0070  
                                           l4000 1F07                                             l4010 106F  
                                           l4002 1F0C                                             l4012 1074  
                                           l4004 105C                                             l4020 115E  
                                           l4100 10D3                                             l4006 1061  
                                           l4022 1164                                             l4110 10F4  
                                           l4030 07F5                                             l4102 10DE  
                                           l4008 1069                                             l4200 128B  
                                           l4016 1148                                             l4024 1014  
                                           l4040 1FDD                                             l4120 1113  
                                           l4112 10FA                                             l4032 07FB  
                                           l4104 10E2                                             l5000 01BC  
                                           l4050 1FBF                                             l4210 12A7  
                                           l4202 128E                                             l4018 114C  
                                           l4026 1019                                             l4042 1FDF  
                                           l4034 1FD4                                             l4122 1118  
                                           l4114 1100                                             l4106 10EF  
                                           l5010 021C                                             l5002 01C9  
                                           l4060 1FD1                                             l4052 1FCB  
                                           l4220 12C4                                             l4212 12AD  
                                           l4204 1295                                             l4028 1022  
                                           l4044 1FE1                                             l4036 1FD5  
                                           l4132 1F11                                             l4116 1105  
                                           l4108 10F4                                             l5100 04B4  
                                           l5020 0261                                             l5012 0230  
                                           l5004 01D0                                             l4230 1FBA  
                                           l4054 1FCE                                             l4302 1194  
                                           l4070 1F3E                                             l4062 1F33  
                                           l4150 1464                                             l4142 1456  
                                           l4214 12B4                                             l4206 1299  
                                           l4046 1FE6                                             l4038 1FD9  
                                           l4134 1F17                                             l4126 1F7B  
                                           l4118 110B                                             l5110 04E2  
                                           l5102 04BC                                             l5030 02A3  
                                           l5022 0271                                             l5014 0237  
                                           l5006 01E8                                             l4224 1F4D  
                                           l4056 1FCF                                             l4240 1F22  
                                           l4080 11B9                                             l4304 1198  
                                           l4072 1077                                             l4064 1F37  
                                           l4160 1479                                             l4152 1468  
                                           l4144 1459                                             l4208 129D  
                                           l4216 12BA                                             l4128 1F88  
                                           l4400 17B4                                             l4320 1553  
                                           l5200 072B                                             l5112 04F2  
                                           l5104 04C2                                             l5120 050C  
                                           l5040 02E6                                             l5032 02B3  
                                           l5024 0272                                             l5016 0249  
                                           l5008 01ED                                             l4226 1FAC  
                                           l4058 1FD0                                             l4242 1F23  
                                           l4234 1F19                                             l4250 1FF7  
                                           l4090 11DC                                             l4082 11BF  
                                           l4074 11A9                                             l4314 11A6  
                                           l4306 119E                                             l4066 1F3A  
                                           l4170 149C                                             l4162 147C  
                                           l4154 146D                                             l4146 145D  
                                           l4218 12BF                                             l4138 1F41  
                                           l4402 17C3                                             l4330 15A8  
                                           l4322 1564                                             l4410 11DE  
                                           l5210 0764                                             l5202 073B  
                                           l5130 0548                                             l5114 04F8  
                                           l5106 04CA                                             l5122 0529  
                                           l5050 030E                                             l5042 02E7  
                                           l5034 02C3                                             l5026 0281  
                                           l5018 024F                                             l4228 1FAF  
                                           l4244 1F24                                             l4236 1F1E  
                                           l4252 1FFC                                             l4084 11C9  
                                           l4076 11AE                                             l4308 11A4  
                                           l4340 1045                                             l4068 1F3D  
                                           l4260 1EF2                                             l4180 14B5  
                                           l4172 14A2                                             l4164 1483  
                                           l4156 1471                                             l4148 1462  
                                           l4404 17D2                                             l4332 15B9  
                                           l4324 1575                                             l4420 121D  
                                           l4412 11E6                                             l5300 07B2  
                                           l5212 0771                                             l5204 074B  
                                           l5140 0566                                             l5132 054E  
                                           l5124 052F                                             l5116 0500  
                                           l5108 04D0                                             l5060 035D  
                                           l5052 031F                                             l5044 02F3  
                                           l5036 02D3                                             l5028 0293  
                                           l4500 0D27                                             l4238 1F21  
                                           l4246 1FE9                                             l4086 11CF  
                                           l4078 11B3                                             l4342 1051  
                                           l4334 1043                                             l4182 14BA  
                                           l4174 14A3                                             l4166 1487  
                                           l4158 1473                                             l4190 1275  
                                           l4094 102B                                             l4270 109F  
                                           l4262 1094                                             l4406 17E1  
                                           l4326 1586                                             l4318 152B  
                                           l4350 1F60                                             l4430 140C  
                                           l4414 11EC                                             l5214 0781  
                                           l5206 075B                                             l5150 059B  
                                           l5142 056C                                             l5134 0554  
                                           l5126 053C                                             l5118 0506  
                                           l5070 0403                                             l5062 03E2  
                                           l5054 032D                                             l5046 02FB  
                                           l4510 0D5B                                             l4502 0D2B  
                                           l4248 1FEE                                             l4256 1FFE  
                                           l4088 11D7                                             l4344 1055  
                                           l4176 14AA                                             l4168 148B  
                                           l4192 127A                                             l4280 14DD  
                                           l4096 1037                                             l4272 10A5  
                                           l4264 1097                                             l4408 17F0  
                                           l4328 1597                                             l4360 1F9B  
                                           l4352 1F61                                             l4440 143D  
                                           l4432 1410                                             l4424 13EE  
                                           l4416 1203                                             l5216 0792  
                                           l5208 075E                                             l5160 0616  
                                           l5152 05A1                                             l5144 0572  
                                           l5136 055A                                             l5128 0542  
                                           l5080 0452                                             l5072 041A  
                                           l5064 03E6                                             l5056 0333  
                                           l5048 0301                                             l5224 07A8  
                                           l4600 098F                                             l4520 0D99  
                                           l4504 0D35                                             l4178 14B0  
                                           l4194 127C                                             l4186 126E  
                                           l4282 14F6                                             l4274 10AB  
                                           l4266 1098                                             l4370 1702  
                                           l4362 1EF8                                             l4098 10D1  
                                           l4354 1F64                                             l4346 1F5B  
                                           l4442 143E                                             l4434 1414  
                                           l4426 1400                                             l4418 120C  
                                           l5218 07A1                                             l5170 067C  
                                           l5162 0647                                             l5154 05A9  
                                           l5146 0578                                             l5138 0560  
                                           l5090 0490                                             l5082 0462  
                                           l5074 0420                                             l5066 03F8  
                                           l5058 033A                                             l4610 09BA  
                                           l4530 0E0E                                             l4522 0DCF  
                                           l4514 0D77                                             l4506 0D44  
                                           l4450 0C82                                             l4196 1280  
                                           l4188 1271                                             l4284 1526  
                                           l4276 14C0                                             l4268 1099  
                                           l4380 172C                                             l4372 1709  
                                           l4364 10B3                                             l4356 1F67  
                                           l4348 1F5E                                             l4444 1447  
                                           l4436 141D                                             l4428 1403  
                                           l5172 06A5                                             l5180 06D9  
                                           l5164 0670                                             l5156 060A  
                                           l5148 058C                                             l5092 0496  
                                           l5084 0472                                             l5076 0432  
                                           l5068 03FD                                             l4700 0AEB  
                                           l4620 09E0                                             l4604 0997  
                                           l4612 09C1                                             l4540 0E4B  
                                           l4532 0E2B                                             l4524 0DD9  
                                           l4516 0D86                                             l4508 0D4D  
                                           l4460 0C8E                                             l4452 0C85  
                                           l4294 117A                                             l4198 1285  
                                           l4278 14D4                                             l4286 07D8  
                                           l4390 1769                                             l4382 1737  
                                           l4374 170E                                             l4366 16DD  
                                           l4358 1F68                                             l4438 142F  
                                           l4446 144D                                             l5190 06FB  
                                           l5182 06E7                                             l5174 06AB  
                                           l5166 0676                                             l5158 0611  
                                           l5094 049E                                             l5086 0482  
                                           l5078 0442                                             l4702 0AF1  
                                           l4710 0B04                                             l4630 09F5  
                                           l4622 09E4                                             l4606 09A6  
                                           l4550 0E77                                             l4542 0E5A  
                                           l4534 0E2E                                             l4526 0DDF  
                                           l4518 0D8C                                             l4470 0C9F  
                                           l4462 0C8F                                             l4454 0C89  
                                           l4296 118A                                             l4288 1176  
                                           l4392 1778                                             l4384 1742  
                                           l4376 1712                                             l4368 16FE  
                                           l5192 0705                                             l5184 06ED  
                                           l5096 04A6                                             l5088 0488  
                                           l4800 0C53                                             l4720 0B1E  
                                           l4712 0B0A                                             l4704 0AF5  
                                           l4640 0A21                                             l4632 09FD  
                                           l4624 09EA                                             l4616 09C7  
                                           l4608 09AC                                             l4560 0EEC  
                                           l4552 0EAD                                             l4544 0E60  
                                           l4528 0E08                                             l4536 0E3C  
                                           l4480 0CB9                                             l4472 0CA4  
                                           l4464 0C90                                             l4456 0C8B  
                                           l3930 0807                                             l4394 1787  
                                           l4386 174D                                             l4378 171D  
                                           l5194 070B                                             l5186 06EF  
                                           l5178 06B1                                             l5098 04AC  
                                           l4810 0855                                             l4802 0C62  
                                           l4730 0B3C                                             l4722 0B24  
                                           l4714 0B10                                             l4706 0AF9  
                                           l4650 0A3A                                             l4642 0A25  
                                           l4634 0A0A                                             l4618 09D6  
                                           l4626 09EE                                             l4570 0F29  
                                           l4562 0F09                                             l4554 0EB7  
                                           l4546 0E66                                             l4490 0CC0  
                                           l4482 0CBA                                             l4474 0CA9  
                                           l4466 0C95                                             l4458 0C8D  
                                           l3924 1F26                                             l3932 080A  
                                           l3940 13A4                                             l4396 1796  
                                           l4388 175B                                             l5196 0715  
                                           l5188 06F5                                             l4900 15D4  
                                           l4820 0880                                             l4804 0C68  
                                           l4732 0B40                                             l4716 0B16  
                                           l4708 0AFF                                             l4724 0B28  
                                           l4740 0B5B                                             l4660 0A58  
                                           l4652 0A40                                             l4636 0A15  
                                           l4644 0A27                                             l4580 0F88  
                                           l4572 0F38                                             l4564 0F0C  
                                           l4556 0EBD                                             l4548 0E6A  
                                           l4492 0CC3                                             l4484 0CBB  
                                           l4476 0CAE                                             l4468 0C9A  
                                           l3926 1F2C                                             l3950 13C1  
                                           l3942 13A9                                             l3934 138C  
                                           l4398 17A5                                             l5198 071B  
                                           l4910 15FC                                             l4902 15D9  
                                           l4830 08A8                                             l4814 085D  
                                           l4822 0889                                             l4806 0C6B  
                                           l4750 0BBB                                             l4742 0B71  
                                           l4734 0B44                                             l4726 0B30  
                                           l4718 0B1A                                             l4670 0A85  
                                           l4662 0A67                                             l4654 0A4D  
                                           l4646 0A2D                                             l4638 0A1B  
                                           l4590 0FE4                                             l4582 0F92  
                                           l4574 0F41                                             l4558 0EE6  
                                           l4566 0F1A                                             l4494 0CC4  
                                           l4486 0CBC                                             l4478 0CB3  
                                           l3928 0802                                             l3960 1329  
                                           l3952 13CA                                             l3944 13B2  
                                           l3936 138F                                             l4920 1641  
                                           l4912 160C                                             l4840 08C2  
                                           l4832 08AC                                             l4816 086C  
                                           l4760 0BDA                                             l4752 0BC1  
                                           l4744 0B7B                                             l4736 0B4C  
                                           l4728 0B36                                             l4680 0AAC  
                                           l4664 0A6E                                             l4672 0A8D  
                                           l4648 0A34                                             l4656 0A52  
                                           l4808 0C6F                                             l4592 0FE7  
                                           l4584 0F98                                             l4576 0F45  
                                           l4496 0CC5                                             l4488 0CBD  
                                           l3970 134F                                             l3962 132C  
                                           l3954 13D8                                             l3946 13B5  
                                           l3938 1398                                             l4930 16A0  
                                           l4922 1677                                             l4914 161C  
                                           l5298 15E9                                             l4906 15E1  
                                           l4850 08EF                                             l4842 08CF  
                                           l4826 088F                                             l4834 08B3  
                                           l4818 0872                                             l4770 0BF8  
                                           l4762 0BE0                                             l4754 0BC8  
                                           l4746 0B9B                                             l4738 0B52  
                                           l4690 0AC0                                             l4682 0AB0  
                                           l4666 0A72                                             l4586 0FC1  
                                           l4578 0F52                                             l4594 0FF5  
                                           l4498 0CD1                                             l3980 1375  
                                           l3972 1352                                             l3964 1335  
                                           l3956 13E1                                             l3948 13BE  
                                           l4940 16C8                                             l4932 16A8  
                                           l4924 1681                                             l4916 162C  
                                           l4908 15F6                                             l4844 08DA  
                                           l4852 08F4                                             l4828 089E  
                                           l4780 0C17                                             l4772 0BFE  
                                           l4764 0BE6                                             l4756 0BCE  
                                           l4748 0BB1                                             l4692 0AC8  
                                           l4676 0A93                                             l4668 0A82  
                                           l4596 097C                                             l4588 0FC7  
                                           l3990 1F6B                                             l3982 137E  
                                           l3974 135B                                             l3966 1341  
                                           l3958 13E4                                             l4950 007C  
                                           l4942 005F                                             l4934 16B0  
                                           l4926 1692                                             l4918 1634  
                                           l4870 0934                                             l4862 0910  
                                           l4854 0900                                             l4846 08E0  
                                           l4838 08BA                                             l4790 0C35  
                                           l4782 0C1D                                             l4774 0C04  
                                           l4766 0BEC                                             l4758 0BD4  
                                           l4694 0AD5                                             l4678 0AA2  
                                           l4686 0AB7                                             l4598 0980  
                                           l3992 1F70                                             l3984 1381  
                                           l3976 135E                                             l3968 1346  
                                           l4960 00A9                                             l4952 0080  
                                           l4944 0065                                             l4936 16B8  
                                           l4928 1698                                             l4872 0938  
                                           l4864 0918                                             l4856 0906  
                                           l4848 08E6                                             l4792 0C3B  
                                           l4784 0C23                                             l4776 0C0A  
                                           l4768 0BF2                                             l4696 0AE0  
                                           l3986 1EFE                                             l3994 1F74  
                                           l3978 1367                                             l4970 00C9  
                                           l4954 0087                                             l4962 00B7  
                                           l4946 006F                                             l4938 16C0  
                                           l4890 096E                                             l4874 0939  
                                           l4866 0925                                             l4882 094D  
                                           l4858 0909                                             l4794 0C41  
                                           l4786 0C29                                             l4778 0C11  
                                           l4698 0AE5                                             l3988 1F03  
                                           l3996 1F79                                             l4980 00EE  
                                           l4972 00CF                                             l4956 0095  
                                           l4948 0075                                             l4964 00BB  
                                           l4892 0972                                             l4868 0930  
                                           l4876 0940                                             l4796 0C47  
                                           l4788 0C2F                                             l4990 0146  
                                           l4982 00F6                                             l4974 00DA  
                                           l4966 00C1                                             l4958 00A3  
                                           l4894 0978                                             l4886 0955  
                                           l4878 0946                                             l4798 0C4D  
                                           l4992 0159                                             l4984 00F9  
                                           l4976 00E1                                             l4968 00C3  
                                           l4888 0964                                             l4896 15CB  
                                           l4994 0162                                             l4986 0129  
                                           l4978 00E7                                             l4996 019A  
                                           l4988 0136                                             l4998 01B6  
                                           _BRGH 04C2                                             u3000 129D  
                                           u3001 129C                                             u3010 12A7  
                                           u3011 12A6                                             u3100 119E  
                                           u3101 119D                                             u3110 11A4  
                                           u3030 12BA                                             u3111 11A3  
                                           u3031 12B9                                             u3015 12A3  
                                           u3120 105B                                             u3040 12BF  
                                           u4000 0529                                             u3121 105A  
                                           u3041 12BE                                             u3025 12AE  
                                           u4001 0528                                             u3050 1FBA  
                                           u3130 1702                                             u3210 1414  
                                           u4010 0611                                             u3051 1FB9  
                                           u3131 1701                                             u3211 1413  
                                           u4011 0610                                             u3060 1FEE  
                                           u3140 11EC                                             u4020 0616  
                                           u3300 0DE9                                             u3061 1FED  
                                           u3205 1405                                             u3141 11EB  
                                           u4021 0615                                             u4005 0525  
                                           u3070 1FFC                                             u3230 142F  
                                           u4030 0676                                             u3310 0E2B  
                                           u3071 1FFB                                             u3231 142E  
                                           u3151 11F5                                             u4031 0675  
                                           u3311 0E2A                                             u3080 14D4  
                                           u3152 11FC                                             u4040 067B  
                                           u3400 0FA2                                             u3320 0E4B  
                                           u3081 14D3                                             u3225 1416  
                                           u3153 1203                                             u4041 067A  
                                           u3321 0E4A                                             u3090 1194  
                                           u3250 144D                                             u4050 06AB  
                                           u3410 0FE4                                             u3330 0E5A  
                                           u3091 1193                                             u3251 144C  
                                           u3235 142B                                             u4051 06AA  
                                           u4107 009D                                             u3411 0FE3  
                                           u3331 0E59                                             u3315 0E27  
                                           u3180 121D                                             u4060 06B0  
                                           u3500 0A15                                             u3420 097C  
                                           u3340 0E66                                             u3260 0CD1  
                                           u3245 143F                                             u3181 121C  
                                           u3165 1205                                             u4061 06AF  
                                           u4117 0327                                             u3501 0A14  
                                           u3421 0FFD                                             u3341 0E65  
                                           u3261 0CD0                                             u3190 1400  
                                           u4070 06ED                                             u3510 0A25  
                                           u3430 098F                                             u3350 0EC7  
                                           u3270 0D44                                             u4207 13E8  
                                           u3191 13FF                                             u3175 120D  
                                           u4071 06EC                                             u4127 0594  
                                           u3511 0A24                                             u3431 098C  
                                           u3415 0FE0                                             u3271 0D43  
                                           u2800 1019                                             u4080 0715  
                                           u3600 0AD5                                             u3520 0A3A  
                                           u3440 0997                                             u3360 0F09  
                                           u3280 0D77                                             u4217 1330  
                                           u2801 1018                                             u4137 079A  
                                           u4081 0712                                             u3601 0AD4  
                                           u3521 0A39                                             u3441 0996  
                                           u3361 0F08                                             u3281 0D76  
                                           u2810 07FB                                             u3610 0AE0  
                                           u3530 0A58                                             u3450 09A6  
                                           u3370 0F29                                             u3290 0D86  
                                           u4227 133C                                             u4147 1393  
                                           u2811 07FA                                             u3611 0ADF  
                                           u3531 0A57                                             u3451 09A5  
                                           u3371 0F28                                             u3291 0D85  
                                           u2900 148B                                             u2820 1FD9  
                                           u3700 0B4C                                             u3620 0AE5  
                                           u3540 0A67                                             u3460 09C7  
                                           u3380 0F38                                             u2901 148A  
                                           u4237 134A                                             u4157 139F  
                                           u2821 1FD8                                             u3701 0B49  
                                           u3621 0AE4                                             u3541 0A66  
                                           u3461 09C6                                             u3381 0F37  
                                           u3365 0F05                                             u2750 1F2C  
                                           u2830 1FE6                                             u3710 0B52  
                                           u3630 0AF1                                             u3550 0A6E  
                                           u3470 09D6                                             u3390 0F41  
                                           u2751 1F2B                                             u4247 1356  
                                           u4167 13AD                                             u2831 1FE5  
                                           u3711 0B51                                             u3631 0AF0  
                                           u3551 0A6D                                             u3471 09D5  
                                           u3391 0F40                                             u2760 1F32  
                                           u2920 149C                                             u2840 10ED  
                                           u3800 08B9                                             u3640 0AFF  
                                           u3560 0A82                                             u3480 09F4  
                                           u2761 1F31                                             u2921 149B  
                                           u4257 1362                                             u4177 13B9  
                                           u2841 10EC                                             u3801 08B8  
                                           u4097 0C5B                                             u3641 0AFE  
                                           u3561 0A81                                             u3481 09F3  
                                           u3810 08CF                                             u3650 0B0A  
                                           u3570 0A93                                             u3490 0A0A  
                                           u2915 148C                                             u4267 1379  
                                           u4187 13C5                                             u3811 08CE  
                                           u3651 0B09                                             u3571 0A92  
                                           u3491 0A09                                             _PEIE 005E  
                                           u2940 14B0                                             u2860 145D  
                                           u3900 15D3                                             u3820 08DA  
                                           u3660 0B16                                             u3580 0AA2  
                                           u2941 14AF                                             u2925 1498  
                                           u2861 145C                                             u4277 1385  
                                           u4197 13DC                                             u3901 15D0  
                                           u3821 08D9                                             u3725 0B62  
                                           u3661 0B15                                             u3581 0AA1  
                                           u3565 0A7E                                             u2950 14B5  
                                           u2870 1468                                             u2790 1175  
                                           u3910 0065                                             u3830 08EF  
                                           u3750 0855                                             u3670 0B24  
                                           u3590 0ABD                                             u4287 1FF2  
                                           u2951 14B4                                             u2935 14A4  
                                           u2871 1467                                             u2791 1174  
                                           u2775 13CD                                             u2855 1F7E  
                                           u3911 0064                                             u3831 08EC  
                                           u3751 0C7F                                             u3735 0B82  
                                           u3671 0B23                                             u3591 0ABC  
                                           u2880 1479                                             u2960 1275  
                                           u3920 006F                                             u3840 090F  
                                           u3760 085D                                             u3680 0B30  
                                           u4297 1F57                                             u2881 1478  
                                           u2961 1274                                             u2785 136A  
                                           u3921 006E                                             u3841 090E  
                                           u3761 085C                                             u3745 0BA2  
                                           u3681 0B2F                                             u2970 1280  
                                           u3930 00C1                                             u3850 0925  
                                           u3770 086C                                             u3690 0B3C  
                                           u2971 127F                                             u3931 00C0  
                                           u3851 0924                                             u3771 086B  
                                           u3691 0B3B                                             u2980 128B  
                                           u3940 00EE                                             u3860 0930  
                                           u3780 088F                                             _RCEN 048B  
                                           u2981 128A                                             u3941 00ED  
                                           u3861 092F                                             u3781 088E  
                                           u3950 0162                                             u3870 0938  
                                           u3790 089E                                             u2895 147D  
                                           u3951 0161                                             u3871 0937  
                                           u3791 089D                                             u3960 01ED  
                                           u3880 0955                                             u3961 01EC  
                                           u3881 0952                                             u3970 035D  
                                           u3890 0964                                             u2995 128F  
                                           u3971 035C                                             u3891 0963  
                                           u3980 03FD                                             u3981 03FC  
                                           u3990 0402                                             u3991 0401  
                               LCD_GotoRC@column 0076                                             _TMR1 000E  
                                           _SPEN 00C7                                             _TRMT 04C1  
                                           _TXEN 04C5                                             _SYNC 04C4  
                               __end_of_I2C_NACK 080C                                      LCD_DisStr@i 0022  
                                           _main 0C82                                 __end_of_I2C_Read 1076  
                                           btemp 007E                                 __end_of_I2C_Wait 1F33  
                               __end_of_I2C_Stop 1F10                                             start 0010  
                              ___bmul@multiplier 0075                                            ??_ISR 0070  
          __end_of_RTC_DS1307_BCD_To_Decimal_LSB 1F19           __size_of_RTC_DS1307_BCD_To_Decimal_LSB 0009  
                  _RTC_DS1307_BCD_To_Decimal_LSB 1F10            __end_of_RTC_DS1307_BCD_To_Decimal_MSB 1F8A  
         __size_of_RTC_DS1307_BCD_To_Decimal_MSB 0010                    _RTC_DS1307_BCD_To_Decimal_MSB 1F7A  
                                 ??_LCD_DisStrRC 0078                                 __end_of_LCD_Init 10B2  
                               ?_I2C_Master_Init 0070                                    ??_Button_Init 0073  
                                  ??_Button_Read 0073                                            ?_main 0070  
                                          _ACKEN 048C                                            _ACKDT 048D  
                                __end_of___awdiv 14BF                                  __end_of___awmod 12C9  
                                __end_of___lldiv 1456                                  ___awdiv@divisor 0073  
                                          i1l333 113A                                            i1l334 113F  
                                ___awdiv@counter 0020                                            _SPBRG 0099  
                                          _PORTA 0005                                            _PORTB 0006  
                                          _PORTC 0007                                            _PORTD 0008  
                                          _PORTE 0009                                            _TRISA 0085  
                                          _TRISB 0086                                            _TRISC 0087  
                                          _TRISD 0088                                            _TRISE 0089  
                                          _TXREG 0019                                  _RTC_DS1307_Init 1EF8  
                                _RTC_DS1307_Read 10EE                              ___lmul@multiplicand 0024  
                 _passwordChangedSuccessfullymsg 00D0                                      ?_UART_Write 0070  
                          LCD_2DigitIntToStr@str 0024                                 __end_of_Adc_Init 1F5B  
                               __end_of_Adc_Read 1FBF                 Save_Event_to_24c04@Memory_Offset 0030  
                            __size_of_LCD_DisStr 002E                                __end_of_I2C_Start 1F07  
                            __size_of_LCD_GotoRC 0018                                __end_of_I2C_Write 1F7A  
                                          pclath 000A                       __size_of_E2PROM_24C04_Init 0006  
                     __size_of_E2PROM_24C04_Read 0036                                            status 0003  
                                          wtemp0 007E                                 __end_of_Dio_Init 1FD3  
              RTC_DS1307_BCD_To_Decimal_LSB@temp 0074                                  __initialization 0013  
              RTC_DS1307_BCD_To_Decimal_MSB@temp 0075                                     __end_of_main 07D2  
                                  _Current_Event 0053                               Check_Password@temp 0020  
                                         ??_main 0036                        LCD_2DigitIntToStr@Integer 0077  
                            __end_of_Button_Init 1F26                              __end_of_Button_Read 2000  
                                         _ADCON0 001F                                           _ADCON1 009F  
                                         _ADRESH 001E                                           _ADRESL 009E  
                               ___awdiv@dividend 0075                                           i1l3060 111A  
                                         i1l3070 1133                                           i1l3062 111E  
                                         i1l3072 1135                                           i1l3064 1124  
                                         i1l3074 1139                                           i1l3066 1128  
                                         i1l3068 1131                                           u190_20 1131  
                                         u190_21 1130                                           u191_20 1139  
                                         u191_21 1138                            __size_of_Clear_Events 0019  
                                         u189_20 111E                                           u189_21 111D  
                                         _TMR1IE 0460                                           _TMR1IF 0060  
                                         _TMR1CS 0081                                           _TMR1ON 0080  
                                         _SSPADD 0093                                           _TRISC3 043B  
                                         _TRISC4 043C                                           _TRISC6 043E  
                                         _TRISC7 043F                                           _SSPCON 0014  
                                         _SSPBUF 0013                                 _RTC_DS1307_Write 10B2  
                                  Clear_Events@i 0077                                           ___bmul 1FD3  
                                         ___lmul 11DE                                    LCD_DisStr@str 0076  
                            __size_of_UART_Write 000C                                        ??___awdiv 0077  
                                      ??___awmod 0077                                        ??___lldiv 0030  
                        __end_of_RTC_DS1307_Init 1EFE                          __end_of_RTC_DS1307_Read 111A  
                           __size_of_LCD_DisChar 0063                                    _DOW_To_String 0190  
                               ___awdiv@quotient 0022                                  ___awmod@divisor 0073  
                                ___awmod@counter 0020                                   _Events_Strings 0151  
                                      ?_I2C_NACK 0070                   ?_RTC_DS1307_BCD_To_Decimal_LSB 0070  
                 ?_RTC_DS1307_BCD_To_Decimal_MSB 0070                                        ?_I2C_Read 0070  
                           __size_of_LCD_SendCMD 0063                __size_of_RTC_DS1307_DOW_To_String 000D  
                                      ?_I2C_Wait 0070                                        ?_I2C_Stop 0070  
                      ?_RTC_DS1307_DOW_To_String 0070                                           saved_w 007E  
                                   _Clear_Events 1043                      __size_of_E2PROM_24C04_Write 001E  
                                   _Gear_Counter 007A                             __end_of_LCD_DisStrRC 1043  
                        __end_of__initialization 005A                                  main@Pass_Offset 004C  
                                      ?_LCD_Init 0070                                    LCD_GotoRC@row 0077  
                            ___bmul@multiplicand 0073                     __size_of_RTC_DS1307_Get_Date 0126  
                          __end_of_UART_WriteStr 10EE                                   __pcstackCOMMON 0070  
                                   ??_LCD_DisStr 0020                                     __pidataBANK0 1F8A  
                                   __pidataBANK1 1226                                     __pidataBANK2 12C9  
                                   __pidataBANK3 080C                                     ??_LCD_GotoRC 0077  
                       ?_UART_Send_Current_Event 0070                                        ?_Adc_Init 0070  
                                      ?_Adc_Read 0073                                      _Button_Init 1F19  
                                    _Button_Read 1FE8                                       ??_I2C_NACK 0073  
                                     ??_I2C_Read 0073                                       ??_I2C_Wait 0073  
                                     ??_I2C_Stop 0073                                        ?_Dio_Init 0070  
                                     __pbssBANK0 0061                                       __pbssBANK1 00E8  
                             __end_of_LCD_DisStr 1176                               __end_of_LCD_GotoRC 102B  
                    __size_of_LCD_2DigitIntToStr 006C                                       ??_LCD_Init 0076  
                           main@Adc_Return_Value 0044          RTC_DS1307_BCD_To_Decimal_LSB@BCD_Number 0073  
                                   I2C_Read@Data 0073                                       __pmaintext 0C82  
                                        ?___bmul 0073                                          ?___lmul 0020  
                    __end_of_Save_Event_to_24c04 15CB                                       __pintentry 0004  
             RTC_DS1307_Read@temp_Device_Address 0075                                       ??_Adc_Init 0073  
                                     ??_Adc_Read 0075                                          _ACKSTAT 048E  
                               ?_RTC_DS1307_Init 0070                                 ?_RTC_DS1307_Read 0070  
                                 ___lmul@product 0074                                          _T1CKPS0 0084  
                                        _T1CKPS1 0085  RTC_DS1307_DOW_To_String@Day_Of_The_Week_Integer 0076  
                                        _GO_DONE 00FA                                _Embedded_Password 00A0  
                                    _Passwordmsg 00B4                                       ??_Dio_Init 0073  
                                   ??_UART_Write 0073           LCD_Display_Current_Event@Current_Event 0027  
                                        _SSPCON2 0091                                          _SSPSTAT 0094  
                                  ?_UART_TX_Init 0070                                        _I2C_Start 1EFE  
                                      _I2C_Write 1F6A                  __end_of_UART_Send_Current_Event 1FAC  
                  E2PROM_24C04_Read@word_Address 0074                                  __size_of___bmul 0015  
                                        ___awdiv 1456                                  __size_of___lmul 0048  
                                        ___awmod 126E                                          ___lldiv 13EE  
                             __end_of_UART_Write 0800                                _Clear_Events_msg1 01B9  
                              _Clear_Events_msg2 00C3                         main@Download_Log_Counter 004D  
                                        __ptext1 11DE                                          __ptext2 13EE  
                                        __ptext3 1F5B                                          __ptext4 1F9A  
                                        __ptext5 10D0                                          __ptext6 07F4  
                                        __ptext7 152B                                          __ptext8 10B2  
                                        __ptext9 1EF8                              _Selection_Part_flag 00ED  
                                   __size_of_ISR 002E               __size_of_LCD_Display_Current_Event 001F  
                     ?_LCD_Display_Current_Event 0070                         __end_of_RTC_DS1307_Write 10D0  
                               ___awmod@dividend 0075                         __size_of_I2C_Master_Init 000D  
                          __size_of_LCD_DisStrRC 0018                                   ??_UART_TX_Init 0073  
                           end_of_initialization 005A                          __size_of_Check_Password 0032  
                       Save_Event_to_24c04@Event 002E                         Save_Event_to_24c04@Speed 002F  
                   RTC_DS1307_Write@word_Address 0075                                       ?_I2C_Start 0070  
                                     ?_I2C_Write 0070                                  ___lldiv@divisor 0028  
        RTC_DS1307_BCD_To_Decimal_MSB@BCD_Number 0074                                  ___lldiv@counter 0035  
               __end_of_RTC_DS1307_DOW_To_String 1F4D                               LCD_DisStrRC@column 0026  
                                        psplit$0 120040                                          psplit$1 400041  
                                        psplit$2 410042                                          psplit$3 420043  
                                        psplit$4 430044                                     _LCD_DisStrRC 102B  
                                  _Screen_Status 0051                                   UART_Write@data 0073  
                                 UART_WriteStr@i 0076                __end_of_LCD_Display_Current_Event 07F4  
                                      _TRISBbits 0086                                __size_of_I2C_NACK 000A  
                            _RTC_DS1307_Get_Date 16DA                                        _TRISEbits 0089  
                                   _LCD_Eventmsg 005F                      Save_Event_to_24c04@RTC_Date 0020  
                              __size_of_I2C_Read 001A                             pnum$maintext_split_1 0040  
                           pnum$maintext_split_2 0041                             pnum$maintext_split_3 0042  
                           pnum$maintext_split_4 0043                             pnum$maintext_split_5 0044  
                              __size_of_I2C_Wait 000D                                __size_of_I2C_Stop 0009  
                ??_RTC_DS1307_BCD_To_Decimal_LSB 0073                  ??_RTC_DS1307_BCD_To_Decimal_MSB 0073  
                                   _LCD_Speedmsg 00E5                                __size_of_LCD_Init 001E  
                           ?_RTC_DS1307_Get_Date 0070                           E2PROM_24C04_Write@Data 0075  
                                  ??_LCD_DisChar 0073                  E2PROM_24C04_Read@Device_Address 0075  
                        RTC_DS1307_Get_Date@temp 0021                                   __end_of___bmul 1FE8  
                                 __end_of___lmul 1226                                    ??_LCD_SendCMD 0073  
                                   ?_Button_Init 0070                                     ?_Button_Read 0070  
                                      _Main_Menu 0110                                __size_of_Adc_Init 000E  
                              __size_of_Adc_Read 0013                       __end_of_E2PROM_24C04_Write 1094  
                            start_initialization 0013                                      __end_of_ISR 1148  
               __size_of_UART_Send_Current_Event 0012                                __size_of_Dio_Init 0014  
                              ??_I2C_Master_Init 0073                                      ??_I2C_Start 0073  
                                    ??_I2C_Write 0073                            ??_RTC_DS1307_Get_Date 0077  
                    RTC_DS1307_Read@word_Address 0074                                         ??___bmul 0074  
                                       ??___lmul 0073                                       init_fetch0 1000  
                           __end_of_UART_TX_Init 1F6A                                      __pdataBANK0 0051  
                                    __pdataBANK1 00A0                                      __pdataBANK2 0110  
                                    __pdataBANK3 0190                                   _Input_Password 00E8  
                       _RTC_DS1307_DOW_To_String 1F40                              __end_of_LCD_DisChar 138B  
                                    __pbssCOMMON 0078                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                    __pcstackBANK3 01D9  
                            __end_of_LCD_SendCMD 13EE                   E2PROM_24C04_Write@word_Address 0074  
                         __size_of_UART_WriteStr 001E                                   _Check_Password 1176  
                     __end_of_LCD_2DigitIntToStr 152B                                  Check_Password@i 0021  
                          _Password_Waiting_Time 0062                                         ?___awdiv 0073  
                                       ?___awmod 0073                                         ?___lldiv 0028  
                                  _Timer_Counter 0078                              _Password_Trails_msg 01A8  
                                       _I2C_NACK 0802                     __size_of_Save_Event_to_24c04 00A0  
                                       _I2C_Read 105C                                         _I2C_Wait 1F26  
                    ??_LCD_Display_Current_Event 0078                                         _I2C_Stop 1F07  
                              ?_RTC_DS1307_Write 0074                           __end_of_Check_Password 11A8  
                       __size_of_RTC_DS1307_Init 0006                         __size_of_RTC_DS1307_Read 002C  
                          E2PROM_24C04_Read@temp 0076                               ??_RTC_DS1307_Write 0075  
                                LCD_DisChar@DATA 0075                              main@Password_Trails 003A  
                              interrupt_function 0004                                         _LCD_Init 1094  
                                       _LCD_Time 0056                                Button_Read@Button 0075  
                                _Waiting_Minutes 0055                                      _LCD_DisChar 1328  
                                  _UART_WriteStr 10D0                                         _Adc_Init 1F4D  
                                       _Adc_Read 1FAC                                      _LCD_SendCMD 138B  
                                     _ADCON0bits 001F                                      _LCD_Logsmsg 00D8  
                                    _LCD_Timemsg 00DD                             __size_of_Button_Init 000D  
                           __size_of_Button_Read 0018                             RTC_DS1307_Write@Data 0074  
                                  ?_Clear_Events 0070                                        main@temp_ 004F  
                        _UART_Send_Current_Event 1F9A                                         _Dio_Init 1FBF  
                                ?_Check_Password 0070                                ___lmul@multiplier 0020  
                         _Set_Time_Blinking_flag 0054                        _LCD_Display_Current_Event 07D5  
                           main@View_Log_Counter 004E                            __size_of_UART_TX_Init 000F  
                                 ?_UART_WriteStr 0070                                    I2C_Write@Data 0073  
                                LCD_DisStrRC@row 0025                                  LCD_DisStrRC@str 0023  
                                   pnum$maintext 0012                                 __size_of___awdiv 0069  
                               __size_of___awmod 005B                                 __size_of___lldiv 0068  
                                 ??_Clear_Events 0077                                Adc_Read@adc_value 0075  
                                _I2C_Master_Init 1F33             UART_Send_Current_Event@Current_Event 0077  
                                       __ptext10 16DA                                         __ptext11 10EE  
                                       __ptext20 138B                                         __ptext12 1F40  
                                       __ptext21 1148                                         __ptext13 1F7A  
                                       __ptext30 1176                                         __ptext22 1328  
                                       __ptext14 1F10                                         __ptext31 11A8  
                                       __ptext23 14BF                                         __ptext15 1094  
                                       __ptext40 1FBF                                         __ptext32 1F6A  
                                       __ptext24 126E                                         __ptext16 07D5  
                                       __ptext41 1FAC                                         __ptext33 1F07  
                                       __ptext25 1456                                         __ptext17 1FD3  
                                       __ptext42 1F4D                                         __ptext34 1EFE  
                                       __ptext26 1EF2                                         __ptext18 102B  
                                       __ptext43 111A                                         __ptext35 105C  
                                       __ptext27 1F33                                         __ptext19 1013  
                                       __ptext36 0802                                         __ptext28 1043  
                                       __ptext37 1F26                                         __ptext29 1076  
                                       __ptext38 1FE8                                         __ptext39 1F19  
                           main@Button_4_counter 003B                             main@Button_5_counter 003D  
                                   _UART_TX_Init 1F5B                                ??_RTC_DS1307_Init 0073  
                              ??_RTC_DS1307_Read 0074                              UART_WriteStr@String 0075  
                             _E2PROM_24C04_Write 1076                                 _Main_Menu_Offset 0061  
                                  __size_of_main FB50                       ??_RTC_DS1307_DOW_To_String 0076  
                            ?_E2PROM_24C04_Write 0074                                       _LCD_DisStr 1148  
                                     _LCD_GotoRC 1013                        ??_UART_Send_Current_Event 0077  
                           ??_E2PROM_24C04_Write 0076                                         init_ram0 1004  
                                       intlevel1 0000                      __end_of_RTC_DS1307_Get_Date 1800  
                            _New_Password_Offset 0063                 E2PROM_24C04_Write@Device_Address 0076  
                               ___lldiv@dividend 002C                                _E2PROM_24C04_Init 1EF2  
                              _E2PROM_24C04_Read 11A8                              _Save_Event_to_24c04 152B  
                                ??_UART_WriteStr 0074                               ?_E2PROM_24C04_Init 0070  
                             ?_E2PROM_24C04_Read 0074                               _LCD_2DigitIntToStr 14BF  
                        __end_of_I2C_Master_Init 1F40                              ??_E2PROM_24C04_Init 0073  
                            ??_E2PROM_24C04_Read 0075                                main@Memory_Offset 0050  
                                 _Selection_Part 0052                              ?_LCD_2DigitIntToStr 0024  
                        _Blocked_Sreen_Line1_msg 01C9                          _Blocked_Sreen_Line2_msg 00A5  
                           ?_Save_Event_to_24c04 0020                                 ___lldiv@quotient 0031  
                                     _UART_Write 07F4                        __end_of_E2PROM_24C04_Init 1EF8  
                      __end_of_E2PROM_24C04_Read 11DE                             ??_LCD_2DigitIntToStr 0077  
                                   main@RTC_Date 01D9                        __size_of_RTC_DS1307_Write 001E  
                                    main@Adc_Str 003F                                    _LCD_NoLogsmsg 00E2  
                             LCD_SendCMD@COMMAND 0075                             __end_of_Clear_Events 105C  
                                  main@Car_Speed 0048  
