

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 10 06:48:11 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303                           
   304                           	psect	idataBANK0
   305  032C                     __pidataBANK0:
   306                           
   307                           ;initializer for _Static_Password
   308  032C  3431               	retlw	49
   309  032D  3432               	retlw	50
   310  032E  3431               	retlw	49
   311  032F  3432               	retlw	50
   312  0330  3431               	retlw	49
   313  0331  3432               	retlw	50
   314  0332  3431               	retlw	49
   315  0333  3432               	retlw	50
   316  0334  3400               	retlw	0
   317                           
   318                           ;initializer for _Attempt_Number
   319  0335  3405               	retlw	5
   320                           
   321                           ;initializer for _LED_Blinking_Rate
   322  0336  3414               	retlw	20
   323                           
   324                           ;initializer for _msg3
   325  0337  3420               	retlw	32
   326  0338  3420               	retlw	32
   327  0339  3420               	retlw	32
   328  033A  3420               	retlw	32
   329  033B  3420               	retlw	32
   330  033C  3420               	retlw	32
   331  033D  3420               	retlw	32
   332  033E  3420               	retlw	32
   333  033F  3420               	retlw	32
   334  0340  3420               	retlw	32
   335  0341  3420               	retlw	32
   336  0342  3420               	retlw	32
   337  0343  3420               	retlw	32
   338  0344  3420               	retlw	32
   339  0345  3420               	retlw	32
   340  0346  3400               	retlw	0
   341                           
   342                           ;initializer for _msg2
   343  0347  3420               	retlw	32
   344  0348  3445               	retlw	69
   345  0349  3478               	retlw	120
   346  034A  3463               	retlw	99
   347  034B  3465               	retlw	101
   348  034C  346C               	retlw	108
   349  034D  346C               	retlw	108
   350  034E  3465               	retlw	101
   351  034F  346E               	retlw	110
   352  0350  3474               	retlw	116
   353  0351  3420               	retlw	32
   354  0352  3420               	retlw	32
   355  0353  3479               	retlw	121
   356  0354  346F               	retlw	111
   357  0355  3475               	retlw	117
   358  0356  3400               	retlw	0
   359                           
   360                           ;initializer for _msg1
   361  0357  3445               	retlw	69
   362  0358  346E               	retlw	110
   363  0359  3474               	retlw	116
   364  035A  3465               	retlw	101
   365  035B  3472               	retlw	114
   366  035C  3420               	retlw	32
   367  035D  3450               	retlw	80
   368  035E  3461               	retlw	97
   369  035F  3473               	retlw	115
   370  0360  3473               	retlw	115
   371  0361  3477               	retlw	119
   372  0362  346F               	retlw	111
   373  0363  3472               	retlw	114
   374  0364  3464               	retlw	100
   375  0365  3400               	retlw	0
   376  0366  3400               	retlw	0
   377                           
   378                           	psect	idataBANK1
   379  0367                     __pidataBANK1:
   380                           
   381                           ;initializer for _msg6
   382  0367  3452               	retlw	82
   383  0368  3465               	retlw	101
   384  0369  3473               	retlw	115
   385  036A  3465               	retlw	101
   386  036B  3474               	retlw	116
   387  036C  3420               	retlw	32
   388  036D  3474               	retlw	116
   389  036E  3468               	retlw	104
   390  036F  3465               	retlw	101
   391  0370  3420               	retlw	32
   392  0371  3442               	retlw	66
   393  0372  346F               	retlw	111
   394  0373  3461               	retlw	97
   395  0374  3472               	retlw	114
   396  0375  3464               	retlw	100
   397  0376  3400               	retlw	0
   398                           
   399                           ;initializer for _msg5
   400  0377  3463               	retlw	99
   401  0378  3468               	retlw	104
   402  0379  3461               	retlw	97
   403  037A  346E               	retlw	110
   404  037B  3463               	retlw	99
   405  037C  3465               	retlw	101
   406  037D  3473               	retlw	115
   407  037E  3420               	retlw	32
   408  037F  3465               	retlw	101
   409  0380  3478               	retlw	120
   410  0381  3461               	retlw	97
   411  0382  3475               	retlw	117
   412  0383  3473               	retlw	115
   413  0384  3474               	retlw	116
   414  0385  3465               	retlw	101
   415  0386  3464               	retlw	100
   416                           
   417                           ;initializer for _msg4
   418  0387  3443               	retlw	67
   419  0388  3472               	retlw	114
   420  0389  3461               	retlw	97
   421  038A  3463               	retlw	99
   422  038B  346B               	retlw	107
   423  038C  3465               	retlw	101
   424  038D  3464               	retlw	100
   425  038E  3420               	retlw	32
   426  038F  3474               	retlw	116
   427  0390  3468               	retlw	104
   428  0391  3465               	retlw	101
   429  0392  3420               	retlw	32
   430  0393  3443               	retlw	67
   431  0394  346F               	retlw	111
   432  0395  3464               	retlw	100
   433  0396  3465               	retlw	101
   434  000E                     _TMR1	set	14
   435  0008                     _PORTD	set	8
   436  0032                     _RB2	set	50
   437  0031                     _RB1	set	49
   438  0030                     _RB0	set	48
   439  0043                     _RD3	set	67
   440  0042                     _RD2	set	66
   441  0041                     _RD1	set	65
   442  0040                     _RD0	set	64
   443  0049                     _RE1	set	73
   444  004A                     _RE2	set	74
   445  005F                     _GIE	set	95
   446  005E                     _PEIE	set	94
   447  0085                     _T1CKPS1	set	133
   448  0084                     _T1CKPS0	set	132
   449  0081                     _TMR1CS	set	129
   450  0080                     _TMR1ON	set	128
   451  0037                     _RB7	set	55
   452  0060                     _TMR1IF	set	96
   453  0088                     _TRISDbits	set	136
   454  0089                     _TRISEbits	set	137
   455  0088                     _TRISD	set	136
   456  0086                     _TRISBbits	set	134
   457  0460                     _TMR1IE	set	1120
   458                           
   459                           	psect	cinit
   460  000F                     start_initialization:	
   461                           ; #config settings
   462                           
   463  000F                     __initialization:
   464                           
   465                           ; Initialize objects allocated to BANK1
   466  000F  1383               	bcf	3,7	;select IRP bank0
   467  0010  30D0               	movlw	low (__pdataBANK1+48)
   468  0011  00FD               	movwf	btemp+-1
   469  0012  3003               	movlw	high __pidataBANK1
   470  0013  00FE               	movwf	btemp
   471  0014  3067               	movlw	low __pidataBANK1
   472  0015  00FF               	movwf	btemp+1
   473  0016  30A0               	movlw	low __pdataBANK1
   474  0017  0084               	movwf	4
   475  0018  120A  118A  2434  120A  118A  	fcall	init_ram0
   476                           
   477                           ; Initialize objects allocated to BANK0
   478  001D  305B               	movlw	low (__pdataBANK0+59)
   479  001E  00FD               	movwf	btemp+-1
   480  001F  3003               	movlw	high __pidataBANK0
   481  0020  00FE               	movwf	btemp
   482  0021  302C               	movlw	low __pidataBANK0
   483  0022  00FF               	movwf	btemp+1
   484  0023  3020               	movlw	low __pdataBANK0
   485  0024  0084               	movwf	4
   486  0025  120A  118A  2434  120A  118A  	fcall	init_ram0
   487                           
   488                           ; Clear objects allocated to BANK0
   489  002A  01DB               	clrf	__pbssBANK0& (0+127)
   490  002B  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   491  002C  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   492  002D  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   493  002E  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   494  002F  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   495  0030  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   496  0031  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   497  0032  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   498  0033  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   499                           
   500                           ; Clear objects allocated to COMMON
   501  0034  01F8               	clrf	__pbssCOMMON& (0+127)
   502  0035  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   503  0036                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  0036                     __end_of__initialization:
   507  0036  0183               	clrf	3
   508  0037  120A  118A  2950   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMMON
   511  0078                     __pbssCOMMON:
   512  0078                     _Timer_Counter:
   513  0078                     	ds	2
   514                           
   515                           	psect	bssBANK0
   516  005B                     __pbssBANK0:
   517  005B                     _Entered_Password:
   518  005B                     	ds	9
   519  0064                     _Entered_Password_Index:
   520  0064                     	ds	1
   521                           
   522                           	psect	dataBANK0
   523  0020                     __pdataBANK0:
   524  0020                     _Static_Password:
   525  0020                     	ds	9
   526  0029                     _Attempt_Number:
   527  0029                     	ds	1
   528  002A                     _LED_Blinking_Rate:
   529  002A                     	ds	1
   530  002B                     _msg3:
   531  002B                     	ds	16
   532  003B                     _msg2:
   533  003B                     	ds	16
   534  004B                     _msg1:
   535  004B                     	ds	16
   536                           
   537                           	psect	dataBANK1
   538  00A0                     __pdataBANK1:
   539  00A0                     _msg6:
   540  00A0                     	ds	16
   541  00B0                     _msg5:
   542  00B0                     	ds	16
   543  00C0                     _msg4:
   544  00C0                     	ds	16
   545                           
   546                           	psect	inittext
   547  0430                     init_fetch0:	
   548                           ;	Called with low address in FSR and high address in W
   549                           
   550  0430  087E               	movf	btemp,w
   551  0431  008A               	movwf	10
   552  0432  087F               	movf	btemp+1,w
   553  0433  0082               	movwf	2
   554  0434                     init_ram0:	
   555                           ;Called with:
   556                           ;	high address of idata address in btemp 
   557                           ;	low address of idata address in btemp+1 
   558                           ;	low address of data in FSR
   559                           ;	high address + 1 of data in btemp-1
   560                           
   561  0434  120A  118A  2430  120A  118A  	fcall	init_fetch0
   562  0439  0080               	movwf	0
   563  043A  0A84               	incf	4,f
   564  043B  0804               	movf	4,w
   565  043C  067D               	xorwf	btemp+-1,w
   566  043D  1903               	btfsc	3,2
   567  043E  3400               	retlw	0
   568  043F  0AFF               	incf	btemp+1,f
   569  0440  1903               	btfsc	3,2
   570  0441  0AFE               	incf	btemp,f
   571  0442  2C34               	goto	init_ram0
   572                           
   573                           	psect	cstackCOMMON
   574  0070                     __pcstackCOMMON:
   575  0070                     ?_LCD_Init:
   576  0070                     ?_KeyPad_Init:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_Timer1_Init:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_KeyPad_GetKey:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_LCD_DisChar:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_LCD_SendCMD:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_ISR:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_LCD_DisStr:	
   601                           ; 1 bytes @ 0x0
   602                           
   603                           
   604                           ; 1 bytes @ 0x0
   605  0070                     	ds	4
   606  0074                     ??_KeyPad_Init:
   607  0074                     ??_Timer1_Init:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0074                     ??_KeyPad_GetKey:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0074                     ??_LCD_DisChar:	
   614                           ; 1 bytes @ 0x4
   615                           
   616  0074                     ??_LCD_SendCMD:	
   617                           ; 1 bytes @ 0x4
   618                           
   619                           
   620                           ; 1 bytes @ 0x4
   621  0074                     	ds	2
   622  0076                     LCD_SendCMD@COMMAND:
   623  0076                     LCD_DisChar@DATA:	
   624                           ; 1 bytes @ 0x6
   625                           
   626                           
   627                           ; 1 bytes @ 0x6
   628  0076                     	ds	1
   629  0077                     ??_LCD_Init:
   630  0077                     ?_LCD_GotoRC:	
   631                           ; 1 bytes @ 0x7
   632                           
   633  0077                     ??_LCD_DisStr:	
   634                           ; 1 bytes @ 0x7
   635                           
   636  0077                     LCD_GotoRC@column:	
   637                           ; 1 bytes @ 0x7
   638                           
   639                           
   640                           ; 1 bytes @ 0x7
   641  0077                     	ds	1
   642  0078                     ??_LCD_DisStrRC:
   643  0078                     ??_LCD_GotoRC:	
   644                           ; 1 bytes @ 0x8
   645                           
   646                           
   647                           	psect	cstackBANK0
   648  0065                     __pcstackBANK0:	
   649                           ; 1 bytes @ 0x8
   650                           
   651  0065                     LCD_DisStr@str:
   652  0065                     LCD_GotoRC@row:	
   653                           ; 1 bytes @ 0x0
   654                           
   655                           
   656                           ; 1 bytes @ 0x0
   657  0065                     	ds	1
   658  0066                     LCD_DisStr@i:
   659                           
   660                           ; 1 bytes @ 0x1
   661  0066                     	ds	1
   662  0067                     ?_LCD_DisStrRC:
   663  0067                     LCD_DisStrRC@row:	
   664                           ; 1 bytes @ 0x2
   665                           
   666                           
   667                           ; 1 bytes @ 0x2
   668  0067                     	ds	1
   669  0068                     LCD_DisStrRC@column:
   670                           
   671                           ; 1 bytes @ 0x3
   672  0068                     	ds	1
   673  0069                     LCD_DisStrRC@str:
   674                           
   675                           ; 1 bytes @ 0x4
   676  0069                     	ds	1
   677  006A                     ??_main:
   678                           
   679                           ; 1 bytes @ 0x5
   680  006A                     	ds	2
   681  006C                     main@KeyPad_Pressed_Key:
   682                           
   683                           ; 1 bytes @ 0x7
   684  006C                     	ds	1
   685  006D                     main@Wrong_Password_Flag:
   686                           
   687                           ; 1 bytes @ 0x8
   688  006D                     	ds	1
   689  006E                     main@i:
   690                           
   691                           ; 1 bytes @ 0x9
   692  006E                     	ds	1
   693                           
   694                           	psect	maintext
   695  0150                     __pmaintext:	
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 52 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  i               1    9[BANK0 ] unsigned char 
   706 ;;  Wrong_Passwo    1    8[BANK0 ] unsigned char 
   707 ;;  KeyPad_Press    1    7[BANK0 ] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : B00/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       3       0       0       0
   719 ;;      Temps:          0       2       0       0       0
   720 ;;      Totals:         0       5       0       0       0
   721 ;;Total ram usage:        5 bytes
   722 ;; Hardware stack levels required when called:    4
   723 ;; This function calls:
   724 ;;		_KeyPad_GetKey
   725 ;;		_KeyPad_Init
   726 ;;		_LCD_DisChar
   727 ;;		_LCD_DisStrRC
   728 ;;		_LCD_GotoRC
   729 ;;		_LCD_Init
   730 ;;		_LCD_SendCMD
   731 ;;		_Timer1_Init
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _main
   739  0150                     _main:
   740  0150                     l1680:	
   741                           ;incstack = 0
   742                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   743                           
   744                           
   745                           ;main.c: 54:     TRISBbits.TRISB7 = 0;
   746  0150  1683               	bsf	3,5	;RP0=1, select bank1
   747  0151  1303               	bcf	3,6	;RP1=0, select bank1
   748  0152  1386               	bcf	6,7	;volatile
   749  0153                     l1682:
   750                           
   751                           ;main.c: 56:     LCD_Init();
   752  0153  120A  118A  23E2  120A  118A  	fcall	_LCD_Init
   753  0158                     l1684:
   754                           
   755                           ;main.c: 57:     KeyPad_Init();
   756  0158  120A  118A  2456  120A  118A  	fcall	_KeyPad_Init
   757  015D                     l1686:
   758                           
   759                           ;main.c: 58:     Timer1_Init();
   760  015D  120A  118A  2443  120A  118A  	fcall	_Timer1_Init
   761  0162                     l1688:
   762                           
   763                           ;main.c: 60:     LCD_DisStrRC(msg1, 0, 1);
   764  0162  1283               	bcf	3,5	;RP0=0, select bank0
   765  0163  1303               	bcf	3,6	;RP1=0, select bank0
   766  0164  01E7               	clrf	LCD_DisStrRC@row
   767  0165  01E8               	clrf	LCD_DisStrRC@column
   768  0166  0AE8               	incf	LCD_DisStrRC@column,f
   769  0167  304B               	movlw	(low (_msg1| 0))& (0+255)
   770  0168  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
   771  016D                     l1690:
   772  016D                     l1692:
   773                           
   774                           ;main.c: 63:     uint8_t Wrong_Password_Flag = 1;
   775  016D  1283               	bcf	3,5	;RP0=0, select bank0
   776  016E  1303               	bcf	3,6	;RP1=0, select bank0
   777  016F  01ED               	clrf	main@Wrong_Password_Flag
   778  0170  0AED               	incf	main@Wrong_Password_Flag,f
   779  0171                     l1694:
   780                           
   781                           ;main.c: 67:         KeyPad_Pressed_Key = KeyPad_GetKey();
   782  0171  120A  118A  203A  120A  118A  	fcall	_KeyPad_GetKey
   783  0176  00FF               	movwf	btemp+1
   784  0177  087F               	movf	btemp+1,w
   785  0178  1283               	bcf	3,5	;RP0=0, select bank0
   786  0179  1303               	bcf	3,6	;RP1=0, select bank0
   787  017A  00EC               	movwf	main@KeyPad_Pressed_Key
   788                           
   789                           ;main.c: 69:         switch (KeyPad_Pressed_Key) {
   790  017B  29B8               	goto	l1710
   791  017C                     l1696:
   792                           
   793                           ;main.c: 71:                 LCD_GotoRC(1,3+Entered_Password_Index);
   794  017C  0864               	movf	_Entered_Password_Index,w
   795  017D  3E03               	addlw	3
   796  017E  00FF               	movwf	btemp+1
   797  017F  087F               	movf	btemp+1,w
   798  0180  00F7               	movwf	LCD_GotoRC@column
   799  0181  3001               	movlw	1
   800  0182  120A  118A  2400  120A  118A  	fcall	_LCD_GotoRC
   801                           
   802                           ;main.c: 72:                 LCD_DisChar('*');
   803  0187  302A               	movlw	42
   804  0188  120A  118A  22BD  120A  118A  	fcall	_LCD_DisChar
   805  018D                     l1698:
   806                           
   807                           ;main.c: 73:                 Entered_Password[Entered_Password_Index] = '1';
   808  018D  3031               	movlw	49
   809  018E  00FF               	movwf	btemp+1
   810  018F  1283               	bcf	3,5	;RP0=0, select bank0
   811  0190  1303               	bcf	3,6	;RP1=0, select bank0
   812  0191  0864               	movf	_Entered_Password_Index,w
   813  0192  3E5B               	addlw	(low (_Entered_Password| 0))& (0+255)
   814  0193  0084               	movwf	4
   815  0194  087F               	movf	btemp+1,w
   816  0195  1383               	bcf	3,7	;select IRP bank0
   817  0196  0080               	movwf	0
   818  0197                     l1700:
   819                           
   820                           ;main.c: 74:                 Entered_Password_Index++;
   821  0197  3001               	movlw	1
   822  0198  00FF               	movwf	btemp+1
   823  0199  087F               	movf	btemp+1,w
   824  019A  07E4               	addwf	_Entered_Password_Index,f
   825                           
   826                           ;main.c: 75:                 break;
   827  019B  29C8               	goto	l1712
   828  019C                     l1702:
   829                           
   830                           ;main.c: 78:                 LCD_GotoRC(1,3+Entered_Password_Index);
   831  019C  0864               	movf	_Entered_Password_Index,w
   832  019D  3E03               	addlw	3
   833  019E  00FF               	movwf	btemp+1
   834  019F  087F               	movf	btemp+1,w
   835  01A0  00F7               	movwf	LCD_GotoRC@column
   836  01A1  3001               	movlw	1
   837  01A2  120A  118A  2400  120A  118A  	fcall	_LCD_GotoRC
   838                           
   839                           ;main.c: 79:                 LCD_DisChar('*');
   840  01A7  302A               	movlw	42
   841  01A8  120A  118A  22BD  120A  118A  	fcall	_LCD_DisChar
   842  01AD                     l1704:
   843                           
   844                           ;main.c: 80:                 Entered_Password[Entered_Password_Index] = '2';
   845  01AD  3032               	movlw	50
   846  01AE  00FF               	movwf	btemp+1
   847  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   848  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   849  01B1  0864               	movf	_Entered_Password_Index,w
   850  01B2  3E5B               	addlw	(low (_Entered_Password| 0))& (0+255)
   851  01B3  0084               	movwf	4
   852  01B4  087F               	movf	btemp+1,w
   853  01B5  1383               	bcf	3,7	;select IRP bank0
   854  01B6  0080               	movwf	0
   855  01B7  2997               	goto	l1700
   856  01B8                     l1710:
   857  01B8  086C               	movf	main@KeyPad_Pressed_Key,w
   858  01B9  00EA               	movwf	??_main
   859  01BA  01EB               	clrf	??_main+1
   860                           
   861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 1, Range of values is 0 to 0
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte            4     3 (average)
   867                           ; direct_byte           11     8 (fixed)
   868                           ; jumptable            260     6 (fixed)
   869                           ;	Chosen strategy is simple_byte
   870  01BB  086B               	movf	??_main+1,w
   871  01BC  3A00               	xorlw	0	; case 0
   872  01BD  1903               	skipnz
   873  01BE  29C0               	goto	l1794
   874  01BF  29C8               	goto	l1712
   875  01C0                     l1794:
   876                           
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 2, Range of values is 49 to 50
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            7     4 (average)
   882                           ; direct_byte           17    11 (fixed)
   883                           ; jumptable            263     9 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  01C0  086A               	movf	??_main,w
   886  01C1  3A31               	xorlw	49	; case 49
   887  01C2  1903               	skipnz
   888  01C3  297C               	goto	l1696
   889  01C4  3A03               	xorlw	3	; case 50
   890  01C5  1903               	skipnz
   891  01C6  299C               	goto	l1702
   892  01C7  29C8               	goto	l1712
   893  01C8                     l1712:
   894                           
   895                           ;main.c: 85:         if (Entered_Password_Index > 7) {
   896  01C8  3008               	movlw	8
   897  01C9  0264               	subwf	_Entered_Password_Index,w
   898  01CA  1C03               	skipc
   899  01CB  29CD               	goto	u1251
   900  01CC  29CE               	goto	u1250
   901  01CD                     u1251:
   902  01CD  2A05               	goto	l1738
   903  01CE                     u1250:
   904  01CE                     l1714:
   905                           
   906                           ;main.c: 87:             uint8_t i = 0;
   907  01CE  01EE               	clrf	main@i
   908                           
   909                           ;main.c: 88:             while (i < 8) {
   910  01CF  29FF               	goto	l1736
   911  01D0                     l1716:
   912                           
   913                           ;main.c: 89:                 if (Entered_Password[i] != Static_Password[i]) {
   914  01D0  086E               	movf	main@i,w
   915  01D1  3E20               	addlw	(low (_Static_Password| 0))& (0+255)
   916  01D2  0084               	movwf	4
   917  01D3  1383               	bcf	3,7	;select IRP bank0
   918  01D4  0800               	movf	0,w
   919  01D5  00EA               	movwf	??_main
   920  01D6  086E               	movf	main@i,w
   921  01D7  3E5B               	addlw	(low (_Entered_Password| 0))& (0+255)
   922  01D8  0084               	movwf	4
   923  01D9  0800               	movf	0,w
   924  01DA  066A               	xorwf	??_main,w
   925  01DB  1903               	skipnz
   926  01DC  29DE               	goto	u1261
   927  01DD  29DF               	goto	u1260
   928  01DE                     u1261:
   929  01DE  29F4               	goto	l1730
   930  01DF                     u1260:
   931  01DF                     l1718:
   932                           
   933                           ;main.c: 93:                     Attempt_Number--;
   934  01DF  30FF               	movlw	255
   935  01E0  00FF               	movwf	btemp+1
   936  01E1  087F               	movf	btemp+1,w
   937  01E2  07A9               	addwf	_Attempt_Number,f
   938  01E3                     l1720:
   939                           
   940                           ;main.c: 94:                     LED_Blinking_Rate -= 3;
   941  01E3  3003               	movlw	3
   942  01E4  02AA               	subwf	_LED_Blinking_Rate,f
   943  01E5                     l1722:
   944                           
   945                           ;main.c: 95:                     Entered_Password_Index=0;
   946  01E5  01E4               	clrf	_Entered_Password_Index
   947  01E6                     l1724:
   948                           
   949                           ;main.c: 96:                     LCD_DisStrRC(msg3, 1 , 0);
   950  01E6  01E7               	clrf	LCD_DisStrRC@row
   951  01E7  0AE7               	incf	LCD_DisStrRC@row,f
   952  01E8  01E8               	clrf	LCD_DisStrRC@column
   953  01E9  302B               	movlw	(low (_msg3| 0))& (0+255)
   954  01EA  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
   955  01EF                     l1726:
   956                           
   957                           ;main.c: 97:                     Wrong_Password_Flag = 1;
   958  01EF  1283               	bcf	3,5	;RP0=0, select bank0
   959  01F0  1303               	bcf	3,6	;RP1=0, select bank0
   960  01F1  01ED               	clrf	main@Wrong_Password_Flag
   961  01F2  0AED               	incf	main@Wrong_Password_Flag,f
   962                           
   963                           ;main.c: 98:                     break;
   964  01F3  2A05               	goto	l1738
   965  01F4                     l1730:
   966                           
   967                           ;main.c: 101:                     if (i == 7) {
   968  01F4  3007               	movlw	7
   969  01F5  066E               	xorwf	main@i,w
   970  01F6  1D03               	btfss	3,2
   971  01F7  29F9               	goto	u1271
   972  01F8  29FA               	goto	u1270
   973  01F9                     u1271:
   974  01F9  29FB               	goto	l1734
   975  01FA                     u1270:
   976  01FA                     l1732:
   977                           
   978                           ;main.c: 102:                         Wrong_Password_Flag = 0;
   979  01FA  01ED               	clrf	main@Wrong_Password_Flag
   980  01FB                     l1734:
   981                           
   982                           ;main.c: 105:                 i++;
   983  01FB  3001               	movlw	1
   984  01FC  00FF               	movwf	btemp+1
   985  01FD  087F               	movf	btemp+1,w
   986  01FE  07EE               	addwf	main@i,f
   987  01FF                     l1736:
   988                           
   989                           ;main.c: 88:             while (i < 8) {
   990  01FF  3008               	movlw	8
   991  0200  026E               	subwf	main@i,w
   992  0201  1C03               	skipc
   993  0202  2A04               	goto	u1281
   994  0203  2A05               	goto	u1280
   995  0204                     u1281:
   996  0204  29D0               	goto	l1716
   997  0205                     u1280:
   998  0205                     l1738:
   999                           
  1000                           ;main.c: 110:         if (Wrong_Password_Flag == 0) {
  1001  0205  086D               	movf	main@Wrong_Password_Flag,w
  1002  0206  1D03               	btfss	3,2
  1003  0207  2A09               	goto	u1291
  1004  0208  2A0A               	goto	u1290
  1005  0209                     u1291:
  1006  0209  2A28               	goto	l1748
  1007  020A                     u1290:
  1008  020A                     l1740:
  1009                           
  1010                           ;main.c: 112:             TMR1ON = 0;
  1011  020A  1010               	bcf	16,0	;volatile
  1012                           
  1013                           ;main.c: 113:             RB7=0;
  1014  020B  1386               	bcf	6,7	;volatile
  1015  020C                     l1742:
  1016                           
  1017                           ;main.c: 114:             LCD_SendCMD((0x01));
  1018  020C  3001               	movlw	1
  1019  020D  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1020  0212                     l1744:
  1021                           
  1022                           ;main.c: 115:             LCD_DisStrRC(msg2, 0 , 0);
  1023  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0214  01E7               	clrf	LCD_DisStrRC@row
  1026  0215  01E8               	clrf	LCD_DisStrRC@column
  1027  0216  303B               	movlw	(low (_msg2| 0))& (0+255)
  1028  0217  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
  1029  021C                     l1746:
  1030                           
  1031                           ;main.c: 116:             LCD_DisStrRC(msg4, 1 , 0);
  1032  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1033  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1034  021E  01E7               	clrf	LCD_DisStrRC@row
  1035  021F  0AE7               	incf	LCD_DisStrRC@row,f
  1036  0220  01E8               	clrf	LCD_DisStrRC@column
  1037  0221  30C0               	movlw	(low (_msg4| 0))& (0+255)
  1038  0222  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
  1039  0227                     l87:	
  1040                           ;main.c: 117:             while(1);
  1041                           
  1042  0227                     l88:
  1043  0227  2A27               	goto	l87
  1044  0228                     l1748:
  1045                           
  1046                           ;main.c: 120:         if(Attempt_Number == 0){
  1047  0228  0829               	movf	_Attempt_Number,w
  1048  0229  1D03               	btfss	3,2
  1049  022A  2A2C               	goto	u1301
  1050  022B  2A2D               	goto	u1300
  1051  022C                     u1301:
  1052  022C  2971               	goto	l1694
  1053  022D                     u1300:
  1054  022D                     l1750:
  1055                           
  1056                           ;main.c: 122:             TMR1ON = 0;
  1057  022D  1010               	bcf	16,0	;volatile
  1058                           
  1059                           ;main.c: 123:             RB7=1;
  1060  022E  1786               	bsf	6,7	;volatile
  1061  022F                     l1752:
  1062                           
  1063                           ;main.c: 124:             LCD_SendCMD((0x01));
  1064  022F  3001               	movlw	1
  1065  0230  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1066  0235                     l1754:
  1067                           
  1068                           ;main.c: 125:             LCD_DisStrRC(msg5, 0 , 0);
  1069  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0237  01E7               	clrf	LCD_DisStrRC@row
  1072  0238  01E8               	clrf	LCD_DisStrRC@column
  1073  0239  30B0               	movlw	(low (_msg5| 0))& (0+255)
  1074  023A  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
  1075  023F                     l1756:
  1076                           
  1077                           ;main.c: 126:             LCD_DisStrRC(msg6, 1 , 0);
  1078  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0241  01E7               	clrf	LCD_DisStrRC@row
  1081  0242  0AE7               	incf	LCD_DisStrRC@row,f
  1082  0243  01E8               	clrf	LCD_DisStrRC@column
  1083  0244  30A0               	movlw	(low (_msg6| 0))& (0+255)
  1084  0245  120A  118A  241A  120A  118A  	fcall	_LCD_DisStrRC
  1085  024A                     l91:	
  1086                           ;main.c: 127:             while(1);
  1087                           
  1088  024A                     l92:
  1089  024A  2A4A               	goto	l91
  1090  024B  120A  118A  280C   	ljmp	start
  1091  024E                     __end_of_main:
  1092                           
  1093                           	psect	text1
  1094  0443                     __ptext1:	
  1095 ;; *************** function _Timer1_Init *****************
  1096 ;; Defined at:
  1097 ;;		line 135 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		None
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _Timer1_Init
  1127  0443                     _Timer1_Init:
  1128  0443                     l1298:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _Timer1_Init: []
  1131                           
  1132                           
  1133                           ;main.c: 137:     TMR1 = 65536 - 50000;
  1134  0443  303C               	movlw	60
  1135  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0446  008F               	movwf	15	;volatile
  1138  0447  30B0               	movlw	176
  1139  0448  008E               	movwf	14	;volatile
  1140                           
  1141                           ;main.c: 139:     TMR1CS = 0;
  1142  0449  1090               	bcf	16,1	;volatile
  1143                           
  1144                           ;main.c: 141:     T1CKPS0 = 0;
  1145  044A  1210               	bcf	16,4	;volatile
  1146                           
  1147                           ;main.c: 142:     T1CKPS1 = 0;
  1148  044B  1290               	bcf	16,5	;volatile
  1149                           
  1150                           ;main.c: 145:     TMR1ON = 1;
  1151  044C  1410               	bsf	16,0	;volatile
  1152                           
  1153                           ;main.c: 147:     TMR1IE = 1;
  1154  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1155  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1156  044F  140C               	bsf	12,0	;volatile
  1157                           
  1158                           ;main.c: 148:     TMR1IF = 0;
  1159  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0452  100C               	bcf	12,0	;volatile
  1162                           
  1163                           ;main.c: 149:     PEIE = 1;
  1164  0453  170B               	bsf	11,6	;volatile
  1165                           
  1166                           ;main.c: 150:     GIE = 1;
  1167  0454  178B               	bsf	11,7	;volatile
  1168  0455                     l99:
  1169  0455  0008               	return
  1170  0456                     __end_of_Timer1_Init:
  1171                           
  1172                           	psect	text2
  1173  03E2                     __ptext2:	
  1174 ;; *************** function _LCD_Init *****************
  1175 ;; Defined at:
  1176 ;;		line 6 in file "LCD.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		_LCD_SendCMD
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _LCD_Init
  1206  03E2                     _LCD_Init:
  1207  03E2                     l1662:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1210                           
  1211                           
  1212                           ;LCD.c: 9:     TRISD = 0;
  1213  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1214  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1215  03E4  0188               	clrf	8	;volatile
  1216  03E5                     l1664:
  1217                           
  1218                           ;LCD.c: 10:     TRISEbits.TRISE1 = 0;
  1219  03E5  1089               	bcf	9,1	;volatile
  1220  03E6                     l1666:
  1221                           
  1222                           ;LCD.c: 11:     TRISEbits.TRISE2 = 0;
  1223  03E6  1109               	bcf	9,2	;volatile
  1224  03E7                     l1668:
  1225                           
  1226                           ;LCD.c: 14:  LCD_SendCMD((0x02));
  1227  03E7  3002               	movlw	2
  1228  03E8  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1229  03ED                     l1670:
  1230                           
  1231                           ;LCD.c: 17:   LCD_SendCMD((0x28));
  1232  03ED  3028               	movlw	40
  1233  03EE  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1234  03F3                     l1672:
  1235                           
  1236                           ;LCD.c: 22:  LCD_SendCMD((0x0C));
  1237  03F3  300C               	movlw	12
  1238  03F4  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1239  03F9                     l1674:
  1240                           
  1241                           ;LCD.c: 23:  LCD_SendCMD((0x01));
  1242  03F9  3001               	movlw	1
  1243  03FA  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1244  03FF                     l116:
  1245  03FF  0008               	return
  1246  0400                     __end_of_LCD_Init:
  1247                           
  1248                           	psect	text3
  1249  041A                     __ptext3:	
  1250 ;; *************** function _LCD_DisStrRC *****************
  1251 ;; Defined at:
  1252 ;;		line 190 in file "LCD.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  str             1    wreg     PTR unsigned char 
  1255 ;;		 -> msg6(16), msg5(16), msg4(16), msg2(16), 
  1256 ;;		 -> msg3(16), msg1(16), 
  1257 ;;  row             1    2[BANK0 ] unsigned char 
  1258 ;;  column          1    3[BANK0 ] unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  str             1    4[BANK0 ] PTR unsigned char 
  1261 ;;		 -> msg6(16), msg5(16), msg4(16), msg2(16), 
  1262 ;;		 -> msg3(16), msg1(16), 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       2       0       0       0
  1273 ;;      Locals:         0       1       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         0       3       0       0       0
  1276 ;;Total ram usage:        3 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    3
  1279 ;; This function calls:
  1280 ;;		_LCD_DisStr
  1281 ;;		_LCD_GotoRC
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _LCD_DisStrRC
  1289  041A                     _LCD_DisStrRC:
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _LCD_DisStrRC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1293                           ;LCD_DisStrRC@str stored from wreg
  1294  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1295  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1296  041C  00E9               	movwf	LCD_DisStrRC@str
  1297  041D                     l1676:
  1298                           
  1299                           ;LCD.c: 190: void LCD_DisStrRC(uint8_t* str ,uint8_t row ,uint8_t column);LCD.c: 191: {;
      +                          LCD.c: 192:  LCD_GotoRC(row ,column);
  1300  041D  0868               	movf	LCD_DisStrRC@column,w
  1301  041E  00FF               	movwf	btemp+1
  1302  041F  087F               	movf	btemp+1,w
  1303  0420  00F7               	movwf	LCD_GotoRC@column
  1304  0421  0867               	movf	LCD_DisStrRC@row,w
  1305  0422  120A  118A  2400  120A  118A  	fcall	_LCD_GotoRC
  1306  0427                     l1678:
  1307                           
  1308                           ;LCD.c: 193:  LCD_DisStr(str);
  1309  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0429  0869               	movf	LCD_DisStrRC@str,w
  1312  042A  120A  118A  23C0  120A  118A  	fcall	_LCD_DisStr
  1313  042F                     l136:
  1314  042F  0008               	return
  1315  0430                     __end_of_LCD_DisStrRC:
  1316                           
  1317                           	psect	text4
  1318  0400                     __ptext4:	
  1319 ;; *************** function _LCD_GotoRC *****************
  1320 ;; Defined at:
  1321 ;;		line 179 in file "LCD.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  row             1    wreg     unsigned char 
  1324 ;;  column          1    7[COMMON] unsigned char 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  row             1    0[BANK0 ] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         1       0       0       0       0
  1337 ;;      Locals:         0       1       0       0       0
  1338 ;;      Temps:          0       0       0       0       0
  1339 ;;      Totals:         1       1       0       0       0
  1340 ;;Total ram usage:        2 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    2
  1343 ;; This function calls:
  1344 ;;		_LCD_SendCMD
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;;		_LCD_DisStrRC
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _LCD_GotoRC
  1353  0400                     _LCD_GotoRC:
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _LCD_GotoRC: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1357                           ;LCD_GotoRC@row stored from wreg
  1358  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0402  00E5               	movwf	LCD_GotoRC@row
  1361  0403                     l1648:
  1362                           
  1363                           ;LCD.c: 179: void LCD_GotoRC(uint8_t row ,uint8_t column);LCD.c: 180: {;LCD.c: 181:   if
      +                          (row == 0)
  1364  0403  0865               	movf	LCD_GotoRC@row,w
  1365  0404  1D03               	btfss	3,2
  1366  0405  2C07               	goto	u1231
  1367  0406  2C08               	goto	u1230
  1368  0407                     u1231:
  1369  0407  2C11               	goto	l1652
  1370  0408                     u1230:
  1371  0408                     l1650:
  1372                           
  1373                           ;LCD.c: 182:    LCD_SendCMD( (0x80) | (row + column) );
  1374  0408  0877               	movf	LCD_GotoRC@column,w
  1375  0409  0765               	addwf	LCD_GotoRC@row,w
  1376  040A  3880               	iorlw	128
  1377  040B  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1378  0410  2C19               	goto	l133
  1379  0411                     l1652:
  1380                           
  1381                           ;LCD.c: 185:    LCD_SendCMD( (0x80) | (column + 0x40) );
  1382  0411  0877               	movf	LCD_GotoRC@column,w
  1383  0412  3E40               	addlw	64
  1384  0413  3880               	iorlw	128
  1385  0414  120A  118A  224E  120A  118A  	fcall	_LCD_SendCMD
  1386  0419                     l133:
  1387  0419  0008               	return
  1388  041A                     __end_of_LCD_GotoRC:
  1389                           
  1390                           	psect	text5
  1391  024E                     __ptext5:	
  1392 ;; *************** function _LCD_SendCMD *****************
  1393 ;; Defined at:
  1394 ;;		line 31 in file "LCD.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  COMMAND         1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  COMMAND         1    6[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, btemp+1
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;;		_LCD_Init
  1420 ;;		_LCD_GotoRC
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _LCD_SendCMD
  1426  024E                     _LCD_SendCMD:
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _LCD_SendCMD: [wreg+status,2+status,0+btemp+1]
  1430                           ;LCD_SendCMD@COMMAND stored from wreg
  1431  024E  00F6               	movwf	LCD_SendCMD@COMMAND
  1432  024F                     l1628:
  1433                           
  1434                           ;LCD.c: 31: void LCD_SendCMD(uint8_t COMMAND);LCD.c: 32: {;LCD.c: 34:     RE2 = 0;
  1435  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0251  1109               	bcf	9,2	;volatile
  1438  0252                     l1630:
  1439                           
  1440                           ;LCD.c: 35:  _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1441  0252  3003               	movlw	3
  1442  0253  00F5               	movwf	??_LCD_SendCMD+1
  1443  0254  3097               	movlw	151
  1444  0255  00F4               	movwf	??_LCD_SendCMD
  1445  0256                     u1317:
  1446  0256  0BF4               	decfsz	??_LCD_SendCMD,f
  1447  0257  2A56               	goto	u1317
  1448  0258  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1449  0259  2A56               	goto	u1317
  1450  025A  2A5B               	nop2
  1451  025B                     l1632:
  1452                           
  1453                           ;LCD.c: 39:         RE1 = 1;
  1454  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1455  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1456  025D  1489               	bsf	9,1	;volatile
  1457                           
  1458                           ;LCD.c: 40:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1459  025E  3003               	movlw	3
  1460  025F  00F5               	movwf	??_LCD_SendCMD+1
  1461  0260  3097               	movlw	151
  1462  0261  00F4               	movwf	??_LCD_SendCMD
  1463  0262                     u1327:
  1464  0262  0BF4               	decfsz	??_LCD_SendCMD,f
  1465  0263  2A62               	goto	u1327
  1466  0264  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1467  0265  2A62               	goto	u1327
  1468  0266  2A67               	nop2
  1469  0267                     l1634:
  1470                           
  1471                           ;LCD.c: 42:         PORTD &= 0x0f;
  1472  0267  300F               	movlw	15
  1473  0268  00FF               	movwf	btemp+1
  1474  0269  087F               	movf	btemp+1,w
  1475  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1476  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1477  026C  0588               	andwf	8,f	;volatile
  1478  026D                     l1636:
  1479                           
  1480                           ;LCD.c: 43:         PORTD |= (COMMAND & 0xF0);
  1481  026D  0876               	movf	LCD_SendCMD@COMMAND,w
  1482  026E  39F0               	andlw	240
  1483  026F  00FF               	movwf	btemp+1
  1484  0270  087F               	movf	btemp+1,w
  1485  0271  0488               	iorwf	8,f	;volatile
  1486                           
  1487                           ;LCD.c: 44:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1488  0272  3003               	movlw	3
  1489  0273  00F5               	movwf	??_LCD_SendCMD+1
  1490  0274  3097               	movlw	151
  1491  0275  00F4               	movwf	??_LCD_SendCMD
  1492  0276                     u1337:
  1493  0276  0BF4               	decfsz	??_LCD_SendCMD,f
  1494  0277  2A76               	goto	u1337
  1495  0278  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1496  0279  2A76               	goto	u1337
  1497  027A  2A7B               	nop2
  1498  027B                     l1638:
  1499                           
  1500                           ;LCD.c: 46:   RE1 = 0;
  1501  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1502  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1503  027D  1089               	bcf	9,1	;volatile
  1504                           
  1505                           ;LCD.c: 47:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1506  027E  3003               	movlw	3
  1507  027F  00F5               	movwf	??_LCD_SendCMD+1
  1508  0280  3097               	movlw	151
  1509  0281  00F4               	movwf	??_LCD_SendCMD
  1510  0282                     u1347:
  1511  0282  0BF4               	decfsz	??_LCD_SendCMD,f
  1512  0283  2A82               	goto	u1347
  1513  0284  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1514  0285  2A82               	goto	u1347
  1515  0286  2A87               	nop2
  1516  0287                     l1640:
  1517                           
  1518                           ;LCD.c: 50:         RE1 = 1;
  1519  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0289  1489               	bsf	9,1	;volatile
  1522                           
  1523                           ;LCD.c: 51:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1524  028A  3003               	movlw	3
  1525  028B  00F5               	movwf	??_LCD_SendCMD+1
  1526  028C  3097               	movlw	151
  1527  028D  00F4               	movwf	??_LCD_SendCMD
  1528  028E                     u1357:
  1529  028E  0BF4               	decfsz	??_LCD_SendCMD,f
  1530  028F  2A8E               	goto	u1357
  1531  0290  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1532  0291  2A8E               	goto	u1357
  1533  0292  2A93               	nop2
  1534  0293                     l1642:
  1535                           
  1536                           ;LCD.c: 53:         PORTD &= 0x0f;
  1537  0293  300F               	movlw	15
  1538  0294  00FF               	movwf	btemp+1
  1539  0295  087F               	movf	btemp+1,w
  1540  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0298  0588               	andwf	8,f	;volatile
  1543  0299                     l1644:
  1544                           
  1545                           ;LCD.c: 54:         PORTD |= ((COMMAND << 4) & 0xF0);
  1546  0299  0876               	movf	LCD_SendCMD@COMMAND,w
  1547  029A  00F4               	movwf	??_LCD_SendCMD
  1548  029B  3003               	movlw	3
  1549  029C                     u1225:
  1550  029C  1003               	clrc
  1551  029D  0DF4               	rlf	??_LCD_SendCMD,f
  1552  029E  3EFF               	addlw	-1
  1553  029F  1D03               	skipz
  1554  02A0  2A9C               	goto	u1225
  1555  02A1  1003               	clrc
  1556  02A2  0D74               	rlf	??_LCD_SendCMD,w
  1557  02A3  39F0               	andlw	240
  1558  02A4  00FF               	movwf	btemp+1
  1559  02A5  087F               	movf	btemp+1,w
  1560  02A6  0488               	iorwf	8,f	;volatile
  1561                           
  1562                           ;LCD.c: 55:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1563  02A7  3003               	movlw	3
  1564  02A8  00F5               	movwf	??_LCD_SendCMD+1
  1565  02A9  3097               	movlw	151
  1566  02AA  00F4               	movwf	??_LCD_SendCMD
  1567  02AB                     u1367:
  1568  02AB  0BF4               	decfsz	??_LCD_SendCMD,f
  1569  02AC  2AAB               	goto	u1367
  1570  02AD  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1571  02AE  2AAB               	goto	u1367
  1572  02AF  2AB0               	nop2
  1573  02B0                     l1646:
  1574                           
  1575                           ;LCD.c: 57:   RE1 = 0;
  1576  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1577  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1578  02B2  1089               	bcf	9,1	;volatile
  1579                           
  1580                           ;LCD.c: 58:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1581  02B3  3003               	movlw	3
  1582  02B4  00F5               	movwf	??_LCD_SendCMD+1
  1583  02B5  3097               	movlw	151
  1584  02B6  00F4               	movwf	??_LCD_SendCMD
  1585  02B7                     u1377:
  1586  02B7  0BF4               	decfsz	??_LCD_SendCMD,f
  1587  02B8  2AB7               	goto	u1377
  1588  02B9  0BF5               	decfsz	??_LCD_SendCMD+1,f
  1589  02BA  2AB7               	goto	u1377
  1590  02BB  2ABC               	nop2
  1591  02BC                     l119:
  1592  02BC  0008               	return
  1593  02BD                     __end_of_LCD_SendCMD:
  1594                           
  1595                           	psect	text6
  1596  03C0                     __ptext6:	
  1597 ;; *************** function _LCD_DisStr *****************
  1598 ;; Defined at:
  1599 ;;		line 120 in file "LCD.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  str             1    wreg     PTR unsigned char 
  1602 ;;		 -> msg6(16), msg5(16), msg4(16), msg2(16), 
  1603 ;;		 -> msg3(16), msg1(16), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  str             1    0[BANK0 ] PTR unsigned char 
  1606 ;;		 -> msg6(16), msg5(16), msg4(16), msg2(16), 
  1607 ;;		 -> msg3(16), msg1(16), 
  1608 ;;  i               1    1[BANK0 ] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       0       0       0       0
  1619 ;;      Locals:         0       2       0       0       0
  1620 ;;      Temps:          1       0       0       0       0
  1621 ;;      Totals:         1       2       0       0       0
  1622 ;;Total ram usage:        3 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    2
  1625 ;; This function calls:
  1626 ;;		_LCD_DisChar
  1627 ;; This function is called by:
  1628 ;;		_LCD_DisStrRC
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _LCD_DisStr
  1634  03C0                     _LCD_DisStr:
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _LCD_DisStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1638                           ;LCD_DisStr@str stored from wreg
  1639  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1640  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1641  03C2  00E5               	movwf	LCD_DisStr@str
  1642  03C3                     l1654:
  1643                           
  1644                           ;LCD.c: 120: void LCD_DisStr(uint8_t* str);LCD.c: 121: {;LCD.c: 122:  uint8_t i=0;
  1645  03C3  01E6               	clrf	LCD_DisStr@i
  1646                           
  1647                           ;LCD.c: 124:  while(str[i] != 0)
  1648  03C4  2BD6               	goto	l1660
  1649  03C5                     l1656:
  1650                           
  1651                           ;LCD.c: 125:  {;LCD.c: 126:   LCD_DisChar(str[i]);
  1652  03C5  0866               	movf	LCD_DisStr@i,w
  1653  03C6  0765               	addwf	LCD_DisStr@str,w
  1654  03C7  00F7               	movwf	??_LCD_DisStr
  1655  03C8  0877               	movf	??_LCD_DisStr,w
  1656  03C9  0084               	movwf	4
  1657  03CA  0800               	movf	0,w
  1658  03CB  120A  118A  22BD  120A  118A  	fcall	_LCD_DisChar
  1659  03D0                     l1658:
  1660                           
  1661                           ;LCD.c: 127:   i++;
  1662  03D0  3001               	movlw	1
  1663  03D1  00FF               	movwf	btemp+1
  1664  03D2  087F               	movf	btemp+1,w
  1665  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1666  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1667  03D5  07E6               	addwf	LCD_DisStr@i,f
  1668  03D6                     l1660:
  1669                           
  1670                           ;LCD.c: 124:  while(str[i] != 0)
  1671  03D6  0866               	movf	LCD_DisStr@i,w
  1672  03D7  0765               	addwf	LCD_DisStr@str,w
  1673  03D8  00F7               	movwf	??_LCD_DisStr
  1674  03D9  0877               	movf	??_LCD_DisStr,w
  1675  03DA  0084               	movwf	4
  1676  03DB  1383               	bcf	3,7	;select IRP bank0
  1677  03DC  0800               	movf	0,w
  1678  03DD  1D03               	btfss	3,2
  1679  03DE  2BE0               	goto	u1241
  1680  03DF  2BE1               	goto	u1240
  1681  03E0                     u1241:
  1682  03E0  2BC5               	goto	l1656
  1683  03E1                     u1240:
  1684  03E1                     l128:
  1685  03E1  0008               	return
  1686  03E2                     __end_of_LCD_DisStr:
  1687                           
  1688                           	psect	text7
  1689  02BD                     __ptext7:	
  1690 ;; *************** function _LCD_DisChar *****************
  1691 ;; Defined at:
  1692 ;;		line 76 in file "LCD.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  DATA            1    wreg     unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  DATA            1    6[COMMON] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, btemp+1
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0       0       0       0
  1707 ;;      Locals:         1       0       0       0       0
  1708 ;;      Temps:          2       0       0       0       0
  1709 ;;      Totals:         3       0       0       0       0
  1710 ;;Total ram usage:        3 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;;		_LCD_DisStr
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _LCD_DisChar
  1723  02BD                     _LCD_DisChar:
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _LCD_DisChar: [wreg+status,2+status,0+btemp+1]
  1727                           ;LCD_DisChar@DATA stored from wreg
  1728  02BD  00F6               	movwf	LCD_DisChar@DATA
  1729  02BE                     l1608:
  1730                           
  1731                           ;LCD.c: 76: void LCD_DisChar(uint8_t DATA);LCD.c: 77: {;LCD.c: 78:     RE2 = 1;
  1732  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02C0  1509               	bsf	9,2	;volatile
  1735  02C1                     l1610:
  1736                           
  1737                           ;LCD.c: 79:  _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1738  02C1  3003               	movlw	3
  1739  02C2  00F5               	movwf	??_LCD_DisChar+1
  1740  02C3  3097               	movlw	151
  1741  02C4  00F4               	movwf	??_LCD_DisChar
  1742  02C5                     u1387:
  1743  02C5  0BF4               	decfsz	??_LCD_DisChar,f
  1744  02C6  2AC5               	goto	u1387
  1745  02C7  0BF5               	decfsz	??_LCD_DisChar+1,f
  1746  02C8  2AC5               	goto	u1387
  1747  02C9  2ACA               	nop2
  1748  02CA                     l1612:
  1749                           
  1750                           ;LCD.c: 83:         RE1 = 1;
  1751  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1752  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1753  02CC  1489               	bsf	9,1	;volatile
  1754                           
  1755                           ;LCD.c: 84:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1756  02CD  3003               	movlw	3
  1757  02CE  00F5               	movwf	??_LCD_DisChar+1
  1758  02CF  3097               	movlw	151
  1759  02D0  00F4               	movwf	??_LCD_DisChar
  1760  02D1                     u1397:
  1761  02D1  0BF4               	decfsz	??_LCD_DisChar,f
  1762  02D2  2AD1               	goto	u1397
  1763  02D3  0BF5               	decfsz	??_LCD_DisChar+1,f
  1764  02D4  2AD1               	goto	u1397
  1765  02D5  2AD6               	nop2
  1766  02D6                     l1614:
  1767                           
  1768                           ;LCD.c: 86:         PORTD &= 0x0f;
  1769  02D6  300F               	movlw	15
  1770  02D7  00FF               	movwf	btemp+1
  1771  02D8  087F               	movf	btemp+1,w
  1772  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1773  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1774  02DB  0588               	andwf	8,f	;volatile
  1775  02DC                     l1616:
  1776                           
  1777                           ;LCD.c: 87:         PORTD |= (DATA & 0xF0);
  1778  02DC  0876               	movf	LCD_DisChar@DATA,w
  1779  02DD  39F0               	andlw	240
  1780  02DE  00FF               	movwf	btemp+1
  1781  02DF  087F               	movf	btemp+1,w
  1782  02E0  0488               	iorwf	8,f	;volatile
  1783                           
  1784                           ;LCD.c: 88:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1785  02E1  3003               	movlw	3
  1786  02E2  00F5               	movwf	??_LCD_DisChar+1
  1787  02E3  3097               	movlw	151
  1788  02E4  00F4               	movwf	??_LCD_DisChar
  1789  02E5                     u1407:
  1790  02E5  0BF4               	decfsz	??_LCD_DisChar,f
  1791  02E6  2AE5               	goto	u1407
  1792  02E7  0BF5               	decfsz	??_LCD_DisChar+1,f
  1793  02E8  2AE5               	goto	u1407
  1794  02E9  2AEA               	nop2
  1795  02EA                     l1618:
  1796                           
  1797                           ;LCD.c: 90:         RE1 = 0;
  1798  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1799  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1800  02EC  1089               	bcf	9,1	;volatile
  1801                           
  1802                           ;LCD.c: 91:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1803  02ED  3003               	movlw	3
  1804  02EE  00F5               	movwf	??_LCD_DisChar+1
  1805  02EF  3097               	movlw	151
  1806  02F0  00F4               	movwf	??_LCD_DisChar
  1807  02F1                     u1417:
  1808  02F1  0BF4               	decfsz	??_LCD_DisChar,f
  1809  02F2  2AF1               	goto	u1417
  1810  02F3  0BF5               	decfsz	??_LCD_DisChar+1,f
  1811  02F4  2AF1               	goto	u1417
  1812  02F5  2AF6               	nop2
  1813  02F6                     l1620:
  1814                           
  1815                           ;LCD.c: 93:         RE1 = 1;
  1816  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1817  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1818  02F8  1489               	bsf	9,1	;volatile
  1819                           
  1820                           ;LCD.c: 94:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1821  02F9  3003               	movlw	3
  1822  02FA  00F5               	movwf	??_LCD_DisChar+1
  1823  02FB  3097               	movlw	151
  1824  02FC  00F4               	movwf	??_LCD_DisChar
  1825  02FD                     u1427:
  1826  02FD  0BF4               	decfsz	??_LCD_DisChar,f
  1827  02FE  2AFD               	goto	u1427
  1828  02FF  0BF5               	decfsz	??_LCD_DisChar+1,f
  1829  0300  2AFD               	goto	u1427
  1830  0301  2B02               	nop2
  1831  0302                     l1622:
  1832                           
  1833                           ;LCD.c: 96:         PORTD &= 0x0f;
  1834  0302  300F               	movlw	15
  1835  0303  00FF               	movwf	btemp+1
  1836  0304  087F               	movf	btemp+1,w
  1837  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0307  0588               	andwf	8,f	;volatile
  1840  0308                     l1624:
  1841                           
  1842                           ;LCD.c: 97:   PORTD |= ((DATA << 4) & 0xF0);
  1843  0308  0876               	movf	LCD_DisChar@DATA,w
  1844  0309  00F4               	movwf	??_LCD_DisChar
  1845  030A  3003               	movlw	3
  1846  030B                     u1215:
  1847  030B  1003               	clrc
  1848  030C  0DF4               	rlf	??_LCD_DisChar,f
  1849  030D  3EFF               	addlw	-1
  1850  030E  1D03               	skipz
  1851  030F  2B0B               	goto	u1215
  1852  0310  1003               	clrc
  1853  0311  0D74               	rlf	??_LCD_DisChar,w
  1854  0312  39F0               	andlw	240
  1855  0313  00FF               	movwf	btemp+1
  1856  0314  087F               	movf	btemp+1,w
  1857  0315  0488               	iorwf	8,f	;volatile
  1858                           
  1859                           ;LCD.c: 98:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1860  0316  3003               	movlw	3
  1861  0317  00F5               	movwf	??_LCD_DisChar+1
  1862  0318  3097               	movlw	151
  1863  0319  00F4               	movwf	??_LCD_DisChar
  1864  031A                     u1437:
  1865  031A  0BF4               	decfsz	??_LCD_DisChar,f
  1866  031B  2B1A               	goto	u1437
  1867  031C  0BF5               	decfsz	??_LCD_DisChar+1,f
  1868  031D  2B1A               	goto	u1437
  1869  031E  2B1F               	nop2
  1870  031F                     l1626:
  1871                           
  1872                           ;LCD.c: 100:   RE1 = 0;
  1873  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0321  1089               	bcf	9,1	;volatile
  1876                           
  1877                           ;LCD.c: 101:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1878  0322  3003               	movlw	3
  1879  0323  00F5               	movwf	??_LCD_DisChar+1
  1880  0324  3097               	movlw	151
  1881  0325  00F4               	movwf	??_LCD_DisChar
  1882  0326                     u1447:
  1883  0326  0BF4               	decfsz	??_LCD_DisChar,f
  1884  0327  2B26               	goto	u1447
  1885  0328  0BF5               	decfsz	??_LCD_DisChar+1,f
  1886  0329  2B26               	goto	u1447
  1887  032A  2B2B               	nop2
  1888  032B                     l122:
  1889  032B  0008               	return
  1890  032C                     __end_of_LCD_DisChar:
  1891                           
  1892                           	psect	text8
  1893  0456                     __ptext8:	
  1894 ;; *************** function _KeyPad_Init *****************
  1895 ;; Defined at:
  1896 ;;		line 6 in file "KeyPad.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		None
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _KeyPad_Init
  1926  0456                     _KeyPad_Init:
  1927  0456                     l1296:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _KeyPad_Init: []
  1930                           
  1931                           
  1932                           ;KeyPad.c: 8:     TRISBbits.TRISB0 = 1;
  1933  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0457  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0458  1406               	bsf	6,0	;volatile
  1936                           
  1937                           ;KeyPad.c: 9:     TRISBbits.TRISB1 = 1;
  1938  0459  1486               	bsf	6,1	;volatile
  1939                           
  1940                           ;KeyPad.c: 10:     TRISBbits.TRISB2 = 1;
  1941  045A  1506               	bsf	6,2	;volatile
  1942                           
  1943                           ;KeyPad.c: 12:     TRISDbits.TRISD0 = 0;
  1944  045B  1008               	bcf	8,0	;volatile
  1945                           
  1946                           ;KeyPad.c: 13:     TRISDbits.TRISD1 = 0;
  1947  045C  1088               	bcf	8,1	;volatile
  1948                           
  1949                           ;KeyPad.c: 14:     TRISDbits.TRISD2 = 0;
  1950  045D  1108               	bcf	8,2	;volatile
  1951                           
  1952                           ;KeyPad.c: 15:     TRISDbits.TRISD3 = 0;
  1953  045E  1188               	bcf	8,3	;volatile
  1954  045F                     l161:
  1955  045F  0008               	return
  1956  0460                     __end_of_KeyPad_Init:
  1957                           
  1958                           	psect	text9
  1959  003A                     __ptext9:	
  1960 ;; *************** function _KeyPad_GetKey *****************
  1961 ;; Defined at:
  1962 ;;		line 19 in file "KeyPad.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      unsigned char 
  1969 ;; Registers used:
  1970 ;;		wreg
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          2       0       0       0       0
  1979 ;;      Totals:         2       0       0       0       0
  1980 ;;Total ram usage:        2 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _KeyPad_GetKey
  1992  003A                     _KeyPad_GetKey:
  1993  003A                     l1304:	
  1994                           ;incstack = 0
  1995                           ; Regs used in _KeyPad_GetKey: [wreg]
  1996                           
  1997                           
  1998                           ;KeyPad.c: 20:     RD0 = 0;
  1999  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2000  003B  1303               	bcf	3,6	;RP1=0, select bank0
  2001  003C  1008               	bcf	8,0	;volatile
  2002                           
  2003                           ;KeyPad.c: 21:     RD1 = 1;
  2004  003D  1488               	bsf	8,1	;volatile
  2005                           
  2006                           ;KeyPad.c: 22:     RD2 = 1;
  2007  003E  1508               	bsf	8,2	;volatile
  2008                           
  2009                           ;KeyPad.c: 23:     RD3 = 1;
  2010  003F  1588               	bsf	8,3	;volatile
  2011                           
  2012                           ;KeyPad.c: 26:     if ((RB0 == 0) && ((PORTD & 0x01) == 0)) {
  2013  0040  1806               	btfsc	6,0	;volatile
  2014  0041  2843               	goto	u651
  2015  0042  2844               	goto	u650
  2016  0043                     u651:
  2017  0043  2852               	goto	l164
  2018  0044                     u650:
  2019  0044                     l1306:
  2020  0044  1808               	btfsc	8,0	;volatile
  2021  0045  2847               	goto	u661
  2022  0046  2848               	goto	u660
  2023  0047                     u661:
  2024  0047  2852               	goto	l164
  2025  0048                     u660:
  2026  0048                     l165:
  2027  0048  1806               	btfsc	6,0	;volatile
  2028  0049  284B               	goto	u671
  2029  004A  284C               	goto	u670
  2030  004B                     u671:
  2031  004B  2850               	goto	l1312
  2032  004C                     u670:
  2033  004C                     l1310:
  2034  004C  1C08               	btfss	8,0	;volatile
  2035  004D  284F               	goto	u681
  2036  004E  2850               	goto	u680
  2037  004F                     u681:
  2038  004F  2848               	goto	l165
  2039  0050                     u680:
  2040  0050                     l1312:
  2041                           
  2042                           ;KeyPad.c: 28:         return('1');
  2043  0050  3031               	movlw	49
  2044  0051  294F               	goto	l170
  2045  0052                     l164:
  2046  0052  1886               	btfsc	6,1	;volatile
  2047  0053  2855               	goto	u691
  2048  0054  2856               	goto	u690
  2049  0055                     u691:
  2050  0055  2864               	goto	l172
  2051  0056                     u690:
  2052  0056                     l1318:
  2053  0056  1808               	btfsc	8,0	;volatile
  2054  0057  2859               	goto	u701
  2055  0058  285A               	goto	u700
  2056  0059                     u701:
  2057  0059  2864               	goto	l172
  2058  005A                     u700:
  2059  005A                     l173:
  2060  005A  1886               	btfsc	6,1	;volatile
  2061  005B  285D               	goto	u711
  2062  005C  285E               	goto	u710
  2063  005D                     u711:
  2064  005D  2862               	goto	l1324
  2065  005E                     u710:
  2066  005E                     l1322:
  2067  005E  1C08               	btfss	8,0	;volatile
  2068  005F  2861               	goto	u721
  2069  0060  2862               	goto	u720
  2070  0061                     u721:
  2071  0061  285A               	goto	l173
  2072  0062                     u720:
  2073  0062                     l1324:
  2074                           
  2075                           ;KeyPad.c: 31:         return('2');
  2076  0062  3032               	movlw	50
  2077  0063  294F               	goto	l170
  2078  0064                     l172:
  2079  0064  1906               	btfsc	6,2	;volatile
  2080  0065  2867               	goto	u731
  2081  0066  2868               	goto	u730
  2082  0067                     u731:
  2083  0067  2876               	goto	l1340
  2084  0068                     u730:
  2085  0068                     l1330:
  2086  0068  1808               	btfsc	8,0	;volatile
  2087  0069  286B               	goto	u741
  2088  006A  286C               	goto	u740
  2089  006B                     u741:
  2090  006B  2876               	goto	l1340
  2091  006C                     u740:
  2092  006C                     l180:
  2093  006C  1906               	btfsc	6,2	;volatile
  2094  006D  286F               	goto	u751
  2095  006E  2870               	goto	u750
  2096  006F                     u751:
  2097  006F  2874               	goto	l1336
  2098  0070                     u750:
  2099  0070                     l1334:
  2100  0070  1C08               	btfss	8,0	;volatile
  2101  0071  2873               	goto	u761
  2102  0072  2874               	goto	u760
  2103  0073                     u761:
  2104  0073  286C               	goto	l180
  2105  0074                     u760:
  2106  0074                     l1336:
  2107                           
  2108                           ;KeyPad.c: 34:         return('3');
  2109  0074  3033               	movlw	51
  2110  0075  294F               	goto	l170
  2111  0076                     l1340:
  2112                           
  2113                           ;KeyPad.c: 37:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2114  0076  3034               	movlw	52
  2115  0077  00F5               	movwf	??_KeyPad_GetKey+1
  2116  0078  30F1               	movlw	241
  2117  0079  00F4               	movwf	??_KeyPad_GetKey
  2118  007A                     u1457:
  2119  007A  0BF4               	decfsz	??_KeyPad_GetKey,f
  2120  007B  287A               	goto	u1457
  2121  007C  0BF5               	decfsz	??_KeyPad_GetKey+1,f
  2122  007D  287A               	goto	u1457
  2123  007E  287F               	nop2
  2124  007F                     l1342:
  2125                           
  2126                           ;KeyPad.c: 38:     RD0 = 1;
  2127  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0081  1408               	bsf	8,0	;volatile
  2130  0082                     l1344:
  2131                           
  2132                           ;KeyPad.c: 39:     RD1 = 0;
  2133  0082  1088               	bcf	8,1	;volatile
  2134  0083                     l1346:
  2135                           
  2136                           ;KeyPad.c: 40:     RD2 = 1;
  2137  0083  1508               	bsf	8,2	;volatile
  2138  0084                     l1348:
  2139                           
  2140                           ;KeyPad.c: 41:     RD3 = 1;
  2141  0084  1588               	bsf	8,3	;volatile
  2142  0085                     l1350:
  2143                           
  2144                           ;KeyPad.c: 44:     if ((RB0 == 0) && ((PORTD & 0x02) == 0)) {
  2145  0085  1806               	btfsc	6,0	;volatile
  2146  0086  2888               	goto	u771
  2147  0087  2889               	goto	u770
  2148  0088                     u771:
  2149  0088  2897               	goto	l185
  2150  0089                     u770:
  2151  0089                     l1352:
  2152  0089  1888               	btfsc	8,1	;volatile
  2153  008A  288C               	goto	u781
  2154  008B  288D               	goto	u780
  2155  008C                     u781:
  2156  008C  2897               	goto	l185
  2157  008D                     u780:
  2158  008D                     l186:
  2159  008D  1806               	btfsc	6,0	;volatile
  2160  008E  2890               	goto	u791
  2161  008F  2891               	goto	u790
  2162  0090                     u791:
  2163  0090  2895               	goto	l1358
  2164  0091                     u790:
  2165  0091                     l1356:
  2166  0091  1C88               	btfss	8,1	;volatile
  2167  0092  2894               	goto	u801
  2168  0093  2895               	goto	u800
  2169  0094                     u801:
  2170  0094  288D               	goto	l186
  2171  0095                     u800:
  2172  0095                     l1358:
  2173                           
  2174                           ;KeyPad.c: 46:         return('*');
  2175  0095  302A               	movlw	42
  2176  0096  294F               	goto	l170
  2177  0097                     l185:
  2178  0097  1886               	btfsc	6,1	;volatile
  2179  0098  289A               	goto	u811
  2180  0099  289B               	goto	u810
  2181  009A                     u811:
  2182  009A  28A9               	goto	l192
  2183  009B                     u810:
  2184  009B                     l1364:
  2185  009B  1888               	btfsc	8,1	;volatile
  2186  009C  289E               	goto	u821
  2187  009D  289F               	goto	u820
  2188  009E                     u821:
  2189  009E  28A9               	goto	l192
  2190  009F                     u820:
  2191  009F                     l193:
  2192  009F  1886               	btfsc	6,1	;volatile
  2193  00A0  28A2               	goto	u831
  2194  00A1  28A3               	goto	u830
  2195  00A2                     u831:
  2196  00A2  28A7               	goto	l1370
  2197  00A3                     u830:
  2198  00A3                     l1368:
  2199  00A3  1C88               	btfss	8,1	;volatile
  2200  00A4  28A6               	goto	u841
  2201  00A5  28A7               	goto	u840
  2202  00A6                     u841:
  2203  00A6  289F               	goto	l193
  2204  00A7                     u840:
  2205  00A7                     l1370:
  2206                           
  2207                           ;KeyPad.c: 49:         return('0');
  2208  00A7  3030               	movlw	48
  2209  00A8  294F               	goto	l170
  2210  00A9                     l192:
  2211  00A9  1906               	btfsc	6,2	;volatile
  2212  00AA  28AC               	goto	u851
  2213  00AB  28AD               	goto	u850
  2214  00AC                     u851:
  2215  00AC  28BB               	goto	l1386
  2216  00AD                     u850:
  2217  00AD                     l1376:
  2218  00AD  1888               	btfsc	8,1	;volatile
  2219  00AE  28B0               	goto	u861
  2220  00AF  28B1               	goto	u860
  2221  00B0                     u861:
  2222  00B0  28BB               	goto	l1386
  2223  00B1                     u860:
  2224  00B1                     l200:
  2225  00B1  1906               	btfsc	6,2	;volatile
  2226  00B2  28B4               	goto	u871
  2227  00B3  28B5               	goto	u870
  2228  00B4                     u871:
  2229  00B4  28B9               	goto	l1382
  2230  00B5                     u870:
  2231  00B5                     l1380:
  2232  00B5  1C88               	btfss	8,1	;volatile
  2233  00B6  28B8               	goto	u881
  2234  00B7  28B9               	goto	u880
  2235  00B8                     u881:
  2236  00B8  28B1               	goto	l200
  2237  00B9                     u880:
  2238  00B9                     l1382:
  2239                           
  2240                           ;KeyPad.c: 52:         return('#');
  2241  00B9  3023               	movlw	35
  2242  00BA  294F               	goto	l170
  2243  00BB                     l1386:
  2244                           
  2245                           ;KeyPad.c: 54:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2246  00BB  3034               	movlw	52
  2247  00BC  00F5               	movwf	??_KeyPad_GetKey+1
  2248  00BD  30F1               	movlw	241
  2249  00BE  00F4               	movwf	??_KeyPad_GetKey
  2250  00BF                     u1467:
  2251  00BF  0BF4               	decfsz	??_KeyPad_GetKey,f
  2252  00C0  28BF               	goto	u1467
  2253  00C1  0BF5               	decfsz	??_KeyPad_GetKey+1,f
  2254  00C2  28BF               	goto	u1467
  2255  00C3  28C4               	nop2
  2256  00C4                     l1388:
  2257                           
  2258                           ;KeyPad.c: 55:     RD0 = 1;
  2259  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2260  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2261  00C6  1408               	bsf	8,0	;volatile
  2262  00C7                     l1390:
  2263                           
  2264                           ;KeyPad.c: 56:     RD1 = 1;
  2265  00C7  1488               	bsf	8,1	;volatile
  2266  00C8                     l1392:
  2267                           
  2268                           ;KeyPad.c: 57:     RD2 = 0;
  2269  00C8  1108               	bcf	8,2	;volatile
  2270  00C9                     l1394:
  2271                           
  2272                           ;KeyPad.c: 58:     RD3 = 1;
  2273  00C9  1588               	bsf	8,3	;volatile
  2274  00CA                     l1396:
  2275                           
  2276                           ;KeyPad.c: 61:     if ((RB0 == 0) && ((PORTD & 0x04) == 0)) {
  2277  00CA  1806               	btfsc	6,0	;volatile
  2278  00CB  28CD               	goto	u891
  2279  00CC  28CE               	goto	u890
  2280  00CD                     u891:
  2281  00CD  28DC               	goto	l205
  2282  00CE                     u890:
  2283  00CE                     l1398:
  2284  00CE  1908               	btfsc	8,2	;volatile
  2285  00CF  28D1               	goto	u901
  2286  00D0  28D2               	goto	u900
  2287  00D1                     u901:
  2288  00D1  28DC               	goto	l205
  2289  00D2                     u900:
  2290  00D2                     l206:
  2291  00D2  1806               	btfsc	6,0	;volatile
  2292  00D3  28D5               	goto	u911
  2293  00D4  28D6               	goto	u910
  2294  00D5                     u911:
  2295  00D5  28DA               	goto	l1404
  2296  00D6                     u910:
  2297  00D6                     l1402:
  2298  00D6  1D08               	btfss	8,2	;volatile
  2299  00D7  28D9               	goto	u921
  2300  00D8  28DA               	goto	u920
  2301  00D9                     u921:
  2302  00D9  28D2               	goto	l206
  2303  00DA                     u920:
  2304  00DA                     l1404:
  2305                           
  2306                           ;KeyPad.c: 63:         return('7');
  2307  00DA  3037               	movlw	55
  2308  00DB  294F               	goto	l170
  2309  00DC                     l205:
  2310  00DC  1886               	btfsc	6,1	;volatile
  2311  00DD  28DF               	goto	u931
  2312  00DE  28E0               	goto	u930
  2313  00DF                     u931:
  2314  00DF  28EE               	goto	l212
  2315  00E0                     u930:
  2316  00E0                     l1410:
  2317  00E0  1908               	btfsc	8,2	;volatile
  2318  00E1  28E3               	goto	u941
  2319  00E2  28E4               	goto	u940
  2320  00E3                     u941:
  2321  00E3  28EE               	goto	l212
  2322  00E4                     u940:
  2323  00E4                     l213:
  2324  00E4  1886               	btfsc	6,1	;volatile
  2325  00E5  28E7               	goto	u951
  2326  00E6  28E8               	goto	u950
  2327  00E7                     u951:
  2328  00E7  28EC               	goto	l1416
  2329  00E8                     u950:
  2330  00E8                     l1414:
  2331  00E8  1D08               	btfss	8,2	;volatile
  2332  00E9  28EB               	goto	u961
  2333  00EA  28EC               	goto	u960
  2334  00EB                     u961:
  2335  00EB  28E4               	goto	l213
  2336  00EC                     u960:
  2337  00EC                     l1416:
  2338                           
  2339                           ;KeyPad.c: 66:         return('8');
  2340  00EC  3038               	movlw	56
  2341  00ED  294F               	goto	l170
  2342  00EE                     l212:
  2343  00EE  1906               	btfsc	6,2	;volatile
  2344  00EF  28F1               	goto	u971
  2345  00F0  28F2               	goto	u970
  2346  00F1                     u971:
  2347  00F1  2900               	goto	l1432
  2348  00F2                     u970:
  2349  00F2                     l1422:
  2350  00F2  1908               	btfsc	8,2	;volatile
  2351  00F3  28F5               	goto	u981
  2352  00F4  28F6               	goto	u980
  2353  00F5                     u981:
  2354  00F5  2900               	goto	l1432
  2355  00F6                     u980:
  2356  00F6                     l220:
  2357  00F6  1886               	btfsc	6,1	;volatile
  2358  00F7  28F9               	goto	u991
  2359  00F8  28FA               	goto	u990
  2360  00F9                     u991:
  2361  00F9  28FE               	goto	l1428
  2362  00FA                     u990:
  2363  00FA                     l1426:
  2364  00FA  1D08               	btfss	8,2	;volatile
  2365  00FB  28FD               	goto	u1001
  2366  00FC  28FE               	goto	u1000
  2367  00FD                     u1001:
  2368  00FD  28F6               	goto	l220
  2369  00FE                     u1000:
  2370  00FE                     l1428:
  2371                           
  2372                           ;KeyPad.c: 69:         return('9');
  2373  00FE  3039               	movlw	57
  2374  00FF  294F               	goto	l170
  2375  0100                     l1432:
  2376                           
  2377                           ;KeyPad.c: 71:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2378  0100  3034               	movlw	52
  2379  0101  00F5               	movwf	??_KeyPad_GetKey+1
  2380  0102  30F1               	movlw	241
  2381  0103  00F4               	movwf	??_KeyPad_GetKey
  2382  0104                     u1477:
  2383  0104  0BF4               	decfsz	??_KeyPad_GetKey,f
  2384  0105  2904               	goto	u1477
  2385  0106  0BF5               	decfsz	??_KeyPad_GetKey+1,f
  2386  0107  2904               	goto	u1477
  2387  0108  2909               	nop2
  2388  0109                     l1434:
  2389                           
  2390                           ;KeyPad.c: 73:     RD0 = 1;
  2391  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2392  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2393  010B  1408               	bsf	8,0	;volatile
  2394  010C                     l1436:
  2395                           
  2396                           ;KeyPad.c: 74:     RD1 = 1;
  2397  010C  1488               	bsf	8,1	;volatile
  2398  010D                     l1438:
  2399                           
  2400                           ;KeyPad.c: 75:     RD2 = 1;
  2401  010D  1508               	bsf	8,2	;volatile
  2402  010E                     l1440:
  2403                           
  2404                           ;KeyPad.c: 76:     RD3 = 0;
  2405  010E  1188               	bcf	8,3	;volatile
  2406  010F                     l1442:
  2407                           
  2408                           ;KeyPad.c: 79:     if ((RB0 == 0) && ((PORTD & 0x08) == 0)) {
  2409  010F  1806               	btfsc	6,0	;volatile
  2410  0110  2912               	goto	u1011
  2411  0111  2913               	goto	u1010
  2412  0112                     u1011:
  2413  0112  2921               	goto	l225
  2414  0113                     u1010:
  2415  0113                     l1444:
  2416  0113  1988               	btfsc	8,3	;volatile
  2417  0114  2916               	goto	u1021
  2418  0115  2917               	goto	u1020
  2419  0116                     u1021:
  2420  0116  2921               	goto	l225
  2421  0117                     u1020:
  2422  0117                     l226:
  2423  0117  1806               	btfsc	6,0	;volatile
  2424  0118  291A               	goto	u1031
  2425  0119  291B               	goto	u1030
  2426  011A                     u1031:
  2427  011A  291F               	goto	l1450
  2428  011B                     u1030:
  2429  011B                     l1448:
  2430  011B  1D88               	btfss	8,3	;volatile
  2431  011C  291E               	goto	u1041
  2432  011D  291F               	goto	u1040
  2433  011E                     u1041:
  2434  011E  2917               	goto	l226
  2435  011F                     u1040:
  2436  011F                     l1450:
  2437                           
  2438                           ;KeyPad.c: 81:         return('4');
  2439  011F  3034               	movlw	52
  2440  0120  294F               	goto	l170
  2441  0121                     l225:
  2442  0121  1886               	btfsc	6,1	;volatile
  2443  0122  2924               	goto	u1051
  2444  0123  2925               	goto	u1050
  2445  0124                     u1051:
  2446  0124  2933               	goto	l232
  2447  0125                     u1050:
  2448  0125                     l1456:
  2449  0125  1988               	btfsc	8,3	;volatile
  2450  0126  2928               	goto	u1061
  2451  0127  2929               	goto	u1060
  2452  0128                     u1061:
  2453  0128  2933               	goto	l232
  2454  0129                     u1060:
  2455  0129                     l233:
  2456  0129  1886               	btfsc	6,1	;volatile
  2457  012A  292C               	goto	u1071
  2458  012B  292D               	goto	u1070
  2459  012C                     u1071:
  2460  012C  2931               	goto	l1462
  2461  012D                     u1070:
  2462  012D                     l1460:
  2463  012D  1D88               	btfss	8,3	;volatile
  2464  012E  2930               	goto	u1081
  2465  012F  2931               	goto	u1080
  2466  0130                     u1081:
  2467  0130  2929               	goto	l233
  2468  0131                     u1080:
  2469  0131                     l1462:
  2470                           
  2471                           ;KeyPad.c: 84:         return('5');
  2472  0131  3035               	movlw	53
  2473  0132  294F               	goto	l170
  2474  0133                     l232:
  2475  0133  1906               	btfsc	6,2	;volatile
  2476  0134  2936               	goto	u1091
  2477  0135  2937               	goto	u1090
  2478  0136                     u1091:
  2479  0136  2945               	goto	l1478
  2480  0137                     u1090:
  2481  0137                     l1468:
  2482  0137  1988               	btfsc	8,3	;volatile
  2483  0138  293A               	goto	u1101
  2484  0139  293B               	goto	u1100
  2485  013A                     u1101:
  2486  013A  2945               	goto	l1478
  2487  013B                     u1100:
  2488  013B                     l240:
  2489  013B  1906               	btfsc	6,2	;volatile
  2490  013C  293E               	goto	u1111
  2491  013D  293F               	goto	u1110
  2492  013E                     u1111:
  2493  013E  2943               	goto	l1474
  2494  013F                     u1110:
  2495  013F                     l1472:
  2496  013F  1D88               	btfss	8,3	;volatile
  2497  0140  2942               	goto	u1121
  2498  0141  2943               	goto	u1120
  2499  0142                     u1121:
  2500  0142  293B               	goto	l240
  2501  0143                     u1120:
  2502  0143                     l1474:
  2503                           
  2504                           ;KeyPad.c: 87:         return('6');
  2505  0143  3036               	movlw	54
  2506  0144  294F               	goto	l170
  2507  0145                     l1478:
  2508                           
  2509                           ;KeyPad.c: 89:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2510  0145  3034               	movlw	52
  2511  0146  00F5               	movwf	??_KeyPad_GetKey+1
  2512  0147  30F1               	movlw	241
  2513  0148  00F4               	movwf	??_KeyPad_GetKey
  2514  0149                     u1487:
  2515  0149  0BF4               	decfsz	??_KeyPad_GetKey,f
  2516  014A  2949               	goto	u1487
  2517  014B  0BF5               	decfsz	??_KeyPad_GetKey+1,f
  2518  014C  2949               	goto	u1487
  2519  014D  294E               	nop2
  2520                           
  2521                           ;KeyPad.c: 90:     return(0);
  2522  014E  3000               	movlw	0
  2523  014F                     l170:
  2524  014F  0008               	return
  2525  0150                     __end_of_KeyPad_GetKey:
  2526                           
  2527                           	psect	text10
  2528  0397                     __ptext10:	
  2529 ;; *************** function _ISR *****************
  2530 ;; Defined at:
  2531 ;;		line 31 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          4       0       0       0       0
  2548 ;;      Totals:         4       0       0       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		Interrupt level 1
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _ISR
  2560  0397                     _ISR:
  2561  0397                     i1l1482:
  2562                           
  2563                           ;main.c: 35:     if (TMR1IF) {
  2564  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0399  1C0C               	btfss	12,0	;volatile
  2567  039A  2B9C               	goto	u113_21
  2568  039B  2B9D               	goto	u113_20
  2569  039C                     u113_21:
  2570  039C  2BB9               	goto	i1l69
  2571  039D                     u113_20:
  2572  039D                     i1l1484:
  2573                           
  2574                           ;main.c: 36:         Timer_Counter++;
  2575  039D  3001               	movlw	1
  2576  039E  07F8               	addwf	_Timer_Counter,f
  2577  039F  1803               	skipnc
  2578  03A0  0AF9               	incf	_Timer_Counter+1,f
  2579  03A1  3000               	movlw	0
  2580  03A2  07F9               	addwf	_Timer_Counter+1,f
  2581                           
  2582                           ;main.c: 37:         if (Timer_Counter == LED_Blinking_Rate) {
  2583  03A3  082A               	movf	_LED_Blinking_Rate,w
  2584  03A4  00F0               	movwf	??_ISR
  2585  03A5  01F1               	clrf	??_ISR+1
  2586  03A6  0879               	movf	_Timer_Counter+1,w
  2587  03A7  0671               	xorwf	??_ISR+1,w
  2588  03A8  1D03               	skipz
  2589  03A9  2BAC               	goto	u114_25
  2590  03AA  0878               	movf	_Timer_Counter,w
  2591  03AB  0670               	xorwf	??_ISR,w
  2592  03AC                     u114_25:
  2593  03AC  1D03               	skipz
  2594  03AD  2BAF               	goto	u114_21
  2595  03AE  2BB0               	goto	u114_20
  2596  03AF                     u114_21:
  2597  03AF  2BB4               	goto	i1l1490
  2598  03B0                     u114_20:
  2599  03B0                     i1l1486:
  2600                           
  2601                           ;main.c: 38:             RB7 = ~RB7;
  2602  03B0  3080               	movlw	128
  2603  03B1  0686               	xorwf	6,f
  2604  03B2                     i1l1488:
  2605                           
  2606                           ;main.c: 39:             Timer_Counter = 0;
  2607  03B2  01F8               	clrf	_Timer_Counter
  2608  03B3  01F9               	clrf	_Timer_Counter+1
  2609  03B4                     i1l1490:
  2610                           
  2611                           ;main.c: 44:         TMR1 = 65536 - 50000;
  2612  03B4  303C               	movlw	60
  2613  03B5  008F               	movwf	15	;volatile
  2614  03B6  30B0               	movlw	176
  2615  03B7  008E               	movwf	14	;volatile
  2616  03B8                     i1l1492:
  2617                           
  2618                           ;main.c: 45:         TMR1IF = 0;
  2619  03B8  100C               	bcf	12,0	;volatile
  2620  03B9                     i1l69:
  2621  03B9  0873               	movf	??_ISR+3,w
  2622  03BA  008A               	movwf	10
  2623  03BB  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  2624  03BC  0083               	movwf	3
  2625  03BD  0EFE               	swapf	btemp,f
  2626  03BE  0E7E               	swapf	btemp,w
  2627  03BF  0009               	retfie
  2628  03C0                     __end_of_ISR:
  2629  007E                     btemp	set	126	;btemp
  2630  007E                     wtemp0	set	126
  2631                           
  2632                           	psect	intentry
  2633  0004                     __pintentry:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _ISR: [wreg+status,2]
  2636                           
  2637  0004                     interrupt_function:
  2638  007E                     saved_w	set	btemp
  2639  0004  00FE               	movwf	btemp
  2640  0005  0E03               	swapf	3,w
  2641  0006  00F2               	movwf	??_ISR+2
  2642  0007  080A               	movf	10,w
  2643  0008  00F3               	movwf	??_ISR+3
  2644  0009  120A  118A  2B97   	ljmp	_ISR
  2645                           
  2646                           	psect	config
  2647                           
  2648                           ;Config register CONFIG @ 0x2007
  2649                           ;	Oscillator Selection bits
  2650                           ;	FOSC = XT, XT oscillator
  2651                           ;	Watchdog Timer Enable bit
  2652                           ;	WDTE = OFF, WDT disabled
  2653                           ;	Power-up Timer Enable bit
  2654                           ;	PWRTE = ON, PWRT enabled
  2655                           ;	Brown-out Reset Enable bit
  2656                           ;	BOREN = ON, BOR enabled
  2657                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2658                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2659                           ;	Data EEPROM Memory Code Protection bit
  2660                           ;	CPD = OFF, Data EEPROM code protection off
  2661                           ;	Flash Program Memory Write Enable bits
  2662                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2663                           ;	In-Circuit Debugger Mode bit
  2664                           ;	DEBUG = 0x1, unprogrammed default
  2665                           ;	Flash Program Memory Code Protection bit
  2666                           ;	CP = OFF, Code protection off
  2667  2007                     	org	8199
  2668  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        107
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     10      79
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_DisStrRC@str	PTR unsigned char  size(1) Largest target is 16
		 -> msg6(BANK1[16]), msg5(BANK1[16]), msg4(BANK1[16]), msg2(BANK0[16]), 
		 -> msg3(BANK0[16]), msg1(BANK0[16]), 

    LCD_DisStr@str	PTR unsigned char  size(1) Largest target is 16
		 -> msg6(BANK1[16]), msg5(BANK1[16]), msg4(BANK1[16]), msg2(BANK0[16]), 
		 -> msg3(BANK0[16]), msg1(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_GotoRC
    _LCD_Init->_LCD_SendCMD
    _LCD_DisStrRC->_LCD_DisStr
    _LCD_DisStrRC->_LCD_GotoRC
    _LCD_GotoRC->_LCD_SendCMD
    _LCD_DisStr->_LCD_DisChar

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_DisStrRC
    _LCD_DisStrRC->_LCD_DisStr

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2922
                                              5 BANK0      5     5      0
                      _KeyPad_GetKey
                        _KeyPad_Init
                        _LCD_DisChar
                       _LCD_DisStrRC
                         _LCD_GotoRC
                           _LCD_Init
                        _LCD_SendCMD
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      62
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_DisStrRC                                         3     1      2    2073
                                              2 BANK0      3     1      2
                         _LCD_DisStr
                         _LCD_GotoRC
 ---------------------------------------------------------------------------------
 (1) _LCD_GotoRC                                           2     1      1     456
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SendCMD                                          3     3      0      62
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_DisStr                                           3     3      0     228
                                              7 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _LCD_DisChar
 ---------------------------------------------------------------------------------
 (3) _LCD_DisChar                                          3     3      0      62
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _KeyPad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyPad_GetKey                                        2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _KeyPad_GetKey
   _KeyPad_Init
   _LCD_DisChar
   _LCD_DisStrRC
     _LCD_DisStr
       _LCD_DisChar
     _LCD_GotoRC
       _LCD_SendCMD
   _LCD_GotoRC
     _LCD_SendCMD
   _LCD_Init
     _LCD_SendCMD
   _LCD_SendCMD
   _Timer1_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      89      12        0.0%
ABS                  0      0      89       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 10 06:48:11 2020

            ?_LCD_DisStr 0070             ?_LCD_DisChar 0070                        pc 0002  
            ?_LCD_GotoRC 0077                       l91 024A                       l92 024A  
                     l87 0227                       l88 0227                       l99 0455  
                     fsr 0004            ?_LCD_DisStrRC 0067             ?_LCD_SendCMD 0070  
                    l200 00B1                      l122 032B                      l220 00F6  
                    l212 00EE                      l116 03FF                      l213 00E4  
                    l205 00DC                      l133 0419                      l206 00D2  
                    l119 02BC                      l240 013B                      l232 0133  
                    l128 03E1                      l136 042F                      l233 0129  
                    l225 0121                      l161 045F                      l226 0117  
                    l170 014F                      l180 006C                      l172 0064  
                    l164 0052                      l173 005A                      l165 0048  
                    l192 00A9                      l193 009F                      l185 0097  
                    l186 008D                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RB7 0037  
                    _RE1 0049                      _RD3 0043                      _RE2 004A  
                    u700 005A                      _ISR 0397                      u701 0059  
                    u710 005E                      u711 005D                      u800 0095  
                    u720 0062                      u801 0094                      u721 0061  
                    u810 009B                      u730 0068                      u650 0044  
                    u811 009A                      u731 0067                      u651 0043  
                    u900 00D2                      u820 009F                      u740 006C  
                    u660 0048                      u901 00D1                      u821 009E  
                    u741 006B                      u661 0047                      u910 00D6  
                    u830 00A3                      u750 0070                      u670 004C  
                    u911 00D5                      u831 00A2                      u751 006F  
                    u671 004B                      u920 00DA                      u840 00A7  
                    u760 0074                      u680 0050                      u921 00D9  
                    u841 00A6                      u761 0073                      u681 004F  
                    u930 00E0                      u850 00AD                      u770 0089  
                    u690 0056                      u931 00DF                      u851 00AC  
                    u771 0088                      u691 0055                      u940 00E4  
                    u860 00B1                      u780 008D                      u941 00E3  
                    u861 00B0                      u781 008C                      u950 00E8  
                    u870 00B5                      u790 0091                      u951 00E7  
                    u871 00B4                      u791 0090                      u960 00EC  
                    u880 00B9                      u961 00EB                      u881 00B8  
                    u970 00F2                      u890 00CE                      u971 00F1  
                    u891 00CD                      u980 00F6                      u981 00F5  
                    u990 00FA                      u991 00F9            ??_KeyPad_Init 0074  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
                   l1310 004C                     l1312 0050                     l1304 003A  
                   l1410 00E0                     l1402 00D6                     l1330 0068  
                   l1322 005E                     l1306 0044                     l1404 00DA  
                   l1340 0076                     l1324 0062                     l1422 00F2  
                   l1414 00E8                     l1350 0085                     l1342 007F  
                   l1334 0070                     l1318 0056                     l1440 010E  
                   l1432 0100                     l1416 00EC                     l1352 0089  
                   l1344 0082                     l1336 0074                     l1450 011F  
                   l1442 010F                     l1434 0109                     l1426 00FA  
                   l1370 00A7                     l1346 0083                     l1610 02C1  
                   l1460 012D                     l1444 0113                     l1436 010C  
                   l1428 00FE                     l1380 00B5                     l1364 009B  
                   l1356 0091                     l1348 0084                     l1620 02F6  
                   l1612 02CA                     l1700 0197                     l1462 0131  
                   l1438 010D                     l1390 00C7                     l1382 00B9  
                   l1358 0095                     l1622 0302                     l1614 02D6  
                   l1630 0252                     l1702 019C                     l1710 01B8  
                   l1472 013F                     l1456 0125                     l1448 011B  
                   l1392 00C8                     l1376 00AD                     l1368 00A3  
                   l1296 0456                     l1624 0308                     l1616 02DC  
                   l1608 02BE                     l1640 0287                     l1632 025B  
                   l1720 01E3                     l1704 01AD                     l1712 01C8  
                   l1474 0143                     l1394 00C9                     l1386 00BB  
                   l1626 031F                     l1618 02EA                     l1642 0293  
                   l1634 0267                     l1650 0408                     l1298 0443  
                   l1722 01E5                     l1730 01F4                     l1714 01CE  
                   l1468 0137                     l1396 00CA                     l1388 00C4  
                   l1660 03D6                     l1644 0299                     l1636 026D  
                   l1628 024F                     l1652 0411                     l1740 020A  
                   l1732 01FA                     l1724 01E6                     l1716 01D0  
                   l1478 0145                     l1398 00CE                     l1654 03C3  
                   l1646 02B0                     l1638 027B                     l1670 03ED  
                   l1662 03E2                     l1750 022D                     l1742 020C  
                   l1734 01FB                     l1726 01EF                     l1718 01DF  
                   l1656 03C5                     l1648 0403                     l1672 03F3  
                   l1664 03E5                     l1752 022F                     l1744 0212  
                   l1736 01FF                     l1680 0150                     l1658 03D0  
                   l1674 03F9                     l1666 03E6                     l1754 0235  
                   l1746 021C                     l1738 0205                     l1690 016D  
                   l1682 0153                     l1676 041D                     l1668 03E7  
                   l1756 023F                     l1748 0228                     l1692 016D  
                   l1684 0158                     l1678 0427                     l1694 0171  
                   l1686 015D                     l1696 017C                     l1688 0162  
                   l1794 01C0                     l1698 018D                     u1000 00FE  
                   u1001 00FD                     u1010 0113                     u1011 0112  
                   u1100 013B                     u1020 0117                     u1101 013A  
                   u1021 0116                     u1110 013F                     u1030 011B  
                   u1111 013E                     u1031 011A                     u1120 0143  
                   u1040 011F                     u1121 0142                     u1041 011E  
                   u1050 0125                     u1051 0124                     u1060 0129  
                   u1300 022D                     u1061 0128                     u1301 022C  
                   u1070 012D                     u1230 0408                     u1071 012C  
                   u1215 030B                     u1231 0407                     u1080 0131  
                   u1240 03E1                     u1081 0130                     u1241 03E0  
                   u1225 029C                     u1090 0137                     u1250 01CE  
                   u1091 0136                     u1251 01CD                     u1260 01DF  
                   u1317 0256                     u1261 01DE                     u1270 01FA  
                   u1407 02E5                     u1327 0262                     u1271 01F9  
                   u1280 0205                     u1417 02F1                     u1337 0276  
                   u1281 0204                     u1290 020A                     u1427 02FD  
                   u1347 0282                     u1291 0209                     u1437 031A  
                   u1357 028E                     u1447 0326                     u1367 02AB  
                   u1457 007A                     u1377 02B7                     u1467 00BF  
                   u1387 02C5                     u1477 0104                     u1397 02D1  
                   u1487 0149                     _PEIE 005E                     i1l69 03B9  
       LCD_GotoRC@column 0077                     _TMR1 000E              LCD_DisStr@i 0066  
                   _main 0150                     _msg1 004B                     _msg2 003B  
                   _msg3 002B                     _msg4 00C0                     _msg5 00B0  
                   _msg6 00A0                     btemp 007E                     start 000C  
                  ??_ISR 0070           ??_LCD_DisStrRC 0078         __end_of_LCD_Init 0400  
                  ?_main 0070          ??_KeyPad_GetKey 0074                    _PORTD 0008  
                  _TRISD 0088      __size_of_LCD_DisStr 0022      __end_of_KeyPad_Init 0460  
                  main@i 006E      __size_of_LCD_GotoRC 001A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 024E                   ??_main 006A                   u113_20 039D  
                 u113_21 039C                   i1l1490 03B4                   i1l1482 0397  
                 i1l1492 03B8                   i1l1484 039D                   i1l1486 03B0  
                 i1l1488 03B2                   u114_20 03B0                   u114_21 03AF  
                 u114_25 03AC   _Entered_Password_Index 0064                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
          ??_Timer1_Init 0074            LCD_DisStr@str 0065     __size_of_LCD_DisChar 006F  
            _KeyPad_Init 0456     __size_of_LCD_SendCMD 006F                   saved_w 007E  
   __end_of_LCD_DisStrRC 0430  __end_of__initialization 0036                ?_LCD_Init 0070  
          LCD_GotoRC@row 0065           __pcstackCOMMON 0070             ??_LCD_DisStr 0077  
           __pidataBANK0 032C             __pidataBANK1 0367             ??_LCD_GotoRC 0078  
    __end_of_Timer1_Init 0456               __pbssBANK0 005B       __end_of_LCD_DisStr 03E2  
     __end_of_LCD_GotoRC 041A               ??_LCD_Init 0077               __pmaintext 0150  
             __pintentry 0004  main@Wrong_Password_Flag 006D                  _T1CKPS0 0084  
                _T1CKPS1 0085              _Timer1_Init 0443                  __ptext1 0443  
                __ptext2 03E2                  __ptext3 041A                  __ptext4 0400  
                __ptext5 024E                  __ptext6 03C0                  __ptext7 02BD  
                __ptext8 0456                  __ptext9 003A             __size_of_ISR 0029  
  __end_of_KeyPad_GetKey 0150    __size_of_LCD_DisStrRC 0016     end_of_initialization 0036  
     LCD_DisStrRC@column 0068             _LCD_DisStrRC 041A             ?_KeyPad_Init 0070  
              _TRISBbits 0086                _TRISDbits 0088                _TRISEbits 0089  
      __size_of_LCD_Init 001E            ??_LCD_DisChar 0074            ??_LCD_SendCMD 0074  
 main@KeyPad_Pressed_Key 006C          _Static_Password 0020        _LED_Blinking_Rate 002A  
    start_initialization 000F              __end_of_ISR 03C0               init_fetch0 0430  
            __pdataBANK0 0020              __pdataBANK1 00A0      __end_of_LCD_DisChar 032C  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0065  
    __end_of_LCD_SendCMD 02BD             ?_Timer1_Init 0070            _Timer_Counter 0078  
   __size_of_KeyPad_Init 000A          LCD_DisChar@DATA 0076        interrupt_function 0004  
               _LCD_Init 03E2              _LCD_DisChar 02BD              _LCD_SendCMD 024E  
 __size_of_KeyPad_GetKey 0116          LCD_DisStrRC@row 0067          LCD_DisStrRC@str 0069  
               __ptext10 0397         _Entered_Password 005B            __size_of_main 00FE  
         _Attempt_Number 0029               _LCD_DisStr 03C0     __size_of_Timer1_Init 0013  
             _LCD_GotoRC 0400            _KeyPad_GetKey 003A                 init_ram0 0434  
               intlevel1 0000           ?_KeyPad_GetKey 0070       LCD_SendCMD@COMMAND 0076  
