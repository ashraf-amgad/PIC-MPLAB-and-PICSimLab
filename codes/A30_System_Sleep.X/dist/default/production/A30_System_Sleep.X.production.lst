

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Nov 06 02:03:56 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataCOMMON
   178  0182                     __pidataCOMMON:
   179                           
   180                           ;initializer for _SSD_status
   181  0182  3401               	retlw	1
   182                           
   183                           	psect	idataBANK0
   184  0173                     __pidataBANK0:
   185                           
   186                           ;initializer for _SSD
   187  0173  343F               	retlw	63
   188  0174  3406               	retlw	6
   189  0175  345B               	retlw	91
   190  0176  344F               	retlw	79
   191  0177  3466               	retlw	102
   192  0178  346D               	retlw	109
   193  0179  347D               	retlw	125
   194  017A  3407               	retlw	7
   195  017B  347F               	retlw	127
   196  017C  346F               	retlw	111
   197                           
   198                           ;initializer for _Display_Rate
   199  017D  34A8               	retlw	168
   200  017E  3461               	retlw	97
   201                           
   202                           ;initializer for _Counter
   203  017F  34D2               	retlw	210
   204  0180  3404               	retlw	4
   205                           
   206                           ;initializer for _activity_flag
   207  0181  3401               	retlw	1
   208                           
   209                           	psect	nvBANK0
   210  002F                     __pnvBANK0:
   211  002F                     _SSD4_counter:
   212  002F                     	ds	1
   213  0030                     _SSD3_counter:
   214  0030                     	ds	1
   215  0031                     _SSD2_counter:
   216  0031                     	ds	1
   217  0032                     _SSD1_counter:
   218  0032                     	ds	1
   219  000E                     _TMR1	set	14
   220  0008                     _PORTD	set	8
   221  0047                     _RD7	set	71
   222  005F                     _GIE	set	95
   223  005E                     _PEIE	set	94
   224  005C                     _INTE	set	92
   225  0030                     _RB0	set	48
   226  0085                     _T1CKPS1	set	133
   227  0084                     _T1CKPS0	set	132
   228  0081                     _TMR1CS	set	129
   229  002D                     _RA5	set	45
   230  002C                     _RA4	set	44
   231  002B                     _RA3	set	43
   232  002A                     _RA2	set	42
   233  0080                     _TMR1ON	set	128
   234  0059                     _INTF	set	89
   235  0060                     _TMR1IF	set	96
   236  0085                     _TRISA	set	133
   237  0088                     _TRISD	set	136
   238  0086                     _TRISBbits	set	134
   239  0460                     _TMR1IE	set	1120
   240  040E                     _INTEDG	set	1038
   241                           
   242                           	psect	cinit
   243  0013                     start_initialization:	
   244                           ; #config settings
   245                           
   246  0013                     __initialization:
   247                           
   248                           ; Initialize objects allocated to BANK0
   249  0013  1383               	bcf	3,7	;select IRP bank0
   250  0014  302F               	movlw	low (__pdataBANK0+15)
   251  0015  00FD               	movwf	btemp+-1
   252  0016  3001               	movlw	high __pidataBANK0
   253  0017  00FE               	movwf	btemp
   254  0018  3073               	movlw	low __pidataBANK0
   255  0019  00FF               	movwf	btemp+1
   256  001A  3020               	movlw	low __pdataBANK0
   257  001B  0084               	movwf	4
   258  001C  120A  118A  2164  120A  118A  	fcall	init_ram0
   259                           
   260                           ; Initialize objects allocated to COMMON
   261  0021  120A  118A  2182  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   262  0026  00FD               	movwf	__pdataCOMMON& (0+127)
   263                           
   264                           ; Clear objects allocated to BANK0
   265  0027  01B5               	clrf	__pbssBANK0& (0+127)
   266                           
   267                           ; Clear objects allocated to COMMON
   268  0028  01FB               	clrf	__pbssCOMMON& (0+127)
   269  0029  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   270  002A                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  002A                     __end_of__initialization:
   274  002A  0183               	clrf	3
   275  002B  120A  118A  282E   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMMON
   278  007B                     __pbssCOMMON:
   279  007B                     _timer_counter:
   280  007B                     	ds	1
   281  007C                     _Led_Blink_flag:
   282  007C                     	ds	1
   283                           
   284                           	psect	dataCOMMON
   285  007D                     __pdataCOMMON:
   286  007D                     _SSD_status:
   287  007D                     	ds	1
   288                           
   289                           	psect	bssBANK0
   290  0035                     __pbssBANK0:
   291  0035                     _sleep_flag:
   292  0035                     	ds	1
   293                           
   294                           	psect	dataBANK0
   295  0020                     __pdataBANK0:
   296  0020                     _SSD:
   297  0020                     	ds	10
   298  002A                     _Display_Rate:
   299  002A                     	ds	2
   300  002C                     _Counter:
   301  002C                     	ds	2
   302  002E                     _activity_flag:
   303  002E                     	ds	1
   304                           
   305                           	psect	inittext
   306  0160                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  0160  087E               	movf	btemp,w
   310  0161  008A               	movwf	10
   311  0162  087F               	movf	btemp+1,w
   312  0163  0082               	movwf	2
   313  0164                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  0164  120A  118A  2160  120A  118A  	fcall	init_fetch0
   321  0169  0080               	movwf	0
   322  016A  0A84               	incf	4,f
   323  016B  0804               	movf	4,w
   324  016C  067D               	xorwf	btemp+-1,w
   325  016D  1903               	btfsc	3,2
   326  016E  3400               	retlw	0
   327  016F  0AFF               	incf	btemp+1,f
   328  0170  1903               	btfsc	3,2
   329  0171  0AFE               	incf	btemp,f
   330  0172  2964               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_ISR:
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?___awmod:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ___awmod@divisor:	
   342                           ; 2 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346  0070                     	ds	2
   347  0072                     ___awmod@dividend:
   348                           
   349                           ; 2 bytes @ 0x2
   350  0072                     	ds	2
   351  0074                     ??___awmod:
   352  0074                     ___awmod@counter:	
   353                           ; 1 bytes @ 0x4
   354                           
   355                           
   356                           ; 1 bytes @ 0x4
   357  0074                     	ds	1
   358  0075                     ___awmod@sign:
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	1
   362  0076                     ??_ISR:
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	5
   366                           
   367                           	psect	cstackBANK0
   368  0033                     __pcstackBANK0:
   369  0033                     ??_main:
   370                           
   371                           ; 1 bytes @ 0x0
   372  0033                     	ds	2
   373                           
   374                           	psect	maintext
   375  002E                     __pmaintext:	
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 70 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   390 ;; Tracked objects:
   391 ;;		On entry : B00/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          0       2       0       0       0
   398 ;;      Totals:         0       2       0       0       0
   399 ;;Total ram usage:        2 bytes
   400 ;; Hardware stack levels required when called:    2
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _main
   410  002E                     _main:
   411  002E                     l977:	
   412                           ;incstack = 0
   413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   414                           
   415                           
   416                           ;main.c: 73:     TRISBbits.TRISB0 = 1;
   417  002E  1683               	bsf	3,5	;RP0=1, select bank1
   418  002F  1303               	bcf	3,6	;RP1=0, select bank1
   419  0030  1406               	bsf	6,0	;volatile
   420                           
   421                           ;main.c: 74:     TRISBbits.TRISB3 = 0;
   422  0031  1186               	bcf	6,3	;volatile
   423  0032                     l979:
   424                           
   425                           ;main.c: 75:     TRISD = 0x00;
   426  0032  0188               	clrf	8	;volatile
   427  0033                     l981:
   428                           
   429                           ;main.c: 76:     TRISA = 0x01;
   430  0033  3001               	movlw	1
   431  0034  0085               	movwf	5	;volatile
   432  0035                     l983:
   433                           
   434                           ;main.c: 77:     RA2 = 0;
   435  0035  1283               	bcf	3,5	;RP0=0, select bank0
   436  0036  1303               	bcf	3,6	;RP1=0, select bank0
   437  0037  1105               	bcf	5,2	;volatile
   438  0038                     l985:
   439                           
   440                           ;main.c: 78:     RA3 = 0;
   441  0038  1185               	bcf	5,3	;volatile
   442  0039                     l987:
   443                           
   444                           ;main.c: 79:     RA4 = 0;
   445  0039  1205               	bcf	5,4	;volatile
   446  003A                     l989:
   447                           
   448                           ;main.c: 80:     RA5 = 0;
   449  003A  1285               	bcf	5,5	;volatile
   450  003B                     l991:
   451                           
   452                           ;main.c: 81:     PORTD = SSD[0];
   453  003B  0820               	movf	_SSD,w
   454  003C  0088               	movwf	8	;volatile
   455  003D                     l993:
   456                           
   457                           ;main.c: 85:     TMR1 = 65535 - 50000;
   458  003D  303C               	movlw	60
   459  003E  008F               	movwf	15	;volatile
   460  003F  30AF               	movlw	175
   461  0040  008E               	movwf	14	;volatile
   462  0041                     l995:
   463                           
   464                           ;main.c: 87:     TMR1CS = 0;
   465  0041  1090               	bcf	16,1	;volatile
   466  0042                     l997:
   467                           
   468                           ;main.c: 89:     T1CKPS0 = 0;
   469  0042  1210               	bcf	16,4	;volatile
   470  0043                     l999:
   471                           
   472                           ;main.c: 90:     T1CKPS1 = 0;
   473  0043  1290               	bcf	16,5	;volatile
   474  0044                     l1001:
   475                           
   476                           ;main.c: 92:     RB0 = 1;
   477  0044  1406               	bsf	6,0	;volatile
   478  0045                     l1003:
   479                           
   480                           ;main.c: 94:     TMR1ON = 1;
   481  0045  1410               	bsf	16,0	;volatile
   482  0046                     l1005:
   483                           
   484                           ;main.c: 96:     INTE = 1;
   485  0046  160B               	bsf	11,4	;volatile
   486  0047                     l1007:
   487                           
   488                           ;main.c: 97:     INTEDG = 0;
   489  0047  1683               	bsf	3,5	;RP0=1, select bank1
   490  0048  1303               	bcf	3,6	;RP1=0, select bank1
   491  0049  1301               	bcf	1,6	;volatile
   492  004A                     l1009:
   493                           
   494                           ;main.c: 100:     TMR1IE = 1;
   495  004A  140C               	bsf	12,0	;volatile
   496  004B                     l1011:
   497                           
   498                           ;main.c: 101:     TMR1IF = 0;
   499  004B  1283               	bcf	3,5	;RP0=0, select bank0
   500  004C  1303               	bcf	3,6	;RP1=0, select bank0
   501  004D  100C               	bcf	12,0	;volatile
   502  004E                     l1013:
   503                           
   504                           ;main.c: 102:     PEIE = 1;
   505  004E  170B               	bsf	11,6	;volatile
   506  004F                     l1015:
   507                           
   508                           ;main.c: 103:     GIE = 1;
   509  004F  178B               	bsf	11,7	;volatile
   510  0050                     l1017:
   511                           
   512                           ;main.c: 109:         SSD1_counter = (Counter % 10);
   513  0050  3004               	movlw	4
   514  0051  00FF               	movwf	btemp+1
   515  0052  087F               	movf	btemp+1,w
   516  0053  1283               	bcf	3,5	;RP0=0, select bank0
   517  0054  1303               	bcf	3,6	;RP1=0, select bank0
   518  0055  00B2               	movwf	_SSD1_counter
   519  0056                     l1019:
   520                           
   521                           ;main.c: 110:         SSD2_counter = ((Counter / 10) % 10);
   522  0056  3003               	movlw	3
   523  0057  00FF               	movwf	btemp+1
   524  0058  087F               	movf	btemp+1,w
   525  0059  00B1               	movwf	_SSD2_counter
   526  005A                     l1021:
   527                           
   528                           ;main.c: 111:         SSD3_counter = ((Counter / 100) % 10);
   529  005A  3002               	movlw	2
   530  005B  00FF               	movwf	btemp+1
   531  005C  087F               	movf	btemp+1,w
   532  005D  00B0               	movwf	_SSD3_counter
   533  005E                     l1023:
   534                           
   535                           ;main.c: 112:         SSD4_counter = ((Counter / 1000) % 10);
   536  005E  01AF               	clrf	_SSD4_counter
   537  005F  0AAF               	incf	_SSD4_counter,f
   538                           
   539                           ;main.c: 114:         switch (SSD_status) {
   540  0060  289B               	goto	l1047
   541  0061                     l85:	
   542                           ;main.c: 115:             case 1:
   543                           
   544                           
   545                           ;main.c: 116:                 RA2 = 0;
   546  0061  1105               	bcf	5,2	;volatile
   547                           
   548                           ;main.c: 117:                 RA3 = 0;
   549  0062  1185               	bcf	5,3	;volatile
   550                           
   551                           ;main.c: 118:                 RA4 = 0;
   552  0063  1205               	bcf	5,4	;volatile
   553                           
   554                           ;main.c: 119:                 RA5 = 1;
   555  0064  1685               	bsf	5,5	;volatile
   556  0065                     l1025:
   557                           
   558                           ;main.c: 120:                 PORTD = SSD[SSD1_counter];
   559  0065  0824               	movf	_SSD+4,w
   560  0066  0088               	movwf	8	;volatile
   561  0067                     l1027:
   562                           
   563                           ;main.c: 121:                 SSD_status = 2;
   564  0067  3002               	movlw	2
   565  0068  00FF               	movwf	btemp+1
   566  0069  087F               	movf	btemp+1,w
   567  006A  00FD               	movwf	_SSD_status
   568                           
   569                           ;main.c: 123:                 break;
   570  006B  28B1               	goto	l1049
   571  006C                     l87:	
   572                           ;main.c: 125:             case 2:
   573                           
   574                           
   575                           ;main.c: 126:                 RA2 = 0;
   576  006C  1105               	bcf	5,2	;volatile
   577                           
   578                           ;main.c: 127:                 RA3 = 0;
   579  006D  1185               	bcf	5,3	;volatile
   580                           
   581                           ;main.c: 128:                 RA4 = 1;
   582  006E  1605               	bsf	5,4	;volatile
   583                           
   584                           ;main.c: 129:                 RA5 = 0;
   585  006F  1285               	bcf	5,5	;volatile
   586  0070                     l1029:
   587                           
   588                           ;main.c: 130:                 PORTD = SSD[SSD2_counter];
   589  0070  0823               	movf	_SSD+3,w
   590  0071  0088               	movwf	8	;volatile
   591  0072                     l1031:
   592                           
   593                           ;main.c: 131:                 SSD_status = 3;
   594  0072  3003               	movlw	3
   595  0073  00FF               	movwf	btemp+1
   596  0074  087F               	movf	btemp+1,w
   597  0075  00FD               	movwf	_SSD_status
   598                           
   599                           ;main.c: 133:                 break;
   600  0076  28B1               	goto	l1049
   601  0077                     l88:	
   602                           ;main.c: 135:             case 3:
   603                           
   604                           
   605                           ;main.c: 136:                 RA2 = 0;
   606  0077  1105               	bcf	5,2	;volatile
   607                           
   608                           ;main.c: 137:                 RA3 = 1;
   609  0078  1585               	bsf	5,3	;volatile
   610                           
   611                           ;main.c: 138:                 RA4 = 0;
   612  0079  1205               	bcf	5,4	;volatile
   613                           
   614                           ;main.c: 139:                 RA5 = 0;
   615  007A  1285               	bcf	5,5	;volatile
   616  007B                     l1033:
   617                           
   618                           ;main.c: 140:                 PORTD &= ~0x7F;
   619  007B  3080               	movlw	128
   620  007C  00FF               	movwf	btemp+1
   621  007D  087F               	movf	btemp+1,w
   622  007E  0588               	andwf	8,f	;volatile
   623  007F                     l1035:
   624                           
   625                           ;main.c: 141:                 PORTD |= SSD[SSD3_counter];
   626  007F  0822               	movf	_SSD+2,w
   627  0080  00FF               	movwf	btemp+1
   628  0081  087F               	movf	btemp+1,w
   629  0082  0488               	iorwf	8,f	;volatile
   630  0083                     l1037:
   631                           
   632                           ;main.c: 143:                 RD7 = Led_Blink_flag;
   633  0083  187C               	btfsc	_Led_Blink_flag,0
   634  0084  2886               	goto	u451
   635  0085  288A               	goto	u450
   636  0086                     u451:
   637  0086  1283               	bcf	3,5	;RP0=0, select bank0
   638  0087  1303               	bcf	3,6	;RP1=0, select bank0
   639  0088  1788               	bsf	8,7	;volatile
   640  0089  288D               	goto	u464
   641  008A                     u450:
   642  008A  1283               	bcf	3,5	;RP0=0, select bank0
   643  008B  1303               	bcf	3,6	;RP1=0, select bank0
   644  008C  1388               	bcf	8,7	;volatile
   645  008D                     u464:
   646  008D                     l1039:
   647                           
   648                           ;main.c: 145:                 SSD_status = 4;
   649  008D  3004               	movlw	4
   650  008E  00FF               	movwf	btemp+1
   651  008F  087F               	movf	btemp+1,w
   652  0090  00FD               	movwf	_SSD_status
   653                           
   654                           ;main.c: 146:                 break;
   655  0091  28B1               	goto	l1049
   656  0092                     l89:	
   657                           ;main.c: 148:             case 4:
   658                           
   659                           
   660                           ;main.c: 149:                 RA2 = 1;
   661  0092  1505               	bsf	5,2	;volatile
   662                           
   663                           ;main.c: 150:                 RA3 = 0;
   664  0093  1185               	bcf	5,3	;volatile
   665                           
   666                           ;main.c: 151:                 RA4 = 0;
   667  0094  1205               	bcf	5,4	;volatile
   668                           
   669                           ;main.c: 152:                 RA5 = 0;
   670  0095  1285               	bcf	5,5	;volatile
   671  0096                     l1041:
   672                           
   673                           ;main.c: 153:                 PORTD = SSD[SSD4_counter];
   674  0096  0821               	movf	_SSD+1,w
   675  0097  0088               	movwf	8	;volatile
   676  0098                     l1043:
   677                           
   678                           ;main.c: 154:                 SSD_status = 1;
   679  0098  01FD               	clrf	_SSD_status
   680  0099  0AFD               	incf	_SSD_status,f
   681                           
   682                           ;main.c: 156:                 break;
   683  009A  28B1               	goto	l1049
   684  009B                     l1047:
   685  009B  087D               	movf	_SSD_status,w
   686  009C  00B3               	movwf	??_main
   687  009D  01B4               	clrf	??_main+1
   688                           
   689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   690                           ; Switch size 1, requested type "simple"
   691                           ; Number of cases is 1, Range of values is 0 to 0
   692                           ; switch strategies available:
   693                           ; Name         Instructions Cycles
   694                           ; simple_byte            4     3 (average)
   695                           ; direct_byte           11     8 (fixed)
   696                           ; jumptable            260     6 (fixed)
   697                           ;	Chosen strategy is simple_byte
   698  009E  0834               	movf	??_main+1,w
   699  009F  3A00               	xorlw	0	; case 0
   700  00A0  1903               	skipnz
   701  00A1  28A3               	goto	l1137
   702  00A2  28B1               	goto	l1049
   703  00A3                     l1137:
   704                           
   705                           ; Switch size 1, requested type "simple"
   706                           ; Number of cases is 4, Range of values is 1 to 4
   707                           ; switch strategies available:
   708                           ; Name         Instructions Cycles
   709                           ; simple_byte           13     7 (average)
   710                           ; direct_byte           23    11 (fixed)
   711                           ; jumptable            263     9 (fixed)
   712                           ;	Chosen strategy is simple_byte
   713  00A3  0833               	movf	??_main,w
   714  00A4  3A01               	xorlw	1	; case 1
   715  00A5  1903               	skipnz
   716  00A6  2861               	goto	l85
   717  00A7  3A03               	xorlw	3	; case 2
   718  00A8  1903               	skipnz
   719  00A9  286C               	goto	l87
   720  00AA  3A01               	xorlw	1	; case 3
   721  00AB  1903               	skipnz
   722  00AC  2877               	goto	l88
   723  00AD  3A07               	xorlw	7	; case 4
   724  00AE  1903               	skipnz
   725  00AF  2892               	goto	l89
   726  00B0  28B1               	goto	l1049
   727  00B1                     l1049:
   728                           
   729                           ;main.c: 159:         if (sleep_flag == 1) {
   730  00B1  0335               	decf	_sleep_flag,w
   731  00B2  1D03               	btfss	3,2
   732  00B3  28B5               	goto	u471
   733  00B4  28B6               	goto	u470
   734  00B5                     u471:
   735  00B5  2850               	goto	l1017
   736  00B6                     u470:
   737  00B6                     l1051:
   738                           
   739                           ;main.c: 160:             RA2 = 0;
   740  00B6  1105               	bcf	5,2	;volatile
   741                           
   742                           ;main.c: 161:             RA3 = 0;
   743  00B7  1185               	bcf	5,3	;volatile
   744                           
   745                           ;main.c: 162:             RA4 = 0;
   746  00B8  1205               	bcf	5,4	;volatile
   747                           
   748                           ;main.c: 163:             RA5 = 0;
   749  00B9  1285               	bcf	5,5	;volatile
   750                           
   751                           ;main.c: 164:             RD7 = 0;
   752  00BA  1388               	bcf	8,7	;volatile
   753                           
   754                           ;main.c: 165:             TMR1ON = 0;
   755  00BB  1010               	bcf	16,0	;volatile
   756  00BC  0063               	sleep	;# 
   757  00BD  2850               	goto	l1017
   758  00BE  120A  118A  2810   	ljmp	start
   759  00C1                     __end_of_main:
   760                           
   761                           	psect	text1
   762  011A                     __ptext1:	
   763 ;; *************** function _ISR *****************
   764 ;; Defined at:
   765 ;;		line 39 in file "main.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          5       0       0       0       0
   782 ;;      Totals:         5       0       0       0       0
   783 ;;Total ram usage:        5 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		___awmod
   788 ;; This function is called by:
   789 ;;		Interrupt level 1
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _ISR
   795  011A                     _ISR:
   796  011A                     i1l949:
   797                           
   798                           ;main.c: 43:     if (TMR1IF) {
   799  011A  1C0C               	btfss	12,0	;volatile
   800  011B  291D               	goto	u40_21
   801  011C  291E               	goto	u40_20
   802  011D                     u40_21:
   803  011D  2950               	goto	i1l969
   804  011E                     u40_20:
   805  011E                     i1l951:
   806                           
   807                           ;main.c: 45:         timer_counter++;
   808  011E  3001               	movlw	1
   809  011F  00FF               	movwf	btemp+1
   810  0120  087F               	movf	btemp+1,w
   811  0121  07FB               	addwf	_timer_counter,f
   812  0122                     i1l953:
   813                           
   814                           ;main.c: 46:         if (timer_counter % 20 == 0) {
   815  0122  3014               	movlw	20
   816  0123  00F0               	movwf	___awmod@divisor
   817  0124  3000               	movlw	0
   818  0125  00F1               	movwf	___awmod@divisor+1
   819  0126  087B               	movf	_timer_counter,w
   820  0127  00F6               	movwf	??_ISR
   821  0128  01F7               	clrf	??_ISR+1
   822  0129  0876               	movf	??_ISR,w
   823  012A  00F2               	movwf	___awmod@dividend
   824  012B  0877               	movf	??_ISR+1,w
   825  012C  00F3               	movwf	___awmod@dividend+1
   826  012D  120A  118A  20C1  120A  118A  	fcall	___awmod
   827  0132  0870               	movf	?___awmod,w
   828  0133  0471               	iorwf	?___awmod+1,w
   829  0134  1D03               	btfss	3,2
   830  0135  2937               	goto	u41_21
   831  0136  2938               	goto	u41_20
   832  0137                     u41_21:
   833  0137  2939               	goto	i1l957
   834  0138                     u41_20:
   835  0138                     i1l955:
   836                           
   837                           ;main.c: 47:             Led_Blink_flag = ~Led_Blink_flag;
   838  0138  09FC               	comf	_Led_Blink_flag,f
   839  0139                     i1l957:
   840                           
   841                           ;main.c: 51:         if (timer_counter == 200) {
   842  0139  30C8               	movlw	200
   843  013A  067B               	xorwf	_timer_counter,w
   844  013B  1D03               	btfss	3,2
   845  013C  293E               	goto	u42_21
   846  013D  293F               	goto	u42_20
   847  013E                     u42_21:
   848  013E  2949               	goto	i1l965
   849  013F                     u42_20:
   850  013F                     i1l959:
   851                           
   852                           ;main.c: 52:             if(activity_flag==1){
   853  013F  1283               	bcf	3,5	;RP0=0, select bank0
   854  0140  1303               	bcf	3,6	;RP1=0, select bank0
   855  0141  032E               	decf	_activity_flag,w
   856  0142  1D03               	btfss	3,2
   857  0143  2945               	goto	u43_21
   858  0144  2946               	goto	u43_20
   859  0145                     u43_21:
   860  0145  2948               	goto	i1l963
   861  0146                     u43_20:
   862  0146                     i1l961:
   863                           
   864                           ;main.c: 53:                 sleep_flag = 1;
   865  0146  01B5               	clrf	_sleep_flag
   866  0147  0AB5               	incf	_sleep_flag,f
   867  0148                     i1l963:
   868                           
   869                           ;main.c: 56:             timer_counter = 0;
   870  0148  01FB               	clrf	_timer_counter
   871  0149                     i1l965:
   872                           
   873                           ;main.c: 59:         TMR1 = 65535 - 50000;
   874  0149  303C               	movlw	60
   875  014A  1283               	bcf	3,5	;RP0=0, select bank0
   876  014B  1303               	bcf	3,6	;RP1=0, select bank0
   877  014C  008F               	movwf	15	;volatile
   878  014D  30AF               	movlw	175
   879  014E  008E               	movwf	14	;volatile
   880  014F                     i1l967:
   881                           
   882                           ;main.c: 60:         TMR1IF = 0;
   883  014F  100C               	bcf	12,0	;volatile
   884  0150                     i1l969:
   885                           
   886                           ;main.c: 63:     if (INTF) {
   887  0150  1C8B               	btfss	11,1	;volatile
   888  0151  2953               	goto	u44_21
   889  0152  2954               	goto	u44_20
   890  0153                     u44_21:
   891  0153  2957               	goto	i1l78
   892  0154                     u44_20:
   893  0154                     i1l971:
   894                           
   895                           ;main.c: 64:         TMR1ON = 1;
   896  0154  1410               	bsf	16,0	;volatile
   897  0155                     i1l973:
   898                           
   899                           ;main.c: 65:         sleep_flag = 0;
   900  0155  01B5               	clrf	_sleep_flag
   901  0156                     i1l975:
   902                           
   903                           ;main.c: 66:         INTF = 0;
   904  0156  108B               	bcf	11,1	;volatile
   905  0157                     i1l78:
   906  0157  087A               	movf	??_ISR+4,w
   907  0158  00FF               	movwf	btemp+1
   908  0159  0879               	movf	??_ISR+3,w
   909  015A  008A               	movwf	10
   910  015B  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
   911  015C  0083               	movwf	3
   912  015D  0EFE               	swapf	btemp,f
   913  015E  0E7E               	swapf	btemp,w
   914  015F  0009               	retfie
   915  0160                     __end_of_ISR:
   916                           
   917                           	psect	intentry
   918  0004                     __pintentry:	
   919                           ;incstack = 0
   920                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   921                           
   922  0004                     interrupt_function:
   923  007E                     saved_w	set	btemp
   924  0004  00FE               	movwf	btemp
   925  0005  0E03               	swapf	3,w
   926  0006  00F8               	movwf	??_ISR+2
   927  0007  080A               	movf	10,w
   928  0008  00F9               	movwf	??_ISR+3
   929  0009  1283               	bcf	3,5	;RP0=0, select bank0
   930  000A  1303               	bcf	3,6	;RP1=0, select bank0
   931  000B  087F               	movf	btemp+1,w
   932  000C  00FA               	movwf	??_ISR+4
   933  000D  120A  118A  291A   	ljmp	_ISR
   934                           
   935                           	psect	text2
   936  00C1                     __ptext2:	
   937 ;; *************** function ___awmod *****************
   938 ;; Defined at:
   939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  divisor         2    0[COMMON] int 
   942 ;;  dividend        2    2[COMMON] int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  sign            1    5[COMMON] unsigned char 
   945 ;;  counter         1    4[COMMON] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2    0[COMMON] int 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, btemp+1
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         4       0       0       0       0
   956 ;;      Locals:         2       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         6       0       0       0       0
   959 ;;Total ram usage:        6 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_ISR
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function ___awmod
   970  00C1                     ___awmod:
   971  00C1                     i1l911:	
   972                           ;incstack = 0
   973                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   974                           
   975  00C1  01F5               	clrf	___awmod@sign
   976  00C2                     i1l913:
   977  00C2  1FF3               	btfss	___awmod@dividend+1,7
   978  00C3  28C5               	goto	u31_21
   979  00C4  28C6               	goto	u31_20
   980  00C5                     u31_21:
   981  00C5  28CD               	goto	i1l919
   982  00C6                     u31_20:
   983  00C6                     i1l915:
   984  00C6  09F2               	comf	___awmod@dividend,f
   985  00C7  09F3               	comf	___awmod@dividend+1,f
   986  00C8  0AF2               	incf	___awmod@dividend,f
   987  00C9  1903               	skipnz
   988  00CA  0AF3               	incf	___awmod@dividend+1,f
   989  00CB                     i1l917:
   990  00CB  01F5               	clrf	___awmod@sign
   991  00CC  0AF5               	incf	___awmod@sign,f
   992  00CD                     i1l919:
   993  00CD  1FF1               	btfss	___awmod@divisor+1,7
   994  00CE  28D0               	goto	u32_21
   995  00CF  28D1               	goto	u32_20
   996  00D0                     u32_21:
   997  00D0  28D6               	goto	i1l923
   998  00D1                     u32_20:
   999  00D1                     i1l921:
  1000  00D1  09F0               	comf	___awmod@divisor,f
  1001  00D2  09F1               	comf	___awmod@divisor+1,f
  1002  00D3  0AF0               	incf	___awmod@divisor,f
  1003  00D4  1903               	skipnz
  1004  00D5  0AF1               	incf	___awmod@divisor+1,f
  1005  00D6                     i1l923:
  1006  00D6  0870               	movf	___awmod@divisor,w
  1007  00D7  0471               	iorwf	___awmod@divisor+1,w
  1008  00D8  1903               	btfsc	3,2
  1009  00D9  28DB               	goto	u33_21
  1010  00DA  28DC               	goto	u33_20
  1011  00DB                     u33_21:
  1012  00DB  290B               	goto	i1l941
  1013  00DC                     u33_20:
  1014  00DC                     i1l925:
  1015  00DC  01F4               	clrf	___awmod@counter
  1016  00DD  0AF4               	incf	___awmod@counter,f
  1017  00DE  28EA               	goto	i1l931
  1018  00DF                     i1l927:
  1019  00DF  3001               	movlw	1
  1020  00E0                     u34_25:
  1021  00E0  1003               	clrc
  1022  00E1  0DF0               	rlf	___awmod@divisor,f
  1023  00E2  0DF1               	rlf	___awmod@divisor+1,f
  1024  00E3  3EFF               	addlw	-1
  1025  00E4  1D03               	skipz
  1026  00E5  28E0               	goto	u34_25
  1027  00E6                     i1l929:
  1028  00E6  3001               	movlw	1
  1029  00E7  00FF               	movwf	btemp+1
  1030  00E8  087F               	movf	btemp+1,w
  1031  00E9  07F4               	addwf	___awmod@counter,f
  1032  00EA                     i1l931:
  1033  00EA  1FF1               	btfss	___awmod@divisor+1,7
  1034  00EB  28ED               	goto	u35_21
  1035  00EC  28EE               	goto	u35_20
  1036  00ED                     u35_21:
  1037  00ED  28DF               	goto	i1l927
  1038  00EE                     u35_20:
  1039  00EE                     i1l933:
  1040  00EE  0871               	movf	___awmod@divisor+1,w
  1041  00EF  0273               	subwf	___awmod@dividend+1,w
  1042  00F0  1D03               	skipz
  1043  00F1  28F4               	goto	u36_25
  1044  00F2  0870               	movf	___awmod@divisor,w
  1045  00F3  0272               	subwf	___awmod@dividend,w
  1046  00F4                     u36_25:
  1047  00F4  1C03               	skipc
  1048  00F5  28F7               	goto	u36_21
  1049  00F6  28F8               	goto	u36_20
  1050  00F7                     u36_21:
  1051  00F7  28FE               	goto	i1l937
  1052  00F8                     u36_20:
  1053  00F8                     i1l935:
  1054  00F8  0870               	movf	___awmod@divisor,w
  1055  00F9  02F2               	subwf	___awmod@dividend,f
  1056  00FA  0871               	movf	___awmod@divisor+1,w
  1057  00FB  1C03               	skipc
  1058  00FC  03F3               	decf	___awmod@dividend+1,f
  1059  00FD  02F3               	subwf	___awmod@dividend+1,f
  1060  00FE                     i1l937:
  1061  00FE  3001               	movlw	1
  1062  00FF                     u37_25:
  1063  00FF  1003               	clrc
  1064  0100  0CF1               	rrf	___awmod@divisor+1,f
  1065  0101  0CF0               	rrf	___awmod@divisor,f
  1066  0102  3EFF               	addlw	-1
  1067  0103  1D03               	skipz
  1068  0104  28FF               	goto	u37_25
  1069  0105                     i1l939:
  1070  0105  3001               	movlw	1
  1071  0106  02F4               	subwf	___awmod@counter,f
  1072  0107  1D03               	btfss	3,2
  1073  0108  290A               	goto	u38_21
  1074  0109  290B               	goto	u38_20
  1075  010A                     u38_21:
  1076  010A  28EE               	goto	i1l933
  1077  010B                     u38_20:
  1078  010B                     i1l941:
  1079  010B  0875               	movf	___awmod@sign,w
  1080  010C  1903               	btfsc	3,2
  1081  010D  290F               	goto	u39_21
  1082  010E  2910               	goto	u39_20
  1083  010F                     u39_21:
  1084  010F  2915               	goto	i1l945
  1085  0110                     u39_20:
  1086  0110                     i1l943:
  1087  0110  09F2               	comf	___awmod@dividend,f
  1088  0111  09F3               	comf	___awmod@dividend+1,f
  1089  0112  0AF2               	incf	___awmod@dividend,f
  1090  0113  1903               	skipnz
  1091  0114  0AF3               	incf	___awmod@dividend+1,f
  1092  0115                     i1l945:
  1093  0115  0873               	movf	___awmod@dividend+1,w
  1094  0116  00F1               	movwf	?___awmod+1
  1095  0117  0872               	movf	___awmod@dividend,w
  1096  0118  00F0               	movwf	?___awmod
  1097  0119                     i1l345:
  1098  0119  0008               	return
  1099  011A                     __end_of___awmod:
  1100  007E                     btemp	set	126	;btemp
  1101  007E                     wtemp0	set	126
  1102                           
  1103                           	psect	config
  1104                           
  1105                           ;Config register CONFIG @ 0x2007
  1106                           ;	Oscillator Selection bits
  1107                           ;	FOSC = XT, XT oscillator
  1108                           ;	Watchdog Timer Enable bit
  1109                           ;	WDTE = OFF, WDT disabled
  1110                           ;	Power-up Timer Enable bit
  1111                           ;	PWRTE = ON, PWRT enabled
  1112                           ;	Brown-out Reset Enable bit
  1113                           ;	BOREN = ON, BOR enabled
  1114                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1115                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1116                           ;	Data EEPROM Memory Code Protection bit
  1117                           ;	CPD = OFF, Data EEPROM code protection off
  1118                           ;	Flash Program Memory Write Enable bits
  1119                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1120                           ;	In-Circuit Debugger Mode bit
  1121                           ;	DEBUG = 0x1, unprogrammed default
  1122                           ;	Flash Program Memory Code Protection bit
  1123                           ;	CP = OFF, Code protection off
  1124  2007                     	org	8199
  1125  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      2      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0     448
                                              6 COMMON     5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Nov 06 02:03:56 2020

                      pc 0002                       l85 0061                       l87 006C  
                     l88 0077                       l89 0092                       fsr 0004  
                    l981 0033                      l991 003B                      l983 0035  
                    l993 003D                      l985 0038                      l977 002E  
                    l995 0041                      l987 0039                      l979 0032  
                    _GIE 005F                      l997 0042                      l989 003A  
                    l999 0043                      _RA2 002A                      _RB0 0030  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
                    _RD7 0047                      u450 008A                      u451 0086  
                    _ISR 011A                      u470 00B6                      u471 00B5  
                    u464 008D                      _SSD 0020               _SSD_status 007D  
                    indf 0000             ___awmod@sign 0075                     ?_ISR 0070  
                   l1001 0044                     l1011 004B                     l1003 0045  
                   l1021 005A                     l1013 004E                     l1005 0046  
                   l1031 0072                     l1023 005E                     l1015 004F  
                   l1007 0047                     l1041 0096                     l1033 007B  
                   l1025 0065                     l1017 0050                     l1009 004A  
                   l1051 00B6                     l1043 0098                     l1035 007F  
                   l1027 0067                     l1019 0056                     l1037 0083  
                   l1029 0070                     l1039 008D                     l1047 009B  
                   l1137 00A3                     l1049 00B1                     _PEIE 005E  
                   _INTE 005C                     _INTF 0059                     i1l78 0157  
                   _TMR1 000E                     _main 002E                     btemp 007E  
                   start 0010                    ??_ISR 0076                    ?_main 0070  
        __end_of___awmod 011A                    i1l345 0119                    i1l911 00C1  
                  i1l921 00D1                    i1l913 00C2                    i1l931 00EA  
                  i1l923 00D6                    i1l915 00C6                    i1l933 00EE  
                  i1l925 00DC                    i1l941 010B                    i1l917 00CB  
                  i1l943 0110                    i1l935 00F8                    i1l927 00DF  
                  i1l919 00CD                    i1l951 011E                    i1l945 0115  
                  i1l937 00FE                    i1l929 00E6                    i1l961 0146  
                  i1l953 0122                    i1l939 0105                    i1l971 0154  
                  i1l963 0148                    i1l955 0138                    i1l973 0155  
                  i1l965 0149                    i1l957 0139                    i1l949 011A  
                  i1l975 0156                    i1l967 014F                    i1l959 013F  
                  i1l969 0150                    u31_20 00C6                    u31_21 00C5  
                  u32_20 00D1                    u40_20 011E                    u32_21 00D0  
                  u40_21 011D                    u33_20 00DC                    u41_20 0138  
                  u33_21 00DB                    u41_21 0137                    u42_20 013F  
                  u42_21 013E                    u34_25 00E0                    u35_20 00EE  
                  u43_20 0146                    u35_21 00ED                    u43_21 0145  
                  _PORTD 0008                    u36_20 00F8                    u44_20 0154  
                  u36_21 00F7                    u44_21 0153                    u36_25 00F4  
                  u37_25 00FF                    u38_20 010B                    u38_21 010A  
                  u39_20 0110                    u39_21 010F                    _TRISA 0085  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 00C1  
                 ??_main 0033                   _INTEDG 040E                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
              ??___awmod 0074          ___awmod@divisor 0070          ___awmod@counter 0074  
           __pdataCOMMON 007D                   saved_w 007E  __end_of__initialization 002A  
         __pcstackCOMMON 0070             __pidataBANK0 0173               __pbssBANK0 0035  
         _Led_Blink_flag 007C               __pmaintext 002E               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  _Counter 002C  
           _Display_Rate 002A                  ___awmod 00C1                  __ptext1 011A  
                __ptext2 00C1             __size_of_ISR 0046         ___awmod@dividend 0072  
   end_of_initialization 002A               _sleep_flag 0035                _TRISBbits 0086  
          __pidataCOMMON 0182      start_initialization 0013              __end_of_ISR 0160  
          _activity_flag 002E               init_fetch0 0160              __pdataBANK0 0020  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0033  
              __pnvBANK0 002F                 ?___awmod 0070        interrupt_function 0004  
       __size_of___awmod 0059            __size_of_main 0093             _SSD1_counter 0032  
           _SSD2_counter 0031             _SSD3_counter 0030             _SSD4_counter 002F  
          _timer_counter 007B                 init_ram0 0164                 intlevel1 0000  
