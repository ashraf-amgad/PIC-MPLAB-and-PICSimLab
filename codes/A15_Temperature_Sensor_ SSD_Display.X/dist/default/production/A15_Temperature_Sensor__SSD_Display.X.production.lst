

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 05 02:35:06 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	idataBANK0
   174  0561                     __pidataBANK0:
   175                           
   176                           ;initializer for _SSD
   177  0561  343F               	retlw	63
   178  0562  3406               	retlw	6
   179  0563  345B               	retlw	91
   180  0564  344F               	retlw	79
   181  0565  3466               	retlw	102
   182  0566  346D               	retlw	109
   183  0567  347D               	retlw	125
   184  0568  3407               	retlw	7
   185  0569  347F               	retlw	127
   186  056A  346F               	retlw	111
   187  056B  3439               	retlw	57
   188                           
   189                           ;initializer for _Counter
   190  056C  340F               	retlw	15
   191  056D  3427               	retlw	39
   192                           
   193                           ;initializer for _SSD_status
   194  056E  3401               	retlw	1
   195  001F                     _ADCON0bits	set	31
   196  001E                     _ADRESH	set	30
   197  001F                     _ADCON0	set	31
   198  0008                     _PORTD	set	8
   199  00FA                     _GO_DONE	set	250
   200  002D                     _RA5	set	45
   201  002C                     _RA4	set	44
   202  002B                     _RA3	set	43
   203  002A                     _RA2	set	42
   204  009E                     _ADRESL	set	158
   205  009F                     _ADCON1	set	159
   206  0085                     _TRISA	set	133
   207  0088                     _TRISD	set	136
   208                           
   209                           	psect	cinit
   210  07EA                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07EA                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216  07EA  1383               	bcf	3,7	;select IRP bank0
   217  07EB  3051               	movlw	low (__pdataBANK0+14)
   218  07EC  00FD               	movwf	btemp+-1
   219  07ED  3005               	movlw	high __pidataBANK0
   220  07EE  00FE               	movwf	btemp
   221  07EF  3061               	movlw	low __pidataBANK0
   222  07F0  00FF               	movwf	btemp+1
   223  07F1  3043               	movlw	low __pdataBANK0
   224  07F2  0084               	movwf	4
   225  07F3  120A  118A  2573  120A  118A  	fcall	init_ram0
   226                           
   227                           ; Clear objects allocated to BANK0
   228  07F8  01D1               	clrf	__pbssBANK0& (0+127)
   229  07F9  01D2               	clrf	(__pbssBANK0+1)& (0+127)
   230  07FA  01D3               	clrf	(__pbssBANK0+2)& (0+127)
   231  07FB  01D4               	clrf	(__pbssBANK0+3)& (0+127)
   232  07FC                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  07FC                     __end_of__initialization:
   236  07FC  0183               	clrf	3
   237  07FD  120A  118A  2E86   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssBANK0
   240  0051                     __pbssBANK0:
   241  0051                     _SSD4_counter:
   242  0051                     	ds	1
   243  0052                     _SSD3_counter:
   244  0052                     	ds	1
   245  0053                     _SSD2_counter:
   246  0053                     	ds	1
   247  0054                     _SSD1_counter:
   248  0054                     	ds	1
   249                           
   250                           	psect	dataBANK0
   251  0043                     __pdataBANK0:
   252  0043                     _SSD:
   253  0043                     	ds	11
   254  004E                     _Counter:
   255  004E                     	ds	2
   256  0050                     _SSD_status:
   257  0050                     	ds	1
   258                           
   259                           	psect	inittext
   260  056F                     init_fetch0:	
   261                           ;	Called with low address in FSR and high address in W
   262                           
   263  056F  087E               	movf	btemp,w
   264  0570  008A               	movwf	10
   265  0571  087F               	movf	btemp+1,w
   266  0572  0082               	movwf	2
   267  0573                     init_ram0:	
   268                           ;Called with:
   269                           ;	high address of idata address in btemp 
   270                           ;	low address of idata address in btemp+1 
   271                           ;	low address of data in FSR
   272                           ;	high address + 1 of data in btemp-1
   273                           
   274  0573  120A  118A  256F  120A  118A  	fcall	init_fetch0
   275  0578  0080               	movwf	0
   276  0579  0A84               	incf	4,f
   277  057A  0804               	movf	4,w
   278  057B  067D               	xorwf	btemp+-1,w
   279  057C  1903               	btfsc	3,2
   280  057D  3400               	retlw	0
   281  057E  0AFF               	incf	btemp+1,f
   282  057F  1903               	btfsc	3,2
   283  0580  0AFE               	incf	btemp,f
   284  0581  2D73               	goto	init_ram0
   285                           
   286                           	psect	cstackCOMMON
   287  0070                     __pcstackCOMMON:
   288  0070                     ?_main:
   289  0070                     ?___lmul:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ___lmul@multiplier:	
   293                           ; 4 bytes @ 0x0
   294                           
   295                           
   296                           ; 4 bytes @ 0x0
   297  0070                     	ds	4
   298  0074                     ___lmul@multiplicand:
   299                           
   300                           ; 4 bytes @ 0x4
   301  0074                     	ds	4
   302  0078                     ??___lmul:
   303                           
   304                           ; 1 bytes @ 0x8
   305  0078                     	ds	1
   306  0079                     ___lmul@product:
   307                           
   308                           ; 4 bytes @ 0x9
   309  0079                     	ds	4
   310  007D                     ??___lldiv:
   311                           
   312                           ; 1 bytes @ 0xD
   313  007D                     	ds	1
   314                           
   315                           	psect	cstackBANK0
   316  0020                     __pcstackBANK0:
   317  0020                     ?___lldiv:
   318  0020                     ___lldiv@divisor:	
   319                           ; 4 bytes @ 0x0
   320                           
   321                           
   322                           ; 4 bytes @ 0x0
   323  0020                     	ds	4
   324  0024                     ___lldiv@dividend:
   325                           
   326                           ; 4 bytes @ 0x4
   327  0024                     	ds	4
   328  0028                     ___lldiv@quotient:
   329                           
   330                           ; 4 bytes @ 0x8
   331  0028                     	ds	4
   332  002C                     ___lldiv@counter:
   333                           
   334                           ; 1 bytes @ 0xC
   335  002C                     	ds	1
   336  002D                     ?___llmod:
   337  002D                     ___llmod@divisor:	
   338                           ; 4 bytes @ 0xD
   339                           
   340                           
   341                           ; 4 bytes @ 0xD
   342  002D                     	ds	4
   343  0031                     ___llmod@dividend:
   344                           
   345                           ; 4 bytes @ 0x11
   346  0031                     	ds	4
   347  0035                     ??___llmod:
   348                           
   349                           ; 1 bytes @ 0x15
   350  0035                     	ds	1
   351  0036                     ___llmod@counter:
   352                           
   353                           ; 1 bytes @ 0x16
   354  0036                     	ds	1
   355  0037                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x17
   358  0037                     	ds	4
   359  003B                     main@adc_value:
   360                           
   361                           ; 4 bytes @ 0x1B
   362  003B                     	ds	4
   363  003F                     main@LM35_value:
   364                           
   365                           ; 4 bytes @ 0x1F
   366  003F                     	ds	4
   367                           
   368                           	psect	maintext
   369  0686                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 31 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  LM35_value      4   31[BANK0 ] volatile unsigned long 
   380 ;;  adc_value       4   27[BANK0 ] volatile unsigned long 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       8       0       0       0
   392 ;;      Temps:          0       4       0       0       0
   393 ;;      Totals:         0      12       0       0       0
   394 ;;Total ram usage:       12 bytes
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		___lldiv
   398 ;;		___llmod
   399 ;;		___lmul
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           
   406                           ;psect for function _main
   407  0686                     _main:
   408  0686                     l861:	
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   411                           
   412                           
   413                           ;main.c: 35:     TRISD = 0x00;
   414  0686  1683               	bsf	3,5	;RP0=1, select bank1
   415  0687  1303               	bcf	3,6	;RP1=0, select bank1
   416  0688  0188               	clrf	8	;volatile
   417  0689                     l863:
   418                           
   419                           ;main.c: 36:     TRISA = 0x01;
   420  0689  3001               	movlw	1
   421  068A  0085               	movwf	5	;volatile
   422  068B                     l865:
   423                           
   424                           ;main.c: 37:     RA2=0;
   425  068B  1283               	bcf	3,5	;RP0=0, select bank0
   426  068C  1303               	bcf	3,6	;RP1=0, select bank0
   427  068D  1105               	bcf	5,2	;volatile
   428  068E                     l867:
   429                           
   430                           ;main.c: 38:     RA3=0;
   431  068E  1185               	bcf	5,3	;volatile
   432  068F                     l869:
   433                           
   434                           ;main.c: 39:     RA4=0;
   435  068F  1205               	bcf	5,4	;volatile
   436  0690                     l871:
   437                           
   438                           ;main.c: 40:     RA5=0;
   439  0690  1285               	bcf	5,5	;volatile
   440  0691                     l873:
   441                           
   442                           ;main.c: 41:     PORTD = SSD[0];
   443  0691  0843               	movf	_SSD,w
   444  0692  0088               	movwf	8	;volatile
   445  0693                     l875:
   446                           
   447                           ;main.c: 44:     ADCON0 = 0x41;
   448  0693  3041               	movlw	65
   449  0694  009F               	movwf	31	;volatile
   450  0695                     l877:
   451                           
   452                           ;main.c: 45:     ADCON1 = 0x8E;
   453  0695  308E               	movlw	142
   454  0696  1683               	bsf	3,5	;RP0=1, select bank1
   455  0697  1303               	bcf	3,6	;RP1=0, select bank1
   456  0698  009F               	movwf	31	;volatile
   457  0699                     l879:
   458                           
   459                           ;main.c: 46:    _delay((unsigned long)((30)*(4000000UL/4000000.0)));
   460  0699  3009               	movlw	9
   461  069A  1283               	bcf	3,5	;RP0=0, select bank0
   462  069B  1303               	bcf	3,6	;RP1=0, select bank0
   463  069C  00B7               	movwf	??_main
   464  069D                     u397:
   465  069D  0BB7               	decfsz	??_main,f
   466  069E  2E9D               	goto	u397
   467  069F                     l881:
   468                           
   469                           ;main.c: 48:     volatile uint32_t adc_value=0;
   470  069F  3000               	movlw	0
   471  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   472  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   473  06A2  00BE               	movwf	main@adc_value+3	;volatile
   474  06A3  3000               	movlw	0
   475  06A4  00BD               	movwf	main@adc_value+2	;volatile
   476  06A5  3000               	movlw	0
   477  06A6  00BC               	movwf	main@adc_value+1	;volatile
   478  06A7  3000               	movlw	0
   479  06A8  00BB               	movwf	main@adc_value	;volatile
   480  06A9                     l883:
   481                           
   482                           ;main.c: 49:     volatile uint32_t LM35_value=0;
   483  06A9  3000               	movlw	0
   484  06AA  00C2               	movwf	main@LM35_value+3	;volatile
   485  06AB  3000               	movlw	0
   486  06AC  00C1               	movwf	main@LM35_value+2	;volatile
   487  06AD  3000               	movlw	0
   488  06AE  00C0               	movwf	main@LM35_value+1	;volatile
   489  06AF  3000               	movlw	0
   490  06B0  00BF               	movwf	main@LM35_value	;volatile
   491  06B1                     l885:
   492                           
   493                           ;main.c: 54:         GO_DONE = 1;
   494  06B1  151F               	bsf	31,2	;volatile
   495  06B2                     l887:
   496                           
   497                           ;main.c: 57:         adc_value = ((ADRESH << 8) | ADRESL);
   498  06B2  1683               	bsf	3,5	;RP0=1, select bank1
   499  06B3  1303               	bcf	3,6	;RP1=0, select bank1
   500  06B4  081E               	movf	30,w	;volatile
   501  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   502  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   503  06B7  00B7               	movwf	??_main
   504  06B8  01B8               	clrf	??_main+1
   505  06B9  081E               	movf	30,w	;volatile
   506  06BA  00B9               	movwf	??_main+2
   507  06BB  01BA               	clrf	??_main+3
   508  06BC  0839               	movf	??_main+2,w
   509  06BD  00BA               	movwf	??_main+3
   510  06BE  01B9               	clrf	??_main+2
   511  06BF  0837               	movf	??_main,w
   512  06C0  0439               	iorwf	??_main+2,w
   513  06C1  00BB               	movwf	main@adc_value	;volatile
   514  06C2  0838               	movf	??_main+1,w
   515  06C3  043A               	iorwf	??_main+3,w
   516  06C4  00BC               	movwf	main@adc_value+1	;volatile
   517  06C5  01BD               	clrf	main@adc_value+2	;volatile
   518  06C6  1BBC               	btfsc	main@adc_value+1,7	;volatile
   519  06C7  03BD               	decf	main@adc_value+2,f	;volatile
   520  06C8  083D               	movf	main@adc_value+2,w	;volatile
   521  06C9  00BE               	movwf	main@adc_value+3	;volatile
   522  06CA                     l48:	
   523                           ;main.c: 60:         {;main.c: 62:         }
   524                           
   525                           
   526                           ;main.c: 59:         while(ADCON0bits.GO_DONE)
   527  06CA  191F               	btfsc	31,2	;volatile
   528  06CB  2ECD               	goto	u381
   529  06CC  2ECE               	goto	u380
   530  06CD                     u381:
   531  06CD  2ECA               	goto	l48
   532  06CE                     u380:
   533  06CE                     l889:
   534                           
   535                           ;main.c: 64:         LM35_value = (adc_value*1500)/1023;
   536  06CE  3000               	movlw	0
   537  06CF  00A3               	movwf	___lldiv@divisor+3
   538  06D0  3000               	movlw	0
   539  06D1  00A2               	movwf	___lldiv@divisor+2
   540  06D2  3003               	movlw	3
   541  06D3  00A1               	movwf	___lldiv@divisor+1
   542  06D4  30FF               	movlw	255
   543  06D5  00A0               	movwf	___lldiv@divisor
   544  06D6  083E               	movf	main@adc_value+3,w	;volatile
   545  06D7  00F3               	movwf	___lmul@multiplier+3
   546  06D8  083D               	movf	main@adc_value+2,w	;volatile
   547  06D9  00F2               	movwf	___lmul@multiplier+2
   548  06DA  083C               	movf	main@adc_value+1,w	;volatile
   549  06DB  00F1               	movwf	___lmul@multiplier+1
   550  06DC  083B               	movf	main@adc_value,w	;volatile
   551  06DD  00F0               	movwf	___lmul@multiplier
   552  06DE  3000               	movlw	0
   553  06DF  00F7               	movwf	___lmul@multiplicand+3
   554  06E0  3000               	movlw	0
   555  06E1  00F6               	movwf	___lmul@multiplicand+2
   556  06E2  3005               	movlw	5
   557  06E3  00F5               	movwf	___lmul@multiplicand+1
   558  06E4  30DC               	movlw	220
   559  06E5  00F4               	movwf	___lmul@multiplicand
   560  06E6  120A  118A  2582  120A  118A  	fcall	___lmul
   561  06EB  0873               	movf	?___lmul+3,w
   562  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   563  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   564  06EE  00A7               	movwf	___lldiv@dividend+3
   565  06EF  0872               	movf	?___lmul+2,w
   566  06F0  00A6               	movwf	___lldiv@dividend+2
   567  06F1  0871               	movf	?___lmul+1,w
   568  06F2  00A5               	movwf	___lldiv@dividend+1
   569  06F3  0870               	movf	?___lmul,w
   570  06F4  00A4               	movwf	___lldiv@dividend
   571  06F5  120A  118A  261E  120A  118A  	fcall	___lldiv
   572  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   573  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   574  06FC  0823               	movf	?___lldiv+3,w
   575  06FD  00C2               	movwf	main@LM35_value+3	;volatile
   576  06FE  0822               	movf	?___lldiv+2,w
   577  06FF  00C1               	movwf	main@LM35_value+2	;volatile
   578  0700  0821               	movf	?___lldiv+1,w
   579  0701  00C0               	movwf	main@LM35_value+1	;volatile
   580  0702  0820               	movf	?___lldiv,w
   581  0703  00BF               	movwf	main@LM35_value	;volatile
   582                           
   583                           ;main.c: 69:         SSD2_counter = ((LM35_value/10) % 10);
   584  0704  3000               	movlw	0
   585  0705  00B0               	movwf	___llmod@divisor+3
   586  0706  3000               	movlw	0
   587  0707  00AF               	movwf	___llmod@divisor+2
   588  0708  3000               	movlw	0
   589  0709  00AE               	movwf	___llmod@divisor+1
   590  070A  300A               	movlw	10
   591  070B  00AD               	movwf	___llmod@divisor
   592  070C  3000               	movlw	0
   593  070D  00A3               	movwf	___lldiv@divisor+3
   594  070E  3000               	movlw	0
   595  070F  00A2               	movwf	___lldiv@divisor+2
   596  0710  3000               	movlw	0
   597  0711  00A1               	movwf	___lldiv@divisor+1
   598  0712  300A               	movlw	10
   599  0713  00A0               	movwf	___lldiv@divisor
   600  0714  0842               	movf	main@LM35_value+3,w	;volatile
   601  0715  00A7               	movwf	___lldiv@dividend+3
   602  0716  0841               	movf	main@LM35_value+2,w	;volatile
   603  0717  00A6               	movwf	___lldiv@dividend+2
   604  0718  0840               	movf	main@LM35_value+1,w	;volatile
   605  0719  00A5               	movwf	___lldiv@dividend+1
   606  071A  083F               	movf	main@LM35_value,w	;volatile
   607  071B  00A4               	movwf	___lldiv@dividend
   608  071C  120A  118A  261E  120A  118A  	fcall	___lldiv
   609  0721  1283               	bcf	3,5	;RP0=0, select bank0
   610  0722  1303               	bcf	3,6	;RP1=0, select bank0
   611  0723  0823               	movf	?___lldiv+3,w
   612  0724  00B4               	movwf	___llmod@dividend+3
   613  0725  0822               	movf	?___lldiv+2,w
   614  0726  00B3               	movwf	___llmod@dividend+2
   615  0727  0821               	movf	?___lldiv+1,w
   616  0728  00B2               	movwf	___llmod@dividend+1
   617  0729  0820               	movf	?___lldiv,w
   618  072A  00B1               	movwf	___llmod@dividend
   619  072B  120A  118A  25C8  120A  118A  	fcall	___llmod
   620  0730  1283               	bcf	3,5	;RP0=0, select bank0
   621  0731  1303               	bcf	3,6	;RP1=0, select bank0
   622  0732  082D               	movf	?___llmod,w
   623  0733  00FF               	movwf	btemp+1
   624  0734  087F               	movf	btemp+1,w
   625  0735  00D3               	movwf	_SSD2_counter
   626                           
   627                           ;main.c: 70:         SSD3_counter = ((LM35_value/100) % 10);
   628  0736  3000               	movlw	0
   629  0737  00B0               	movwf	___llmod@divisor+3
   630  0738  3000               	movlw	0
   631  0739  00AF               	movwf	___llmod@divisor+2
   632  073A  3000               	movlw	0
   633  073B  00AE               	movwf	___llmod@divisor+1
   634  073C  300A               	movlw	10
   635  073D  00AD               	movwf	___llmod@divisor
   636  073E  3000               	movlw	0
   637  073F  00A3               	movwf	___lldiv@divisor+3
   638  0740  3000               	movlw	0
   639  0741  00A2               	movwf	___lldiv@divisor+2
   640  0742  3000               	movlw	0
   641  0743  00A1               	movwf	___lldiv@divisor+1
   642  0744  3064               	movlw	100
   643  0745  00A0               	movwf	___lldiv@divisor
   644  0746  0842               	movf	main@LM35_value+3,w	;volatile
   645  0747  00A7               	movwf	___lldiv@dividend+3
   646  0748  0841               	movf	main@LM35_value+2,w	;volatile
   647  0749  00A6               	movwf	___lldiv@dividend+2
   648  074A  0840               	movf	main@LM35_value+1,w	;volatile
   649  074B  00A5               	movwf	___lldiv@dividend+1
   650  074C  083F               	movf	main@LM35_value,w	;volatile
   651  074D  00A4               	movwf	___lldiv@dividend
   652  074E  120A  118A  261E  120A  118A  	fcall	___lldiv
   653  0753  1283               	bcf	3,5	;RP0=0, select bank0
   654  0754  1303               	bcf	3,6	;RP1=0, select bank0
   655  0755  0823               	movf	?___lldiv+3,w
   656  0756  00B4               	movwf	___llmod@dividend+3
   657  0757  0822               	movf	?___lldiv+2,w
   658  0758  00B3               	movwf	___llmod@dividend+2
   659  0759  0821               	movf	?___lldiv+1,w
   660  075A  00B2               	movwf	___llmod@dividend+1
   661  075B  0820               	movf	?___lldiv,w
   662  075C  00B1               	movwf	___llmod@dividend
   663  075D  120A  118A  25C8  120A  118A  	fcall	___llmod
   664  0762  1283               	bcf	3,5	;RP0=0, select bank0
   665  0763  1303               	bcf	3,6	;RP1=0, select bank0
   666  0764  082D               	movf	?___llmod,w
   667  0765  00FF               	movwf	btemp+1
   668  0766  087F               	movf	btemp+1,w
   669  0767  00D2               	movwf	_SSD3_counter
   670                           
   671                           ;main.c: 71:         SSD4_counter = ((LM35_value/1000) % 10);
   672  0768  3000               	movlw	0
   673  0769  00B0               	movwf	___llmod@divisor+3
   674  076A  3000               	movlw	0
   675  076B  00AF               	movwf	___llmod@divisor+2
   676  076C  3000               	movlw	0
   677  076D  00AE               	movwf	___llmod@divisor+1
   678  076E  300A               	movlw	10
   679  076F  00AD               	movwf	___llmod@divisor
   680  0770  3000               	movlw	0
   681  0771  00A3               	movwf	___lldiv@divisor+3
   682  0772  3000               	movlw	0
   683  0773  00A2               	movwf	___lldiv@divisor+2
   684  0774  3003               	movlw	3
   685  0775  00A1               	movwf	___lldiv@divisor+1
   686  0776  30E8               	movlw	232
   687  0777  00A0               	movwf	___lldiv@divisor
   688  0778  0842               	movf	main@LM35_value+3,w	;volatile
   689  0779  00A7               	movwf	___lldiv@dividend+3
   690  077A  0841               	movf	main@LM35_value+2,w	;volatile
   691  077B  00A6               	movwf	___lldiv@dividend+2
   692  077C  0840               	movf	main@LM35_value+1,w	;volatile
   693  077D  00A5               	movwf	___lldiv@dividend+1
   694  077E  083F               	movf	main@LM35_value,w	;volatile
   695  077F  00A4               	movwf	___lldiv@dividend
   696  0780  120A  118A  261E  120A  118A  	fcall	___lldiv
   697  0785  1283               	bcf	3,5	;RP0=0, select bank0
   698  0786  1303               	bcf	3,6	;RP1=0, select bank0
   699  0787  0823               	movf	?___lldiv+3,w
   700  0788  00B4               	movwf	___llmod@dividend+3
   701  0789  0822               	movf	?___lldiv+2,w
   702  078A  00B3               	movwf	___llmod@dividend+2
   703  078B  0821               	movf	?___lldiv+1,w
   704  078C  00B2               	movwf	___llmod@dividend+1
   705  078D  0820               	movf	?___lldiv,w
   706  078E  00B1               	movwf	___llmod@dividend
   707  078F  120A  118A  25C8  120A  118A  	fcall	___llmod
   708  0794  1283               	bcf	3,5	;RP0=0, select bank0
   709  0795  1303               	bcf	3,6	;RP1=0, select bank0
   710  0796  082D               	movf	?___llmod,w
   711  0797  00FF               	movwf	btemp+1
   712  0798  087F               	movf	btemp+1,w
   713  0799  00D1               	movwf	_SSD4_counter
   714                           
   715                           ;main.c: 73:         switch (SSD_status) {
   716  079A  2FD1               	goto	l909
   717  079B                     l52:	
   718                           ;main.c: 74:             case 1:
   719                           
   720                           
   721                           ;main.c: 75:                 RA2 = 0;
   722  079B  1105               	bcf	5,2	;volatile
   723                           
   724                           ;main.c: 76:                 RA3 = 0;
   725  079C  1185               	bcf	5,3	;volatile
   726                           
   727                           ;main.c: 77:                 RA4 = 0;
   728  079D  1205               	bcf	5,4	;volatile
   729                           
   730                           ;main.c: 78:                 RA5 = 1;
   731  079E  1685               	bsf	5,5	;volatile
   732  079F                     l891:
   733                           
   734                           ;main.c: 79:                 PORTD = SSD[10];
   735  079F  084D               	movf	_SSD+10,w
   736  07A0  0088               	movwf	8	;volatile
   737  07A1                     l893:
   738                           
   739                           ;main.c: 80:                 SSD_status = 2;
   740  07A1  3002               	movlw	2
   741  07A2  00FF               	movwf	btemp+1
   742  07A3  087F               	movf	btemp+1,w
   743  07A4  00D0               	movwf	_SSD_status
   744                           
   745                           ;main.c: 82:                 break;
   746  07A5  2EB1               	goto	l885
   747  07A6                     l54:	
   748                           ;main.c: 84:             case 2:
   749                           
   750                           
   751                           ;main.c: 85:                 RA2 = 0;
   752  07A6  1105               	bcf	5,2	;volatile
   753                           
   754                           ;main.c: 86:                 RA3 = 0;
   755  07A7  1185               	bcf	5,3	;volatile
   756                           
   757                           ;main.c: 87:                 RA4 = 1;
   758  07A8  1605               	bsf	5,4	;volatile
   759                           
   760                           ;main.c: 88:                 RA5 = 0;
   761  07A9  1285               	bcf	5,5	;volatile
   762  07AA                     l895:
   763                           
   764                           ;main.c: 89:                 PORTD = SSD[SSD2_counter];
   765  07AA  0853               	movf	_SSD2_counter,w
   766  07AB  3E43               	addlw	(low (_SSD| 0))& (0+255)
   767  07AC  0084               	movwf	4
   768  07AD  1383               	bcf	3,7	;select IRP bank0
   769  07AE  0800               	movf	0,w
   770  07AF  0088               	movwf	8	;volatile
   771  07B0                     l897:
   772                           
   773                           ;main.c: 90:                 SSD_status = 3;
   774  07B0  3003               	movlw	3
   775  07B1  00FF               	movwf	btemp+1
   776  07B2  087F               	movf	btemp+1,w
   777  07B3  00D0               	movwf	_SSD_status
   778                           
   779                           ;main.c: 92:                 break;
   780  07B4  2EB1               	goto	l885
   781  07B5                     l55:	
   782                           ;main.c: 94:             case 3:
   783                           
   784                           
   785                           ;main.c: 95:                 RA2 = 0;
   786  07B5  1105               	bcf	5,2	;volatile
   787                           
   788                           ;main.c: 96:                 RA3 = 1;
   789  07B6  1585               	bsf	5,3	;volatile
   790                           
   791                           ;main.c: 97:                 RA4 = 0;
   792  07B7  1205               	bcf	5,4	;volatile
   793                           
   794                           ;main.c: 98:                 RA5 = 0;
   795  07B8  1285               	bcf	5,5	;volatile
   796  07B9                     l899:
   797                           
   798                           ;main.c: 99:                 PORTD = SSD[SSD3_counter];
   799  07B9  0852               	movf	_SSD3_counter,w
   800  07BA  3E43               	addlw	(low (_SSD| 0))& (0+255)
   801  07BB  0084               	movwf	4
   802  07BC  1383               	bcf	3,7	;select IRP bank0
   803  07BD  0800               	movf	0,w
   804  07BE  0088               	movwf	8	;volatile
   805  07BF                     l901:
   806                           
   807                           ;main.c: 102:                 SSD_status = 4;
   808  07BF  3004               	movlw	4
   809  07C0  00FF               	movwf	btemp+1
   810  07C1  087F               	movf	btemp+1,w
   811  07C2  00D0               	movwf	_SSD_status
   812                           
   813                           ;main.c: 103:                 break;
   814  07C3  2EB1               	goto	l885
   815  07C4                     l56:	
   816                           ;main.c: 105:             case 4:
   817                           
   818                           
   819                           ;main.c: 106:                 RA2 = 1;
   820  07C4  1505               	bsf	5,2	;volatile
   821                           
   822                           ;main.c: 107:                 RA3 = 0;
   823  07C5  1185               	bcf	5,3	;volatile
   824                           
   825                           ;main.c: 108:                 RA4 = 0;
   826  07C6  1205               	bcf	5,4	;volatile
   827                           
   828                           ;main.c: 109:                 RA5 = 0;
   829  07C7  1285               	bcf	5,5	;volatile
   830  07C8                     l903:
   831                           
   832                           ;main.c: 110:                 PORTD = SSD[SSD4_counter];
   833  07C8  0851               	movf	_SSD4_counter,w
   834  07C9  3E43               	addlw	(low (_SSD| 0))& (0+255)
   835  07CA  0084               	movwf	4
   836  07CB  1383               	bcf	3,7	;select IRP bank0
   837  07CC  0800               	movf	0,w
   838  07CD  0088               	movwf	8	;volatile
   839  07CE                     l905:
   840                           
   841                           ;main.c: 111:                 SSD_status = 1;
   842  07CE  01D0               	clrf	_SSD_status
   843  07CF  0AD0               	incf	_SSD_status,f
   844                           
   845                           ;main.c: 113:                 break;
   846  07D0  2EB1               	goto	l885
   847  07D1                     l909:
   848  07D1  0850               	movf	_SSD_status,w
   849  07D2  00B7               	movwf	??_main
   850  07D3  01B8               	clrf	??_main+1
   851                           
   852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 1, Range of values is 0 to 0
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte            4     3 (average)
   858                           ; direct_byte           11     8 (fixed)
   859                           ; jumptable            260     6 (fixed)
   860                           ;	Chosen strategy is simple_byte
   861  07D4  0838               	movf	??_main+1,w
   862  07D5  3A00               	xorlw	0	; case 0
   863  07D6  1903               	skipnz
   864  07D7  2FD9               	goto	l947
   865  07D8  2EB1               	goto	l885
   866  07D9                     l947:
   867                           
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 4, Range of values is 1 to 4
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte           13     7 (average)
   873                           ; direct_byte           23    11 (fixed)
   874                           ; jumptable            263     9 (fixed)
   875                           ;	Chosen strategy is simple_byte
   876  07D9  0837               	movf	??_main,w
   877  07DA  3A01               	xorlw	1	; case 1
   878  07DB  1903               	skipnz
   879  07DC  2F9B               	goto	l52
   880  07DD  3A03               	xorlw	3	; case 2
   881  07DE  1903               	skipnz
   882  07DF  2FA6               	goto	l54
   883  07E0  3A01               	xorlw	1	; case 3
   884  07E1  1903               	skipnz
   885  07E2  2FB5               	goto	l55
   886  07E3  3A07               	xorlw	7	; case 4
   887  07E4  1903               	skipnz
   888  07E5  2FC4               	goto	l56
   889  07E6  2EB1               	goto	l885
   890  07E7  120A  118A  2800   	ljmp	start
   891  07EA                     __end_of_main:
   892                           
   893                           	psect	text1
   894  0582                     __ptext1:	
   895 ;; *************** function ___lmul *****************
   896 ;; Defined at:
   897 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  multiplier      4    0[COMMON] unsigned long 
   900 ;;  multiplicand    4    4[COMMON] unsigned long 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  product         4    9[COMMON] unsigned long 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  4    0[COMMON] unsigned long 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         8       0       0       0       0
   913 ;;      Locals:         4       0       0       0       0
   914 ;;      Temps:          1       0       0       0       0
   915 ;;      Totals:        13       0       0       0       0
   916 ;;Total ram usage:       13 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function ___lmul
   927  0582                     ___lmul:
   928  0582                     l799:	
   929                           ;incstack = 0
   930                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   931                           
   932  0582  3000               	movlw	0
   933  0583  00FC               	movwf	___lmul@product+3
   934  0584  3000               	movlw	0
   935  0585  00FB               	movwf	___lmul@product+2
   936  0586  3000               	movlw	0
   937  0587  00FA               	movwf	___lmul@product+1
   938  0588  3000               	movlw	0
   939  0589  00F9               	movwf	___lmul@product
   940  058A                     l801:
   941  058A  1C70               	btfss	___lmul@multiplier,0
   942  058B  2D8D               	goto	u201
   943  058C  2D8E               	goto	u200
   944  058D                     u201:
   945  058D  2DA5               	goto	l805
   946  058E                     u200:
   947  058E                     l803:
   948  058E  0874               	movf	___lmul@multiplicand,w
   949  058F  07F9               	addwf	___lmul@product,f
   950  0590  0875               	movf	___lmul@multiplicand+1,w
   951  0591  1103               	clrz
   952  0592  1803               	skipnc
   953  0593  3E01               	addlw	1
   954  0594  1903               	skipnz
   955  0595  2D97               	goto	u211
   956  0596  07FA               	addwf	___lmul@product+1,f
   957  0597                     u211:
   958  0597  0876               	movf	___lmul@multiplicand+2,w
   959  0598  1103               	clrz
   960  0599  1803               	skipnc
   961  059A  3E01               	addlw	1
   962  059B  1903               	skipnz
   963  059C  2D9E               	goto	u212
   964  059D  07FB               	addwf	___lmul@product+2,f
   965  059E                     u212:
   966  059E  0877               	movf	___lmul@multiplicand+3,w
   967  059F  1103               	clrz
   968  05A0  1803               	skipnc
   969  05A1  3E01               	addlw	1
   970  05A2  1903               	skipnz
   971  05A3  2DA5               	goto	u213
   972  05A4  07FC               	addwf	___lmul@product+3,f
   973  05A5                     u213:
   974  05A5                     l805:
   975  05A5  3001               	movlw	1
   976  05A6  00F8               	movwf	??___lmul
   977  05A7                     u225:
   978  05A7  1003               	clrc
   979  05A8  0DF4               	rlf	___lmul@multiplicand,f
   980  05A9  0DF5               	rlf	___lmul@multiplicand+1,f
   981  05AA  0DF6               	rlf	___lmul@multiplicand+2,f
   982  05AB  0DF7               	rlf	___lmul@multiplicand+3,f
   983  05AC  0BF8               	decfsz	??___lmul,f
   984  05AD  2DA7               	goto	u225
   985  05AE                     l807:
   986  05AE  3001               	movlw	1
   987  05AF                     u235:
   988  05AF  1003               	clrc
   989  05B0  0CF3               	rrf	___lmul@multiplier+3,f
   990  05B1  0CF2               	rrf	___lmul@multiplier+2,f
   991  05B2  0CF1               	rrf	___lmul@multiplier+1,f
   992  05B3  0CF0               	rrf	___lmul@multiplier,f
   993  05B4  3EFF               	addlw	-1
   994  05B5  1D03               	skipz
   995  05B6  2DAF               	goto	u235
   996  05B7  0873               	movf	___lmul@multiplier+3,w
   997  05B8  0472               	iorwf	___lmul@multiplier+2,w
   998  05B9  0471               	iorwf	___lmul@multiplier+1,w
   999  05BA  0470               	iorwf	___lmul@multiplier,w
  1000  05BB  1D03               	skipz
  1001  05BC  2DBE               	goto	u241
  1002  05BD  2DBF               	goto	u240
  1003  05BE                     u241:
  1004  05BE  2D8A               	goto	l801
  1005  05BF                     u240:
  1006  05BF                     l809:
  1007  05BF  087C               	movf	___lmul@product+3,w
  1008  05C0  00F3               	movwf	?___lmul+3
  1009  05C1  087B               	movf	___lmul@product+2,w
  1010  05C2  00F2               	movwf	?___lmul+2
  1011  05C3  087A               	movf	___lmul@product+1,w
  1012  05C4  00F1               	movwf	?___lmul+1
  1013  05C5  0879               	movf	___lmul@product,w
  1014  05C6  00F0               	movwf	?___lmul
  1015  05C7                     l159:
  1016  05C7  0008               	return
  1017  05C8                     __end_of___lmul:
  1018                           
  1019                           	psect	text2
  1020  05C8                     __ptext2:	
  1021 ;; *************** function ___llmod *****************
  1022 ;; Defined at:
  1023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  divisor         4   13[BANK0 ] unsigned long 
  1026 ;;  dividend        4   17[BANK0 ] unsigned long 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  counter         1   22[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  4   13[BANK0 ] unsigned long 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, btemp+1
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       8       0       0       0
  1039 ;;      Locals:         0       1       0       0       0
  1040 ;;      Temps:          0       1       0       0       0
  1041 ;;      Totals:         0      10       0       0       0
  1042 ;;Total ram usage:       10 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function ___llmod
  1053  05C8                     ___llmod:
  1054  05C8                     l839:	
  1055                           ;incstack = 0
  1056                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  1057                           
  1058  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1059  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1060  05CA  0830               	movf	___llmod@divisor+3,w
  1061  05CB  042F               	iorwf	___llmod@divisor+2,w
  1062  05CC  042E               	iorwf	___llmod@divisor+1,w
  1063  05CD  042D               	iorwf	___llmod@divisor,w
  1064  05CE  1903               	skipnz
  1065  05CF  2DD1               	goto	u321
  1066  05D0  2DD2               	goto	u320
  1067  05D1                     u321:
  1068  05D1  2E15               	goto	l857
  1069  05D2                     u320:
  1070  05D2                     l841:
  1071  05D2  01B6               	clrf	___llmod@counter
  1072  05D3  0AB6               	incf	___llmod@counter,f
  1073  05D4  2DE2               	goto	l847
  1074  05D5                     l843:
  1075  05D5  3001               	movlw	1
  1076  05D6  00B5               	movwf	??___llmod
  1077  05D7                     u335:
  1078  05D7  1003               	clrc
  1079  05D8  0DAD               	rlf	___llmod@divisor,f
  1080  05D9  0DAE               	rlf	___llmod@divisor+1,f
  1081  05DA  0DAF               	rlf	___llmod@divisor+2,f
  1082  05DB  0DB0               	rlf	___llmod@divisor+3,f
  1083  05DC  0BB5               	decfsz	??___llmod,f
  1084  05DD  2DD7               	goto	u335
  1085  05DE                     l845:
  1086  05DE  3001               	movlw	1
  1087  05DF  00FF               	movwf	btemp+1
  1088  05E0  087F               	movf	btemp+1,w
  1089  05E1  07B6               	addwf	___llmod@counter,f
  1090  05E2                     l847:
  1091  05E2  1FB0               	btfss	___llmod@divisor+3,7
  1092  05E3  2DE5               	goto	u341
  1093  05E4  2DE6               	goto	u340
  1094  05E5                     u341:
  1095  05E5  2DD5               	goto	l843
  1096  05E6                     u340:
  1097  05E6                     l849:
  1098  05E6  0830               	movf	___llmod@divisor+3,w
  1099  05E7  0234               	subwf	___llmod@dividend+3,w
  1100  05E8  1D03               	skipz
  1101  05E9  2DF4               	goto	u355
  1102  05EA  082F               	movf	___llmod@divisor+2,w
  1103  05EB  0233               	subwf	___llmod@dividend+2,w
  1104  05EC  1D03               	skipz
  1105  05ED  2DF4               	goto	u355
  1106  05EE  082E               	movf	___llmod@divisor+1,w
  1107  05EF  0232               	subwf	___llmod@dividend+1,w
  1108  05F0  1D03               	skipz
  1109  05F1  2DF4               	goto	u355
  1110  05F2  082D               	movf	___llmod@divisor,w
  1111  05F3  0231               	subwf	___llmod@dividend,w
  1112  05F4                     u355:
  1113  05F4  1C03               	skipc
  1114  05F5  2DF7               	goto	u351
  1115  05F6  2DF8               	goto	u350
  1116  05F7                     u351:
  1117  05F7  2E06               	goto	l853
  1118  05F8                     u350:
  1119  05F8                     l851:
  1120  05F8  082D               	movf	___llmod@divisor,w
  1121  05F9  02B1               	subwf	___llmod@dividend,f
  1122  05FA  082E               	movf	___llmod@divisor+1,w
  1123  05FB  1C03               	skipc
  1124  05FC  0F2E               	incfsz	___llmod@divisor+1,w
  1125  05FD  02B2               	subwf	___llmod@dividend+1,f
  1126  05FE  082F               	movf	___llmod@divisor+2,w
  1127  05FF  1C03               	skipc
  1128  0600  0F2F               	incfsz	___llmod@divisor+2,w
  1129  0601  02B3               	subwf	___llmod@dividend+2,f
  1130  0602  0830               	movf	___llmod@divisor+3,w
  1131  0603  1C03               	skipc
  1132  0604  0F30               	incfsz	___llmod@divisor+3,w
  1133  0605  02B4               	subwf	___llmod@dividend+3,f
  1134  0606                     l853:
  1135  0606  3001               	movlw	1
  1136  0607                     u365:
  1137  0607  1003               	clrc
  1138  0608  0CB0               	rrf	___llmod@divisor+3,f
  1139  0609  0CAF               	rrf	___llmod@divisor+2,f
  1140  060A  0CAE               	rrf	___llmod@divisor+1,f
  1141  060B  0CAD               	rrf	___llmod@divisor,f
  1142  060C  3EFF               	addlw	-1
  1143  060D  1D03               	skipz
  1144  060E  2E07               	goto	u365
  1145  060F                     l855:
  1146  060F  3001               	movlw	1
  1147  0610  02B6               	subwf	___llmod@counter,f
  1148  0611  1D03               	btfss	3,2
  1149  0612  2E14               	goto	u371
  1150  0613  2E15               	goto	u370
  1151  0614                     u371:
  1152  0614  2DE6               	goto	l849
  1153  0615                     u370:
  1154  0615                     l857:
  1155  0615  0834               	movf	___llmod@dividend+3,w
  1156  0616  00B0               	movwf	?___llmod+3
  1157  0617  0833               	movf	___llmod@dividend+2,w
  1158  0618  00AF               	movwf	?___llmod+2
  1159  0619  0832               	movf	___llmod@dividend+1,w
  1160  061A  00AE               	movwf	?___llmod+1
  1161  061B  0831               	movf	___llmod@dividend,w
  1162  061C  00AD               	movwf	?___llmod
  1163  061D                     l367:
  1164  061D  0008               	return
  1165  061E                     __end_of___llmod:
  1166                           
  1167                           	psect	text3
  1168  061E                     __ptext3:	
  1169 ;; *************** function ___lldiv *****************
  1170 ;; Defined at:
  1171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  divisor         4    0[BANK0 ] unsigned long 
  1174 ;;  dividend        4    4[BANK0 ] unsigned long 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  quotient        4    8[BANK0 ] unsigned long 
  1177 ;;  counter         1   12[BANK0 ] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  4    0[BANK0 ] unsigned long 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, btemp+1
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       8       0       0       0
  1188 ;;      Locals:         0       5       0       0       0
  1189 ;;      Temps:          1       0       0       0       0
  1190 ;;      Totals:         1      13       0       0       0
  1191 ;;Total ram usage:       14 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function ___lldiv
  1202  061E                     ___lldiv:
  1203  061E                     l813:	
  1204                           ;incstack = 0
  1205                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1206                           
  1207  061E  3000               	movlw	0
  1208  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0621  00AB               	movwf	___lldiv@quotient+3
  1211  0622  3000               	movlw	0
  1212  0623  00AA               	movwf	___lldiv@quotient+2
  1213  0624  3000               	movlw	0
  1214  0625  00A9               	movwf	___lldiv@quotient+1
  1215  0626  3000               	movlw	0
  1216  0627  00A8               	movwf	___lldiv@quotient
  1217  0628  0823               	movf	___lldiv@divisor+3,w
  1218  0629  0422               	iorwf	___lldiv@divisor+2,w
  1219  062A  0421               	iorwf	___lldiv@divisor+1,w
  1220  062B  0420               	iorwf	___lldiv@divisor,w
  1221  062C  1903               	skipnz
  1222  062D  2E2F               	goto	u251
  1223  062E  2E30               	goto	u250
  1224  062F                     u251:
  1225  062F  2E7D               	goto	l835
  1226  0630                     u250:
  1227  0630                     l815:
  1228  0630  01AC               	clrf	___lldiv@counter
  1229  0631  0AAC               	incf	___lldiv@counter,f
  1230  0632  2E40               	goto	l821
  1231  0633                     l817:
  1232  0633  3001               	movlw	1
  1233  0634  00FD               	movwf	??___lldiv
  1234  0635                     u265:
  1235  0635  1003               	clrc
  1236  0636  0DA0               	rlf	___lldiv@divisor,f
  1237  0637  0DA1               	rlf	___lldiv@divisor+1,f
  1238  0638  0DA2               	rlf	___lldiv@divisor+2,f
  1239  0639  0DA3               	rlf	___lldiv@divisor+3,f
  1240  063A  0BFD               	decfsz	??___lldiv,f
  1241  063B  2E35               	goto	u265
  1242  063C                     l819:
  1243  063C  3001               	movlw	1
  1244  063D  00FF               	movwf	btemp+1
  1245  063E  087F               	movf	btemp+1,w
  1246  063F  07AC               	addwf	___lldiv@counter,f
  1247  0640                     l821:
  1248  0640  1FA3               	btfss	___lldiv@divisor+3,7
  1249  0641  2E43               	goto	u271
  1250  0642  2E44               	goto	u270
  1251  0643                     u271:
  1252  0643  2E33               	goto	l817
  1253  0644                     u270:
  1254  0644                     l823:
  1255  0644  3001               	movlw	1
  1256  0645  00FD               	movwf	??___lldiv
  1257  0646                     u285:
  1258  0646  1003               	clrc
  1259  0647  0DA8               	rlf	___lldiv@quotient,f
  1260  0648  0DA9               	rlf	___lldiv@quotient+1,f
  1261  0649  0DAA               	rlf	___lldiv@quotient+2,f
  1262  064A  0DAB               	rlf	___lldiv@quotient+3,f
  1263  064B  0BFD               	decfsz	??___lldiv,f
  1264  064C  2E46               	goto	u285
  1265  064D                     l825:
  1266  064D  0823               	movf	___lldiv@divisor+3,w
  1267  064E  0227               	subwf	___lldiv@dividend+3,w
  1268  064F  1D03               	skipz
  1269  0650  2E5B               	goto	u295
  1270  0651  0822               	movf	___lldiv@divisor+2,w
  1271  0652  0226               	subwf	___lldiv@dividend+2,w
  1272  0653  1D03               	skipz
  1273  0654  2E5B               	goto	u295
  1274  0655  0821               	movf	___lldiv@divisor+1,w
  1275  0656  0225               	subwf	___lldiv@dividend+1,w
  1276  0657  1D03               	skipz
  1277  0658  2E5B               	goto	u295
  1278  0659  0820               	movf	___lldiv@divisor,w
  1279  065A  0224               	subwf	___lldiv@dividend,w
  1280  065B                     u295:
  1281  065B  1C03               	skipc
  1282  065C  2E5E               	goto	u291
  1283  065D  2E5F               	goto	u290
  1284  065E                     u291:
  1285  065E  2E6E               	goto	l831
  1286  065F                     u290:
  1287  065F                     l827:
  1288  065F  0820               	movf	___lldiv@divisor,w
  1289  0660  02A4               	subwf	___lldiv@dividend,f
  1290  0661  0821               	movf	___lldiv@divisor+1,w
  1291  0662  1C03               	skipc
  1292  0663  0F21               	incfsz	___lldiv@divisor+1,w
  1293  0664  02A5               	subwf	___lldiv@dividend+1,f
  1294  0665  0822               	movf	___lldiv@divisor+2,w
  1295  0666  1C03               	skipc
  1296  0667  0F22               	incfsz	___lldiv@divisor+2,w
  1297  0668  02A6               	subwf	___lldiv@dividend+2,f
  1298  0669  0823               	movf	___lldiv@divisor+3,w
  1299  066A  1C03               	skipc
  1300  066B  0F23               	incfsz	___lldiv@divisor+3,w
  1301  066C  02A7               	subwf	___lldiv@dividend+3,f
  1302  066D                     l829:
  1303  066D  1428               	bsf	___lldiv@quotient,0
  1304  066E                     l831:
  1305  066E  3001               	movlw	1
  1306  066F                     u305:
  1307  066F  1003               	clrc
  1308  0670  0CA3               	rrf	___lldiv@divisor+3,f
  1309  0671  0CA2               	rrf	___lldiv@divisor+2,f
  1310  0672  0CA1               	rrf	___lldiv@divisor+1,f
  1311  0673  0CA0               	rrf	___lldiv@divisor,f
  1312  0674  3EFF               	addlw	-1
  1313  0675  1D03               	skipz
  1314  0676  2E6F               	goto	u305
  1315  0677                     l833:
  1316  0677  3001               	movlw	1
  1317  0678  02AC               	subwf	___lldiv@counter,f
  1318  0679  1D03               	btfss	3,2
  1319  067A  2E7C               	goto	u311
  1320  067B  2E7D               	goto	u310
  1321  067C                     u311:
  1322  067C  2E44               	goto	l823
  1323  067D                     u310:
  1324  067D                     l835:
  1325  067D  082B               	movf	___lldiv@quotient+3,w
  1326  067E  00A3               	movwf	?___lldiv+3
  1327  067F  082A               	movf	___lldiv@quotient+2,w
  1328  0680  00A2               	movwf	?___lldiv+2
  1329  0681  0829               	movf	___lldiv@quotient+1,w
  1330  0682  00A1               	movwf	?___lldiv+1
  1331  0683  0828               	movf	___lldiv@quotient,w
  1332  0684  00A0               	movwf	?___lldiv
  1333  0685                     l181:
  1334  0685  0008               	return
  1335  0686                     __end_of___lldiv:
  1336  007E                     btemp	set	126	;btemp
  1337  007E                     wtemp0	set	126
  1338                           
  1339                           	psect	config
  1340                           
  1341                           ;Config register CONFIG @ 0x2007
  1342                           ;	Oscillator Selection bits
  1343                           ;	FOSC = XT, XT oscillator
  1344                           ;	Watchdog Timer Enable bit
  1345                           ;	WDTE = OFF, WDT disabled
  1346                           ;	Power-up Timer Enable bit
  1347                           ;	PWRTE = ON, PWRT enabled
  1348                           ;	Brown-out Reset Enable bit
  1349                           ;	BOREN = ON, BOR enabled
  1350                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1351                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1352                           ;	Data EEPROM Memory Code Protection bit
  1353                           ;	CPD = OFF, Data EEPROM code protection off
  1354                           ;	Flash Program Memory Write Enable bits
  1355                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1356                           ;	In-Circuit Debugger Mode bit
  1357                           ;	DEBUG = 0x1, unprogrammed default
  1358                           ;	Flash Program Memory Code Protection bit
  1359                           ;	CP = OFF, Code protection off
  1360  2007                     	org	8199
  1361  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    ___llmod->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1721
                                             23 BANK0     12    12      0
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     615
                                             13 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     770
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___llmod
     ___lldiv (ARG)
       ___lmul (ARG)
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 05 02:35:06 2020

                      pc 0002                       l52 079B                       l54 07A6  
                     l55 07B5                       l56 07C4                       l48 06CA  
                     fsr 0004                      l181 0685                      l159 05C7  
                    l367 061D                      l801 058A                      l803 058E  
                    l821 0640                      l813 061E                      l805 05A5  
                    l901 07BF                      l831 066E                      l823 0644  
                    l815 0630                      l807 05AE                      l903 07C8  
                    l833 0677                      l825 064D                      l817 0633  
                    l841 05D2                      l809 05BF                      l905 07CE  
                    l827 065F                      l819 063C                      l835 067D  
                    l851 05F8                      l843 05D5                      l829 066D  
                    l853 0606                      l845 05DE                      l909 07D1  
                    l861 0686                      l855 060F                      l847 05E2  
                    l839 05C8                      l871 0690                      l863 0689  
                    l849 05E6                      l857 0615                      l881 069F  
                    l873 0691                      l865 068B                      l947 07D9  
                    l891 079F                      l883 06A9                      l875 0693  
                    l867 068E                      l893 07A1                      l885 06B1  
                    l877 0695                      l869 068F                      l799 0582  
                    l895 07AA                      l887 06B2                      l879 0699  
                    l897 07B0                      l889 06CE                      l899 07B9  
                    _RA2 002A                      _RA3 002B                      _RA4 002C  
                    _RA5 002D                      u200 058E                      u201 058D  
                    u211 0597                      u212 059E                      u213 05A5  
                    u310 067D                      u311 067C                      u320 05D2  
                    u240 05BF                      u305 066F                      u321 05D1  
                    u241 05BE                      u225 05A7                      u250 0630  
                    u251 062F                      u235 05AF                      u340 05E6  
                    u341 05E5                      u270 0644                      u350 05F8  
                    u271 0643                      u351 05F7                      u335 05D7  
                    u265 0635                      u290 065F                      u370 0615  
                    u291 065E                      u371 0614                      u355 05F4  
                    u380 06CE                      u285 0646                      u365 0607  
                    u381 06CD                      u295 065B                      u397 069D  
                    _SSD 0043               _SSD_status 0050                      fsr0 0004  
                    indf 0000                     _main 0686                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lldiv 0686  
        __end_of___llmod 061E                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088      ___lmul@multiplicand 0074                    pclath 000A  
                  status 0003                    wtemp0 007E            main@adc_value 003B  
        __initialization 07EA             __end_of_main 07EA                   ??_main 0037  
                 _ADCON0 001F                   _ADCON1 009F         ___llmod@dividend 0031  
                 _ADRESH 001E                   _ADRESL 009E                   ___lmul 0582  
              ??___lldiv 007D                ??___llmod 0035  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0561               __pbssBANK0 0051  
             __pmaintext 0686                  ?___lmul 0070           ___lmul@product 0079  
                _GO_DONE 00FA                  _Counter 004E          __size_of___lmul 0046  
                ___lldiv 061E                  ___llmod 05C8                  __ptext1 0582  
                __ptext2 05C8                  __ptext3 061E     end_of_initialization 07FC  
        ___lldiv@divisor 0020          ___lldiv@counter 002C           __end_of___lmul 05C8  
    start_initialization 07EA          ___llmod@divisor 002D          ___llmod@counter 0036  
               ??___lmul 0078               init_fetch0 056F              __pdataBANK0 0043  
              ___latbits 0002            __pcstackBANK0 0020                 ?___lldiv 0020  
               ?___llmod 002D               _ADCON0bits 001F        ___lmul@multiplier 0070  
       __size_of___lldiv 0068         __size_of___llmod 0056           main@LM35_value 003F  
          __size_of_main 0164             _SSD1_counter 0054             _SSD2_counter 0053  
           _SSD3_counter 0052             _SSD4_counter 0051                 init_ram0 0573  
       ___lldiv@dividend 0024         ___lldiv@quotient 0028  
