

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 05 02:20:06 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175  02D4                     __pidataBANK0:
   176                           
   177                           ;initializer for _SSD
   178  02D4  343F               	retlw	63
   179  02D5  3406               	retlw	6
   180  02D6  345B               	retlw	91
   181  02D7  344F               	retlw	79
   182  02D8  3466               	retlw	102
   183  02D9  346D               	retlw	109
   184  02DA  347D               	retlw	125
   185  02DB  3407               	retlw	7
   186  02DC  347F               	retlw	127
   187  02DD  346F               	retlw	111
   188                           
   189                           ;initializer for _Display_Rate
   190  02DE  3450               	retlw	80
   191  02DF  34C3               	retlw	195
   192                           
   193                           ;initializer for _Counter
   194  02E0  340F               	retlw	15
   195  02E1  3427               	retlw	39
   196                           
   197                           ;initializer for _SSD_status
   198  02E2  3401               	retlw	1
   199  000E                     _TMR1	set	14
   200  0006                     _PORTB	set	6
   201  001F                     _ADCON0bits	set	31
   202  001E                     _ADRESH	set	30
   203  001F                     _ADCON0	set	31
   204  0008                     _PORTD	set	8
   205  00FA                     _GO_DONE	set	250
   206  005F                     _GIE	set	95
   207  005E                     _PEIE	set	94
   208  0080                     _TMR1ON	set	128
   209  0030                     _RB0	set	48
   210  0085                     _T1CKPS1	set	133
   211  0084                     _T1CKPS0	set	132
   212  0081                     _TMR1CS	set	129
   213  002D                     _RA5	set	45
   214  002C                     _RA4	set	44
   215  002B                     _RA3	set	43
   216  002A                     _RA2	set	42
   217  0060                     _TMR1IF	set	96
   218  009E                     _ADRESL	set	158
   219  009F                     _ADCON1	set	159
   220  0085                     _TRISA	set	133
   221  0088                     _TRISD	set	136
   222  0460                     _TMR1IE	set	1120
   223                           
   224                           	psect	cinit
   225  000F                     start_initialization:	
   226                           ; #config settings
   227                           
   228  000F                     __initialization:
   229                           
   230                           ; Initialize objects allocated to BANK0
   231  000F  1383               	bcf	3,7	;select IRP bank0
   232  0010  302F               	movlw	low (__pdataBANK0+15)
   233  0011  00FD               	movwf	btemp+-1
   234  0012  3002               	movlw	high __pidataBANK0
   235  0013  00FE               	movwf	btemp
   236  0014  30D4               	movlw	low __pidataBANK0
   237  0015  00FF               	movwf	btemp+1
   238  0016  3020               	movlw	low __pdataBANK0
   239  0017  0084               	movwf	4
   240  0018  120A  118A  22C5  120A  118A  	fcall	init_ram0
   241                           
   242                           ; Clear objects allocated to BANK0
   243  001D  01BA               	clrf	__pbssBANK0& (0+127)
   244  001E  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   245  001F  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   246  0020  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   247  0021                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  0021                     __end_of__initialization:
   251  0021  0183               	clrf	3
   252  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssBANK0
   255  003A                     __pbssBANK0:
   256  003A                     _SSD4_counter:
   257  003A                     	ds	1
   258  003B                     _SSD3_counter:
   259  003B                     	ds	1
   260  003C                     _SSD2_counter:
   261  003C                     	ds	1
   262  003D                     _SSD1_counter:
   263  003D                     	ds	1
   264                           
   265                           	psect	dataBANK0
   266  0020                     __pdataBANK0:
   267  0020                     _SSD:
   268  0020                     	ds	10
   269  002A                     _Display_Rate:
   270  002A                     	ds	2
   271  002C                     _Counter:
   272  002C                     	ds	2
   273  002E                     _SSD_status:
   274  002E                     	ds	1
   275                           
   276                           	psect	inittext
   277  02C1                     init_fetch0:	
   278                           ;	Called with low address in FSR and high address in W
   279                           
   280  02C1  087E               	movf	btemp,w
   281  02C2  008A               	movwf	10
   282  02C3  087F               	movf	btemp+1,w
   283  02C4  0082               	movwf	2
   284  02C5                     init_ram0:	
   285                           ;Called with:
   286                           ;	high address of idata address in btemp 
   287                           ;	low address of idata address in btemp+1 
   288                           ;	low address of data in FSR
   289                           ;	high address + 1 of data in btemp-1
   290                           
   291  02C5  120A  118A  22C1  120A  118A  	fcall	init_fetch0
   292  02CA  0080               	movwf	0
   293  02CB  0A84               	incf	4,f
   294  02CC  0804               	movf	4,w
   295  02CD  067D               	xorwf	btemp+-1,w
   296  02CE  1903               	btfsc	3,2
   297  02CF  3400               	retlw	0
   298  02D0  0AFF               	incf	btemp+1,f
   299  02D1  1903               	btfsc	3,2
   300  02D2  0AFE               	incf	btemp,f
   301  02D3  2AC5               	goto	init_ram0
   302                           
   303                           	psect	cstackCOMMON
   304  0070                     __pcstackCOMMON:
   305  0070                     ?_ISR:
   306  0070                     ??_ISR:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 1 bytes @ 0x0
   314  0070                     	ds	4
   315  0074                     ?___lwdiv:
   316  0074                     ___lwdiv@divisor:	
   317                           ; 2 bytes @ 0x4
   318                           
   319                           
   320                           ; 2 bytes @ 0x4
   321  0074                     	ds	2
   322  0076                     ___lwdiv@dividend:
   323                           
   324                           ; 2 bytes @ 0x6
   325  0076                     	ds	2
   326  0078                     ??___lwdiv:
   327  0078                     ??___lwmod:	
   328                           ; 1 bytes @ 0x8
   329                           
   330  0078                     ___lwmod@counter:	
   331                           ; 1 bytes @ 0x8
   332                           
   333                           
   334                           ; 1 bytes @ 0x8
   335  0078                     	ds	1
   336                           
   337                           	psect	cstackBANK0
   338  002F                     __pcstackBANK0:
   339  002F                     ___lwdiv@quotient:
   340                           
   341                           ; 2 bytes @ 0x0
   342  002F                     	ds	2
   343  0031                     ___lwdiv@counter:
   344                           
   345                           ; 1 bytes @ 0x2
   346  0031                     	ds	1
   347  0032                     ?___lwmod:
   348  0032                     ___lwmod@divisor:	
   349                           ; 2 bytes @ 0x3
   350                           
   351                           
   352                           ; 2 bytes @ 0x3
   353  0032                     	ds	2
   354  0034                     ___lwmod@dividend:
   355                           
   356                           ; 2 bytes @ 0x5
   357  0034                     	ds	2
   358  0036                     ??_main:
   359                           
   360                           ; 1 bytes @ 0x7
   361  0036                     	ds	2
   362  0038                     main@adc_value:
   363                           
   364                           ; 2 bytes @ 0x9
   365  0038                     	ds	2
   366                           
   367                           	psect	maintext
   368  0025                     __pmaintext:	
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 44 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  adc_value       2    9[BANK0 ] volatile unsigned int 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       2       0       0       0
   390 ;;      Temps:          0       2       0       0       0
   391 ;;      Totals:         0       4       0       0       0
   392 ;;Total ram usage:        4 bytes
   393 ;; Hardware stack levels required when called:    2
   394 ;; This function calls:
   395 ;;		___lwdiv
   396 ;;		___lwmod
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  0025                     _main:
   405  0025                     l979:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   408                           
   409                           
   410                           ;main.c: 48:     TRISD = 0x00;
   411  0025  1683               	bsf	3,5	;RP0=1, select bank1
   412  0026  1303               	bcf	3,6	;RP1=0, select bank1
   413  0027  0188               	clrf	8	;volatile
   414  0028                     l981:
   415                           
   416                           ;main.c: 49:     TRISA = 0x01;
   417  0028  3001               	movlw	1
   418  0029  0085               	movwf	5	;volatile
   419  002A                     l983:
   420                           
   421                           ;main.c: 50:     RA2=0;
   422  002A  1283               	bcf	3,5	;RP0=0, select bank0
   423  002B  1303               	bcf	3,6	;RP1=0, select bank0
   424  002C  1105               	bcf	5,2	;volatile
   425  002D                     l985:
   426                           
   427                           ;main.c: 51:     RA3=0;
   428  002D  1185               	bcf	5,3	;volatile
   429  002E                     l987:
   430                           
   431                           ;main.c: 52:     RA4=0;
   432  002E  1205               	bcf	5,4	;volatile
   433  002F                     l989:
   434                           
   435                           ;main.c: 53:     RA5=0;
   436  002F  1285               	bcf	5,5	;volatile
   437  0030                     l991:
   438                           
   439                           ;main.c: 54:     PORTD = SSD[0];
   440  0030  0820               	movf	_SSD,w
   441  0031  0088               	movwf	8	;volatile
   442  0032                     l993:
   443                           
   444                           ;main.c: 58:     TMR1 = 65535-Display_Rate;
   445  0032  082B               	movf	_Display_Rate+1,w
   446  0033  00B7               	movwf	??_main+1
   447  0034  082A               	movf	_Display_Rate,w
   448  0035  00B6               	movwf	??_main
   449  0036  09B6               	comf	??_main,f
   450  0037  09B7               	comf	??_main+1,f
   451  0038  0836               	movf	??_main,w
   452  0039  008E               	movwf	14	;volatile
   453  003A  0837               	movf	??_main+1,w
   454  003B  008F               	movwf	15	;volatile
   455  003C                     l995:
   456                           
   457                           ;main.c: 60:     TMR1CS = 0;
   458  003C  1090               	bcf	16,1	;volatile
   459  003D                     l997:
   460                           
   461                           ;main.c: 62:     T1CKPS0 = 1;
   462  003D  1610               	bsf	16,4	;volatile
   463  003E                     l999:
   464                           
   465                           ;main.c: 63:     T1CKPS1 = 1;
   466  003E  1690               	bsf	16,5	;volatile
   467  003F                     l1001:
   468                           
   469                           ;main.c: 65:     RB0 = 1;
   470  003F  1406               	bsf	6,0	;volatile
   471  0040                     l1003:
   472                           
   473                           ;main.c: 67:     TMR1ON = 1;
   474  0040  1410               	bsf	16,0	;volatile
   475  0041                     l1005:
   476                           
   477                           ;main.c: 69:     TMR1IE = 1;
   478  0041  1683               	bsf	3,5	;RP0=1, select bank1
   479  0042  1303               	bcf	3,6	;RP1=0, select bank1
   480  0043  140C               	bsf	12,0	;volatile
   481  0044                     l1007:
   482                           
   483                           ;main.c: 70:     TMR1IF = 0;
   484  0044  1283               	bcf	3,5	;RP0=0, select bank0
   485  0045  1303               	bcf	3,6	;RP1=0, select bank0
   486  0046  100C               	bcf	12,0	;volatile
   487  0047                     l1009:
   488                           
   489                           ;main.c: 71:     PEIE = 1;
   490  0047  170B               	bsf	11,6	;volatile
   491  0048                     l1011:
   492                           
   493                           ;main.c: 72:     GIE = 1;
   494  0048  178B               	bsf	11,7	;volatile
   495  0049                     l1013:
   496                           
   497                           ;main.c: 76:     ADCON0 = 0x41;
   498  0049  3041               	movlw	65
   499  004A  009F               	movwf	31	;volatile
   500  004B                     l1015:
   501                           
   502                           ;main.c: 77:     ADCON1 = 0x8E;
   503  004B  308E               	movlw	142
   504  004C  1683               	bsf	3,5	;RP0=1, select bank1
   505  004D  1303               	bcf	3,6	;RP1=0, select bank1
   506  004E  009F               	movwf	31	;volatile
   507  004F                     l1017:
   508                           
   509                           ;main.c: 78:    _delay((unsigned long)((30)*(4000000UL/4000000.0)));
   510  004F  3009               	movlw	9
   511  0050  1283               	bcf	3,5	;RP0=0, select bank0
   512  0051  1303               	bcf	3,6	;RP1=0, select bank0
   513  0052  00B6               	movwf	??_main
   514  0053                     u657:
   515  0053  0BB6               	decfsz	??_main,f
   516  0054  2853               	goto	u657
   517                           
   518                           ;main.c: 80:     volatile uint16_t adc_value=0;
   519  0055  1283               	bcf	3,5	;RP0=0, select bank0
   520  0056  1303               	bcf	3,6	;RP1=0, select bank0
   521  0057  01B8               	clrf	main@adc_value	;volatile
   522  0058  01B9               	clrf	main@adc_value+1	;volatile
   523  0059                     l1019:
   524                           
   525                           ;main.c: 85:         GO_DONE = 1;
   526  0059  151F               	bsf	31,2	;volatile
   527  005A                     l1021:
   528                           
   529                           ;main.c: 87:         adc_value = ((ADRESH << 8) | ADRESL);
   530  005A  081E               	movf	30,w	;volatile
   531  005B  00B9               	movwf	main@adc_value+1	;volatile
   532  005C  1683               	bsf	3,5	;RP0=1, select bank1
   533  005D  1303               	bcf	3,6	;RP1=0, select bank1
   534  005E  081E               	movf	30,w	;volatile
   535  005F  1283               	bcf	3,5	;RP0=0, select bank0
   536  0060  1303               	bcf	3,6	;RP1=0, select bank0
   537  0061  00B8               	movwf	main@adc_value	;volatile
   538  0062                     l78:	
   539                           ;main.c: 90:         {;main.c: 92:         }
   540                           
   541                           
   542                           ;main.c: 89:         while(ADCON0bits.GO_DONE)
   543  0062  191F               	btfsc	31,2	;volatile
   544  0063  2865               	goto	u471
   545  0064  2866               	goto	u470
   546  0065                     u471:
   547  0065  2862               	goto	l78
   548  0066                     u470:
   549  0066                     l1023:
   550                           
   551                           ;main.c: 93:         PORTB = (adc_value>>2);
   552  0066  0839               	movf	main@adc_value+1,w	;volatile
   553  0067  00B7               	movwf	??_main+1
   554  0068  0838               	movf	main@adc_value,w	;volatile
   555  0069  00B6               	movwf	??_main
   556  006A  1003               	clrc
   557  006B  0CB7               	rrf	??_main+1,f
   558  006C  0CB6               	rrf	??_main,f
   559  006D  1003               	clrc
   560  006E  0CB7               	rrf	??_main+1,f
   561  006F  0CB6               	rrf	??_main,f
   562  0070  0836               	movf	??_main,w
   563  0071  0086               	movwf	6	;volatile
   564  0072                     l1025:
   565                           
   566                           ;main.c: 96:          if (adc_value <= 100)
   567  0072  3000               	movlw	0
   568  0073  0239               	subwf	main@adc_value+1,w	;volatile
   569  0074  3065               	movlw	101
   570  0075  1903               	skipnz
   571  0076  0238               	subwf	main@adc_value,w	;volatile
   572  0077  1803               	skipnc
   573  0078  287A               	goto	u481
   574  0079  287B               	goto	u480
   575  007A                     u481:
   576  007A  2880               	goto	l1029
   577  007B                     u480:
   578  007B                     l1027:
   579                           
   580                           ;main.c: 97:                Display_Rate = 5000;
   581  007B  3088               	movlw	136
   582  007C  00AA               	movwf	_Display_Rate
   583  007D  3013               	movlw	19
   584  007E  00AB               	movwf	_Display_Rate+1
   585  007F  293C               	goto	l1079
   586  0080                     l1029:
   587  0080  3000               	movlw	0
   588  0081  0239               	subwf	main@adc_value+1,w	;volatile
   589  0082  3065               	movlw	101
   590  0083  1903               	skipnz
   591  0084  0238               	subwf	main@adc_value,w	;volatile
   592  0085  1C03               	skipc
   593  0086  2888               	goto	u491
   594  0087  2889               	goto	u490
   595  0088                     u491:
   596  0088  2897               	goto	l1035
   597  0089                     u490:
   598  0089                     l1031:
   599  0089  3000               	movlw	0
   600  008A  0239               	subwf	main@adc_value+1,w	;volatile
   601  008B  30C9               	movlw	201
   602  008C  1903               	skipnz
   603  008D  0238               	subwf	main@adc_value,w	;volatile
   604  008E  1803               	skipnc
   605  008F  2891               	goto	u501
   606  0090  2892               	goto	u500
   607  0091                     u501:
   608  0091  2897               	goto	l1035
   609  0092                     u500:
   610  0092                     l1033:
   611                           
   612                           ;main.c: 99:                Display_Rate = 10000;
   613  0092  3010               	movlw	16
   614  0093  00AA               	movwf	_Display_Rate
   615  0094  3027               	movlw	39
   616  0095  00AB               	movwf	_Display_Rate+1
   617  0096  293C               	goto	l1079
   618  0097                     l1035:
   619  0097  3000               	movlw	0
   620  0098  0239               	subwf	main@adc_value+1,w	;volatile
   621  0099  30C9               	movlw	201
   622  009A  1903               	skipnz
   623  009B  0238               	subwf	main@adc_value,w	;volatile
   624  009C  1C03               	skipc
   625  009D  289F               	goto	u511
   626  009E  28A0               	goto	u510
   627  009F                     u511:
   628  009F  28AE               	goto	l1041
   629  00A0                     u510:
   630  00A0                     l1037:
   631  00A0  3001               	movlw	1
   632  00A1  0239               	subwf	main@adc_value+1,w	;volatile
   633  00A2  302D               	movlw	45
   634  00A3  1903               	skipnz
   635  00A4  0238               	subwf	main@adc_value,w	;volatile
   636  00A5  1803               	skipnc
   637  00A6  28A8               	goto	u521
   638  00A7  28A9               	goto	u520
   639  00A8                     u521:
   640  00A8  28AE               	goto	l1041
   641  00A9                     u520:
   642  00A9                     l1039:
   643                           
   644                           ;main.c: 101:                Display_Rate = 15000;
   645  00A9  3098               	movlw	152
   646  00AA  00AA               	movwf	_Display_Rate
   647  00AB  303A               	movlw	58
   648  00AC  00AB               	movwf	_Display_Rate+1
   649  00AD  293C               	goto	l1079
   650  00AE                     l1041:
   651  00AE  3001               	movlw	1
   652  00AF  0239               	subwf	main@adc_value+1,w	;volatile
   653  00B0  302D               	movlw	45
   654  00B1  1903               	skipnz
   655  00B2  0238               	subwf	main@adc_value,w	;volatile
   656  00B3  1C03               	skipc
   657  00B4  28B6               	goto	u531
   658  00B5  28B7               	goto	u530
   659  00B6                     u531:
   660  00B6  28C5               	goto	l1047
   661  00B7                     u530:
   662  00B7                     l1043:
   663  00B7  3001               	movlw	1
   664  00B8  0239               	subwf	main@adc_value+1,w	;volatile
   665  00B9  3091               	movlw	145
   666  00BA  1903               	skipnz
   667  00BB  0238               	subwf	main@adc_value,w	;volatile
   668  00BC  1803               	skipnc
   669  00BD  28BF               	goto	u541
   670  00BE  28C0               	goto	u540
   671  00BF                     u541:
   672  00BF  28C5               	goto	l1047
   673  00C0                     u540:
   674  00C0                     l1045:
   675                           
   676                           ;main.c: 103:                Display_Rate = 20000;
   677  00C0  3020               	movlw	32
   678  00C1  00AA               	movwf	_Display_Rate
   679  00C2  304E               	movlw	78
   680  00C3  00AB               	movwf	_Display_Rate+1
   681  00C4  293C               	goto	l1079
   682  00C5                     l1047:
   683  00C5  3001               	movlw	1
   684  00C6  0239               	subwf	main@adc_value+1,w	;volatile
   685  00C7  3091               	movlw	145
   686  00C8  1903               	skipnz
   687  00C9  0238               	subwf	main@adc_value,w	;volatile
   688  00CA  1C03               	skipc
   689  00CB  28CD               	goto	u551
   690  00CC  28CE               	goto	u550
   691  00CD                     u551:
   692  00CD  28DC               	goto	l1053
   693  00CE                     u550:
   694  00CE                     l1049:
   695  00CE  3001               	movlw	1
   696  00CF  0239               	subwf	main@adc_value+1,w	;volatile
   697  00D0  30F5               	movlw	245
   698  00D1  1903               	skipnz
   699  00D2  0238               	subwf	main@adc_value,w	;volatile
   700  00D3  1803               	skipnc
   701  00D4  28D6               	goto	u561
   702  00D5  28D7               	goto	u560
   703  00D6                     u561:
   704  00D6  28DC               	goto	l1053
   705  00D7                     u560:
   706  00D7                     l1051:
   707                           
   708                           ;main.c: 105:                Display_Rate = 25000;
   709  00D7  30A8               	movlw	168
   710  00D8  00AA               	movwf	_Display_Rate
   711  00D9  3061               	movlw	97
   712  00DA  00AB               	movwf	_Display_Rate+1
   713  00DB  293C               	goto	l1079
   714  00DC                     l1053:
   715  00DC  3001               	movlw	1
   716  00DD  0239               	subwf	main@adc_value+1,w	;volatile
   717  00DE  30F5               	movlw	245
   718  00DF  1903               	skipnz
   719  00E0  0238               	subwf	main@adc_value,w	;volatile
   720  00E1  1C03               	skipc
   721  00E2  28E4               	goto	u571
   722  00E3  28E5               	goto	u570
   723  00E4                     u571:
   724  00E4  28F3               	goto	l1059
   725  00E5                     u570:
   726  00E5                     l1055:
   727  00E5  3002               	movlw	2
   728  00E6  0239               	subwf	main@adc_value+1,w	;volatile
   729  00E7  3059               	movlw	89
   730  00E8  1903               	skipnz
   731  00E9  0238               	subwf	main@adc_value,w	;volatile
   732  00EA  1803               	skipnc
   733  00EB  28ED               	goto	u581
   734  00EC  28EE               	goto	u580
   735  00ED                     u581:
   736  00ED  28F3               	goto	l1059
   737  00EE                     u580:
   738  00EE                     l1057:
   739                           
   740                           ;main.c: 107:                Display_Rate = 30000;
   741  00EE  3030               	movlw	48
   742  00EF  00AA               	movwf	_Display_Rate
   743  00F0  3075               	movlw	117
   744  00F1  00AB               	movwf	_Display_Rate+1
   745  00F2  293C               	goto	l1079
   746  00F3                     l1059:
   747  00F3  3002               	movlw	2
   748  00F4  0239               	subwf	main@adc_value+1,w	;volatile
   749  00F5  3059               	movlw	89
   750  00F6  1903               	skipnz
   751  00F7  0238               	subwf	main@adc_value,w	;volatile
   752  00F8  1C03               	skipc
   753  00F9  28FB               	goto	u591
   754  00FA  28FC               	goto	u590
   755  00FB                     u591:
   756  00FB  290A               	goto	l1065
   757  00FC                     u590:
   758  00FC                     l1061:
   759  00FC  3002               	movlw	2
   760  00FD  0239               	subwf	main@adc_value+1,w	;volatile
   761  00FE  30BD               	movlw	189
   762  00FF  1903               	skipnz
   763  0100  0238               	subwf	main@adc_value,w	;volatile
   764  0101  1803               	skipnc
   765  0102  2904               	goto	u601
   766  0103  2905               	goto	u600
   767  0104                     u601:
   768  0104  290A               	goto	l1065
   769  0105                     u600:
   770  0105                     l1063:
   771                           
   772                           ;main.c: 109:                Display_Rate = 35000;
   773  0105  30B8               	movlw	184
   774  0106  00AA               	movwf	_Display_Rate
   775  0107  3088               	movlw	136
   776  0108  00AB               	movwf	_Display_Rate+1
   777  0109  293C               	goto	l1079
   778  010A                     l1065:
   779  010A  3002               	movlw	2
   780  010B  0239               	subwf	main@adc_value+1,w	;volatile
   781  010C  30BD               	movlw	189
   782  010D  1903               	skipnz
   783  010E  0238               	subwf	main@adc_value,w	;volatile
   784  010F  1C03               	skipc
   785  0110  2912               	goto	u611
   786  0111  2913               	goto	u610
   787  0112                     u611:
   788  0112  2921               	goto	l1071
   789  0113                     u610:
   790  0113                     l1067:
   791  0113  3003               	movlw	3
   792  0114  0239               	subwf	main@adc_value+1,w	;volatile
   793  0115  3021               	movlw	33
   794  0116  1903               	skipnz
   795  0117  0238               	subwf	main@adc_value,w	;volatile
   796  0118  1803               	skipnc
   797  0119  291B               	goto	u621
   798  011A  291C               	goto	u620
   799  011B                     u621:
   800  011B  2921               	goto	l1071
   801  011C                     u620:
   802  011C                     l1069:
   803                           
   804                           ;main.c: 111:                Display_Rate = 40000;
   805  011C  3040               	movlw	64
   806  011D  00AA               	movwf	_Display_Rate
   807  011E  309C               	movlw	156
   808  011F  00AB               	movwf	_Display_Rate+1
   809  0120  293C               	goto	l1079
   810  0121                     l1071:
   811  0121  3003               	movlw	3
   812  0122  0239               	subwf	main@adc_value+1,w	;volatile
   813  0123  3021               	movlw	33
   814  0124  1903               	skipnz
   815  0125  0238               	subwf	main@adc_value,w	;volatile
   816  0126  1C03               	skipc
   817  0127  2929               	goto	u631
   818  0128  292A               	goto	u630
   819  0129                     u631:
   820  0129  2938               	goto	l1077
   821  012A                     u630:
   822  012A                     l1073:
   823  012A  3003               	movlw	3
   824  012B  0239               	subwf	main@adc_value+1,w	;volatile
   825  012C  3085               	movlw	133
   826  012D  1903               	skipnz
   827  012E  0238               	subwf	main@adc_value,w	;volatile
   828  012F  1803               	skipnc
   829  0130  2932               	goto	u641
   830  0131  2933               	goto	u640
   831  0132                     u641:
   832  0132  2938               	goto	l1077
   833  0133                     u640:
   834  0133                     l1075:
   835                           
   836                           ;main.c: 113:                Display_Rate = 45000;
   837  0133  30C8               	movlw	200
   838  0134  00AA               	movwf	_Display_Rate
   839  0135  30AF               	movlw	175
   840  0136  00AB               	movwf	_Display_Rate+1
   841  0137  293C               	goto	l1079
   842  0138                     l1077:
   843                           
   844                           ;main.c: 115:                Display_Rate = 50000;
   845  0138  3050               	movlw	80
   846  0139  00AA               	movwf	_Display_Rate
   847  013A  30C3               	movlw	195
   848  013B  00AB               	movwf	_Display_Rate+1
   849  013C                     l1079:
   850                           
   851                           ;main.c: 118:         SSD1_counter = (Counter % 10);
   852  013C  300A               	movlw	10
   853  013D  00B2               	movwf	___lwmod@divisor
   854  013E  3000               	movlw	0
   855  013F  00B3               	movwf	___lwmod@divisor+1
   856  0140  082D               	movf	_Counter+1,w
   857  0141  00B5               	movwf	___lwmod@dividend+1
   858  0142  082C               	movf	_Counter,w
   859  0143  00B4               	movwf	___lwmod@dividend
   860  0144  120A  118A  2267  120A  118A  	fcall	___lwmod
   861  0149  1283               	bcf	3,5	;RP0=0, select bank0
   862  014A  1303               	bcf	3,6	;RP1=0, select bank0
   863  014B  0832               	movf	?___lwmod,w
   864  014C  00FF               	movwf	btemp+1
   865  014D  087F               	movf	btemp+1,w
   866  014E  00BD               	movwf	_SSD1_counter
   867  014F                     l1081:
   868                           
   869                           ;main.c: 119:         SSD2_counter = ((Counter/10) % 10);
   870  014F  300A               	movlw	10
   871  0150  00B2               	movwf	___lwmod@divisor
   872  0151  3000               	movlw	0
   873  0152  00B3               	movwf	___lwmod@divisor+1
   874  0153  300A               	movlw	10
   875  0154  00F4               	movwf	___lwdiv@divisor
   876  0155  3000               	movlw	0
   877  0156  00F5               	movwf	___lwdiv@divisor+1
   878  0157  082D               	movf	_Counter+1,w
   879  0158  00F7               	movwf	___lwdiv@dividend+1
   880  0159  082C               	movf	_Counter,w
   881  015A  00F6               	movwf	___lwdiv@dividend
   882  015B  120A  118A  2221  120A  118A  	fcall	___lwdiv
   883  0160  0875               	movf	?___lwdiv+1,w
   884  0161  1283               	bcf	3,5	;RP0=0, select bank0
   885  0162  1303               	bcf	3,6	;RP1=0, select bank0
   886  0163  00B5               	movwf	___lwmod@dividend+1
   887  0164  0874               	movf	?___lwdiv,w
   888  0165  00B4               	movwf	___lwmod@dividend
   889  0166  120A  118A  2267  120A  118A  	fcall	___lwmod
   890  016B  1283               	bcf	3,5	;RP0=0, select bank0
   891  016C  1303               	bcf	3,6	;RP1=0, select bank0
   892  016D  0832               	movf	?___lwmod,w
   893  016E  00FF               	movwf	btemp+1
   894  016F  087F               	movf	btemp+1,w
   895  0170  00BC               	movwf	_SSD2_counter
   896  0171                     l1083:
   897                           
   898                           ;main.c: 120:         SSD3_counter = ((Counter/100) % 10);
   899  0171  300A               	movlw	10
   900  0172  00B2               	movwf	___lwmod@divisor
   901  0173  3000               	movlw	0
   902  0174  00B3               	movwf	___lwmod@divisor+1
   903  0175  3064               	movlw	100
   904  0176  00F4               	movwf	___lwdiv@divisor
   905  0177  3000               	movlw	0
   906  0178  00F5               	movwf	___lwdiv@divisor+1
   907  0179  082D               	movf	_Counter+1,w
   908  017A  00F7               	movwf	___lwdiv@dividend+1
   909  017B  082C               	movf	_Counter,w
   910  017C  00F6               	movwf	___lwdiv@dividend
   911  017D  120A  118A  2221  120A  118A  	fcall	___lwdiv
   912  0182  0875               	movf	?___lwdiv+1,w
   913  0183  1283               	bcf	3,5	;RP0=0, select bank0
   914  0184  1303               	bcf	3,6	;RP1=0, select bank0
   915  0185  00B5               	movwf	___lwmod@dividend+1
   916  0186  0874               	movf	?___lwdiv,w
   917  0187  00B4               	movwf	___lwmod@dividend
   918  0188  120A  118A  2267  120A  118A  	fcall	___lwmod
   919  018D  1283               	bcf	3,5	;RP0=0, select bank0
   920  018E  1303               	bcf	3,6	;RP1=0, select bank0
   921  018F  0832               	movf	?___lwmod,w
   922  0190  00FF               	movwf	btemp+1
   923  0191  087F               	movf	btemp+1,w
   924  0192  00BB               	movwf	_SSD3_counter
   925  0193                     l1085:
   926                           
   927                           ;main.c: 121:         SSD4_counter = ((Counter/1000) % 10);
   928  0193  300A               	movlw	10
   929  0194  00B2               	movwf	___lwmod@divisor
   930  0195  3000               	movlw	0
   931  0196  00B3               	movwf	___lwmod@divisor+1
   932  0197  30E8               	movlw	232
   933  0198  00F4               	movwf	___lwdiv@divisor
   934  0199  3003               	movlw	3
   935  019A  00F5               	movwf	___lwdiv@divisor+1
   936  019B  082D               	movf	_Counter+1,w
   937  019C  00F7               	movwf	___lwdiv@dividend+1
   938  019D  082C               	movf	_Counter,w
   939  019E  00F6               	movwf	___lwdiv@dividend
   940  019F  120A  118A  2221  120A  118A  	fcall	___lwdiv
   941  01A4  0875               	movf	?___lwdiv+1,w
   942  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   943  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   944  01A7  00B5               	movwf	___lwmod@dividend+1
   945  01A8  0874               	movf	?___lwdiv,w
   946  01A9  00B4               	movwf	___lwmod@dividend
   947  01AA  120A  118A  2267  120A  118A  	fcall	___lwmod
   948  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   949  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   950  01B1  0832               	movf	?___lwmod,w
   951  01B2  00FF               	movwf	btemp+1
   952  01B3  087F               	movf	btemp+1,w
   953  01B4  00BA               	movwf	_SSD4_counter
   954                           
   955                           ;main.c: 123:         switch (SSD_status) {
   956  01B5  2A08               	goto	l1113
   957  01B6                     l100:	
   958                           ;main.c: 124:             case 1:
   959                           
   960                           
   961                           ;main.c: 125:                 RA2 = 0;
   962  01B6  1105               	bcf	5,2	;volatile
   963                           
   964                           ;main.c: 126:                 RA3 = 0;
   965  01B7  1185               	bcf	5,3	;volatile
   966                           
   967                           ;main.c: 127:                 RA4 = 0;
   968  01B8  1205               	bcf	5,4	;volatile
   969                           
   970                           ;main.c: 128:                 RA5 = 1;
   971  01B9  1685               	bsf	5,5	;volatile
   972  01BA                     l1087:
   973                           
   974                           ;main.c: 129:                 PORTD &= ~0x7F;
   975  01BA  3080               	movlw	128
   976  01BB  00FF               	movwf	btemp+1
   977  01BC  087F               	movf	btemp+1,w
   978  01BD  0588               	andwf	8,f	;volatile
   979  01BE                     l1089:
   980                           
   981                           ;main.c: 130:                 PORTD |= SSD[SSD1_counter];
   982  01BE  083D               	movf	_SSD1_counter,w
   983  01BF  3E20               	addlw	(low (_SSD| 0))& (0+255)
   984  01C0  0084               	movwf	4
   985  01C1  1383               	bcf	3,7	;select IRP bank0
   986  01C2  0800               	movf	0,w
   987  01C3  00FF               	movwf	btemp+1
   988  01C4  087F               	movf	btemp+1,w
   989  01C5  0488               	iorwf	8,f	;volatile
   990  01C6                     l1091:
   991                           
   992                           ;main.c: 131:                 SSD_status = 2;
   993  01C6  3002               	movlw	2
   994  01C7  00FF               	movwf	btemp+1
   995  01C8  087F               	movf	btemp+1,w
   996  01C9  00AE               	movwf	_SSD_status
   997                           
   998                           ;main.c: 133:                 break;
   999  01CA  2859               	goto	l1019
  1000  01CB                     l102:	
  1001                           ;main.c: 135:             case 2:
  1002                           
  1003                           
  1004                           ;main.c: 136:                 RA2 = 0;
  1005  01CB  1105               	bcf	5,2	;volatile
  1006                           
  1007                           ;main.c: 137:                 RA3 = 0;
  1008  01CC  1185               	bcf	5,3	;volatile
  1009                           
  1010                           ;main.c: 138:                 RA4 = 1;
  1011  01CD  1605               	bsf	5,4	;volatile
  1012                           
  1013                           ;main.c: 139:                 RA5 = 0;
  1014  01CE  1285               	bcf	5,5	;volatile
  1015  01CF                     l1093:
  1016                           
  1017                           ;main.c: 140:                 PORTD &= ~0x7F;
  1018  01CF  3080               	movlw	128
  1019  01D0  00FF               	movwf	btemp+1
  1020  01D1  087F               	movf	btemp+1,w
  1021  01D2  0588               	andwf	8,f	;volatile
  1022  01D3                     l1095:
  1023                           
  1024                           ;main.c: 141:                 PORTD |= SSD[SSD2_counter];
  1025  01D3  083C               	movf	_SSD2_counter,w
  1026  01D4  3E20               	addlw	(low (_SSD| 0))& (0+255)
  1027  01D5  0084               	movwf	4
  1028  01D6  1383               	bcf	3,7	;select IRP bank0
  1029  01D7  0800               	movf	0,w
  1030  01D8  00FF               	movwf	btemp+1
  1031  01D9  087F               	movf	btemp+1,w
  1032  01DA  0488               	iorwf	8,f	;volatile
  1033  01DB                     l1097:
  1034                           
  1035                           ;main.c: 142:                 SSD_status = 3;
  1036  01DB  3003               	movlw	3
  1037  01DC  00FF               	movwf	btemp+1
  1038  01DD  087F               	movf	btemp+1,w
  1039  01DE  00AE               	movwf	_SSD_status
  1040                           
  1041                           ;main.c: 144:                 break;
  1042  01DF  2859               	goto	l1019
  1043  01E0                     l103:	
  1044                           ;main.c: 146:             case 3:
  1045                           
  1046                           
  1047                           ;main.c: 147:                 RA2 = 0;
  1048  01E0  1105               	bcf	5,2	;volatile
  1049                           
  1050                           ;main.c: 148:                 RA3 = 1;
  1051  01E1  1585               	bsf	5,3	;volatile
  1052                           
  1053                           ;main.c: 149:                 RA4 = 0;
  1054  01E2  1205               	bcf	5,4	;volatile
  1055                           
  1056                           ;main.c: 150:                 RA5 = 0;
  1057  01E3  1285               	bcf	5,5	;volatile
  1058  01E4                     l1099:
  1059                           
  1060                           ;main.c: 151:                 PORTD &= ~0x7F;
  1061  01E4  3080               	movlw	128
  1062  01E5  00FF               	movwf	btemp+1
  1063  01E6  087F               	movf	btemp+1,w
  1064  01E7  0588               	andwf	8,f	;volatile
  1065  01E8                     l1101:
  1066                           
  1067                           ;main.c: 152:                 PORTD |= SSD[SSD3_counter];
  1068  01E8  083B               	movf	_SSD3_counter,w
  1069  01E9  3E20               	addlw	(low (_SSD| 0))& (0+255)
  1070  01EA  0084               	movwf	4
  1071  01EB  1383               	bcf	3,7	;select IRP bank0
  1072  01EC  0800               	movf	0,w
  1073  01ED  00FF               	movwf	btemp+1
  1074  01EE  087F               	movf	btemp+1,w
  1075  01EF  0488               	iorwf	8,f	;volatile
  1076  01F0                     l1103:
  1077                           
  1078                           ;main.c: 155:                 SSD_status = 4;
  1079  01F0  3004               	movlw	4
  1080  01F1  00FF               	movwf	btemp+1
  1081  01F2  087F               	movf	btemp+1,w
  1082  01F3  00AE               	movwf	_SSD_status
  1083                           
  1084                           ;main.c: 156:                 break;
  1085  01F4  2859               	goto	l1019
  1086  01F5                     l104:	
  1087                           ;main.c: 158:             case 4:
  1088                           
  1089                           
  1090                           ;main.c: 159:                 RA2 = 1;
  1091  01F5  1505               	bsf	5,2	;volatile
  1092                           
  1093                           ;main.c: 160:                 RA3 = 0;
  1094  01F6  1185               	bcf	5,3	;volatile
  1095                           
  1096                           ;main.c: 161:                 RA4 = 0;
  1097  01F7  1205               	bcf	5,4	;volatile
  1098                           
  1099                           ;main.c: 162:                 RA5 = 0;
  1100  01F8  1285               	bcf	5,5	;volatile
  1101  01F9                     l1105:
  1102                           
  1103                           ;main.c: 163:                 PORTD &= ~0x7F;
  1104  01F9  3080               	movlw	128
  1105  01FA  00FF               	movwf	btemp+1
  1106  01FB  087F               	movf	btemp+1,w
  1107  01FC  0588               	andwf	8,f	;volatile
  1108  01FD                     l1107:
  1109                           
  1110                           ;main.c: 164:                 PORTD |= SSD[SSD4_counter];
  1111  01FD  083A               	movf	_SSD4_counter,w
  1112  01FE  3E20               	addlw	(low (_SSD| 0))& (0+255)
  1113  01FF  0084               	movwf	4
  1114  0200  1383               	bcf	3,7	;select IRP bank0
  1115  0201  0800               	movf	0,w
  1116  0202  00FF               	movwf	btemp+1
  1117  0203  087F               	movf	btemp+1,w
  1118  0204  0488               	iorwf	8,f	;volatile
  1119  0205                     l1109:
  1120                           
  1121                           ;main.c: 165:                 SSD_status = 1;
  1122  0205  01AE               	clrf	_SSD_status
  1123  0206  0AAE               	incf	_SSD_status,f
  1124                           
  1125                           ;main.c: 167:                 break;
  1126  0207  2859               	goto	l1019
  1127  0208                     l1113:
  1128  0208  082E               	movf	_SSD_status,w
  1129  0209  00B6               	movwf	??_main
  1130  020A  01B7               	clrf	??_main+1
  1131                           
  1132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1133                           ; Switch size 1, requested type "simple"
  1134                           ; Number of cases is 1, Range of values is 0 to 0
  1135                           ; switch strategies available:
  1136                           ; Name         Instructions Cycles
  1137                           ; simple_byte            4     3 (average)
  1138                           ; direct_byte           11     8 (fixed)
  1139                           ; jumptable            260     6 (fixed)
  1140                           ;	Chosen strategy is simple_byte
  1141  020B  0837               	movf	??_main+1,w
  1142  020C  3A00               	xorlw	0	; case 0
  1143  020D  1903               	skipnz
  1144  020E  2A10               	goto	l1151
  1145  020F  2859               	goto	l1019
  1146  0210                     l1151:
  1147                           
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 4, Range of values is 1 to 4
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte           13     7 (average)
  1153                           ; direct_byte           23    11 (fixed)
  1154                           ; jumptable            263     9 (fixed)
  1155                           ;	Chosen strategy is simple_byte
  1156  0210  0836               	movf	??_main,w
  1157  0211  3A01               	xorlw	1	; case 1
  1158  0212  1903               	skipnz
  1159  0213  29B6               	goto	l100
  1160  0214  3A03               	xorlw	3	; case 2
  1161  0215  1903               	skipnz
  1162  0216  29CB               	goto	l102
  1163  0217  3A01               	xorlw	1	; case 3
  1164  0218  1903               	skipnz
  1165  0219  29E0               	goto	l103
  1166  021A  3A07               	xorlw	7	; case 4
  1167  021B  1903               	skipnz
  1168  021C  29F5               	goto	l104
  1169  021D  2859               	goto	l1019
  1170  021E  120A  118A  280C   	ljmp	start
  1171  0221                     __end_of_main:
  1172                           
  1173                           	psect	text1
  1174  0267                     __ptext1:	
  1175 ;; *************** function ___lwmod *****************
  1176 ;; Defined at:
  1177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  divisor         2    3[BANK0 ] unsigned int 
  1180 ;;  dividend        2    5[BANK0 ] unsigned int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  counter         1    8[COMMON] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2    3[BANK0 ] unsigned int 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, btemp+1
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       4       0       0       0
  1193 ;;      Locals:         1       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0
  1195 ;;      Totals:         1       4       0       0       0
  1196 ;;Total ram usage:        5 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function ___lwmod
  1208  0267                     ___lwmod:
  1209  0267                     l951:	
  1210                           ;incstack = 0
  1211                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1212                           
  1213  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0269  0832               	movf	___lwmod@divisor,w
  1216  026A  0433               	iorwf	___lwmod@divisor+1,w
  1217  026B  1903               	btfsc	3,2
  1218  026C  2A6E               	goto	u401
  1219  026D  2A6F               	goto	u400
  1220  026E                     u401:
  1221  026E  2A9E               	goto	l969
  1222  026F                     u400:
  1223  026F                     l953:
  1224  026F  01F8               	clrf	___lwmod@counter
  1225  0270  0AF8               	incf	___lwmod@counter,f
  1226  0271  2A7D               	goto	l959
  1227  0272                     l955:
  1228  0272  3001               	movlw	1
  1229  0273                     u415:
  1230  0273  1003               	clrc
  1231  0274  0DB2               	rlf	___lwmod@divisor,f
  1232  0275  0DB3               	rlf	___lwmod@divisor+1,f
  1233  0276  3EFF               	addlw	-1
  1234  0277  1D03               	skipz
  1235  0278  2A73               	goto	u415
  1236  0279                     l957:
  1237  0279  3001               	movlw	1
  1238  027A  00FF               	movwf	btemp+1
  1239  027B  087F               	movf	btemp+1,w
  1240  027C  07F8               	addwf	___lwmod@counter,f
  1241  027D                     l959:
  1242  027D  1FB3               	btfss	___lwmod@divisor+1,7
  1243  027E  2A80               	goto	u421
  1244  027F  2A81               	goto	u420
  1245  0280                     u421:
  1246  0280  2A72               	goto	l955
  1247  0281                     u420:
  1248  0281                     l961:
  1249  0281  0833               	movf	___lwmod@divisor+1,w
  1250  0282  0235               	subwf	___lwmod@dividend+1,w
  1251  0283  1D03               	skipz
  1252  0284  2A87               	goto	u435
  1253  0285  0832               	movf	___lwmod@divisor,w
  1254  0286  0234               	subwf	___lwmod@dividend,w
  1255  0287                     u435:
  1256  0287  1C03               	skipc
  1257  0288  2A8A               	goto	u431
  1258  0289  2A8B               	goto	u430
  1259  028A                     u431:
  1260  028A  2A91               	goto	l965
  1261  028B                     u430:
  1262  028B                     l963:
  1263  028B  0832               	movf	___lwmod@divisor,w
  1264  028C  02B4               	subwf	___lwmod@dividend,f
  1265  028D  0833               	movf	___lwmod@divisor+1,w
  1266  028E  1C03               	skipc
  1267  028F  03B5               	decf	___lwmod@dividend+1,f
  1268  0290  02B5               	subwf	___lwmod@dividend+1,f
  1269  0291                     l965:
  1270  0291  3001               	movlw	1
  1271  0292                     u445:
  1272  0292  1003               	clrc
  1273  0293  0CB3               	rrf	___lwmod@divisor+1,f
  1274  0294  0CB2               	rrf	___lwmod@divisor,f
  1275  0295  3EFF               	addlw	-1
  1276  0296  1D03               	skipz
  1277  0297  2A92               	goto	u445
  1278  0298                     l967:
  1279  0298  3001               	movlw	1
  1280  0299  02F8               	subwf	___lwmod@counter,f
  1281  029A  1D03               	btfss	3,2
  1282  029B  2A9D               	goto	u451
  1283  029C  2A9E               	goto	u450
  1284  029D                     u451:
  1285  029D  2A81               	goto	l961
  1286  029E                     u450:
  1287  029E                     l969:
  1288  029E  0835               	movf	___lwmod@dividend+1,w
  1289  029F  00B3               	movwf	?___lwmod+1
  1290  02A0  0834               	movf	___lwmod@dividend,w
  1291  02A1  00B2               	movwf	?___lwmod
  1292  02A2                     l475:
  1293  02A2  0008               	return
  1294  02A3                     __end_of___lwmod:
  1295                           
  1296                           	psect	text2
  1297  0221                     __ptext2:	
  1298 ;; *************** function ___lwdiv *****************
  1299 ;; Defined at:
  1300 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  divisor         2    4[COMMON] unsigned int 
  1303 ;;  dividend        2    6[COMMON] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  quotient        2    0[BANK0 ] unsigned int 
  1306 ;;  counter         1    2[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    4[COMMON] unsigned int 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, btemp+1
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         4       0       0       0       0
  1317 ;;      Locals:         0       3       0       0       0
  1318 ;;      Temps:          0       0       0       0       0
  1319 ;;      Totals:         4       3       0       0       0
  1320 ;;Total ram usage:        7 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function ___lwdiv
  1332  0221                     ___lwdiv:
  1333  0221                     l925:	
  1334                           ;incstack = 0
  1335                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1336                           
  1337  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0223  01AF               	clrf	___lwdiv@quotient
  1340  0224  01B0               	clrf	___lwdiv@quotient+1
  1341  0225                     l927:
  1342  0225  0874               	movf	___lwdiv@divisor,w
  1343  0226  0475               	iorwf	___lwdiv@divisor+1,w
  1344  0227  1903               	btfsc	3,2
  1345  0228  2A2A               	goto	u331
  1346  0229  2A2B               	goto	u330
  1347  022A                     u331:
  1348  022A  2A62               	goto	l947
  1349  022B                     u330:
  1350  022B                     l929:
  1351  022B  01B1               	clrf	___lwdiv@counter
  1352  022C  0AB1               	incf	___lwdiv@counter,f
  1353  022D  2A39               	goto	l935
  1354  022E                     l931:
  1355  022E  3001               	movlw	1
  1356  022F                     u345:
  1357  022F  1003               	clrc
  1358  0230  0DF4               	rlf	___lwdiv@divisor,f
  1359  0231  0DF5               	rlf	___lwdiv@divisor+1,f
  1360  0232  3EFF               	addlw	-1
  1361  0233  1D03               	skipz
  1362  0234  2A2F               	goto	u345
  1363  0235                     l933:
  1364  0235  3001               	movlw	1
  1365  0236  00FF               	movwf	btemp+1
  1366  0237  087F               	movf	btemp+1,w
  1367  0238  07B1               	addwf	___lwdiv@counter,f
  1368  0239                     l935:
  1369  0239  1FF5               	btfss	___lwdiv@divisor+1,7
  1370  023A  2A3C               	goto	u351
  1371  023B  2A3D               	goto	u350
  1372  023C                     u351:
  1373  023C  2A2E               	goto	l931
  1374  023D                     u350:
  1375  023D                     l937:
  1376  023D  3001               	movlw	1
  1377  023E                     u365:
  1378  023E  1003               	clrc
  1379  023F  0DAF               	rlf	___lwdiv@quotient,f
  1380  0240  0DB0               	rlf	___lwdiv@quotient+1,f
  1381  0241  3EFF               	addlw	-1
  1382  0242  1D03               	skipz
  1383  0243  2A3E               	goto	u365
  1384  0244  0875               	movf	___lwdiv@divisor+1,w
  1385  0245  0277               	subwf	___lwdiv@dividend+1,w
  1386  0246  1D03               	skipz
  1387  0247  2A4A               	goto	u375
  1388  0248  0874               	movf	___lwdiv@divisor,w
  1389  0249  0276               	subwf	___lwdiv@dividend,w
  1390  024A                     u375:
  1391  024A  1C03               	skipc
  1392  024B  2A4D               	goto	u371
  1393  024C  2A4E               	goto	u370
  1394  024D                     u371:
  1395  024D  2A55               	goto	l943
  1396  024E                     u370:
  1397  024E                     l939:
  1398  024E  0874               	movf	___lwdiv@divisor,w
  1399  024F  02F6               	subwf	___lwdiv@dividend,f
  1400  0250  0875               	movf	___lwdiv@divisor+1,w
  1401  0251  1C03               	skipc
  1402  0252  03F7               	decf	___lwdiv@dividend+1,f
  1403  0253  02F7               	subwf	___lwdiv@dividend+1,f
  1404  0254                     l941:
  1405  0254  142F               	bsf	___lwdiv@quotient,0
  1406  0255                     l943:
  1407  0255  3001               	movlw	1
  1408  0256                     u385:
  1409  0256  1003               	clrc
  1410  0257  0CF5               	rrf	___lwdiv@divisor+1,f
  1411  0258  0CF4               	rrf	___lwdiv@divisor,f
  1412  0259  3EFF               	addlw	-1
  1413  025A  1D03               	skipz
  1414  025B  2A56               	goto	u385
  1415  025C                     l945:
  1416  025C  3001               	movlw	1
  1417  025D  02B1               	subwf	___lwdiv@counter,f
  1418  025E  1D03               	btfss	3,2
  1419  025F  2A61               	goto	u391
  1420  0260  2A62               	goto	u390
  1421  0261                     u391:
  1422  0261  2A3D               	goto	l937
  1423  0262                     u390:
  1424  0262                     l947:
  1425  0262  0830               	movf	___lwdiv@quotient+1,w
  1426  0263  00F5               	movwf	?___lwdiv+1
  1427  0264  082F               	movf	___lwdiv@quotient,w
  1428  0265  00F4               	movwf	?___lwdiv
  1429  0266                     l465:
  1430  0266  0008               	return
  1431  0267                     __end_of___lwdiv:
  1432                           
  1433                           	psect	text3
  1434  02A3                     __ptext3:	
  1435 ;; *************** function _ISR *****************
  1436 ;; Defined at:
  1437 ;;		line 33 in file "main.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          4       0       0       0       0
  1454 ;;      Totals:         4       0       0       0       0
  1455 ;;Total ram usage:        4 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		Interrupt level 1
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _ISR
  1466  02A3                     _ISR:
  1467  02A3                     i1l973:
  1468                           
  1469                           ;main.c: 37:     if (TMR1IF) {
  1470  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1471  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1472  02A5  1C0C               	btfss	12,0	;volatile
  1473  02A6  2AA8               	goto	u46_21
  1474  02A7  2AA9               	goto	u46_20
  1475  02A8                     u46_21:
  1476  02A8  2ABA               	goto	i1l72
  1477  02A9                     u46_20:
  1478  02A9                     i1l975:
  1479                           
  1480                           ;main.c: 38:         Counter--;
  1481  02A9  3001               	movlw	1
  1482  02AA  02AC               	subwf	_Counter,f
  1483  02AB  3000               	movlw	0
  1484  02AC  1C03               	skipc
  1485  02AD  03AD               	decf	_Counter+1,f
  1486  02AE  02AD               	subwf	_Counter+1,f
  1487                           
  1488                           ;main.c: 39:         TMR1 = 65535-Display_Rate;
  1489  02AF  082B               	movf	_Display_Rate+1,w
  1490  02B0  00F1               	movwf	??_ISR+1
  1491  02B1  082A               	movf	_Display_Rate,w
  1492  02B2  00F0               	movwf	??_ISR
  1493  02B3  09F0               	comf	??_ISR,f
  1494  02B4  09F1               	comf	??_ISR+1,f
  1495  02B5  0870               	movf	??_ISR,w
  1496  02B6  008E               	movwf	14	;volatile
  1497  02B7  0871               	movf	??_ISR+1,w
  1498  02B8  008F               	movwf	15	;volatile
  1499  02B9                     i1l977:
  1500                           
  1501                           ;main.c: 40:         TMR1IF = 0;
  1502  02B9  100C               	bcf	12,0	;volatile
  1503  02BA                     i1l72:
  1504  02BA  0873               	movf	??_ISR+3,w
  1505  02BB  008A               	movwf	10
  1506  02BC  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  1507  02BD  0083               	movwf	3
  1508  02BE  0EFE               	swapf	btemp,f
  1509  02BF  0E7E               	swapf	btemp,w
  1510  02C0  0009               	retfie
  1511  02C1                     __end_of_ISR:
  1512  007E                     btemp	set	126	;btemp
  1513  007E                     wtemp0	set	126
  1514                           
  1515                           	psect	intentry
  1516  0004                     __pintentry:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _ISR: [wreg]
  1519                           
  1520  0004                     interrupt_function:
  1521  007E                     saved_w	set	btemp
  1522  0004  00FE               	movwf	btemp
  1523  0005  0E03               	swapf	3,w
  1524  0006  00F2               	movwf	??_ISR+2
  1525  0007  080A               	movf	10,w
  1526  0008  00F3               	movwf	??_ISR+3
  1527  0009  120A  118A  2AA3   	ljmp	_ISR
  1528                           
  1529                           	psect	config
  1530                           
  1531                           ;Config register CONFIG @ 0x2007
  1532                           ;	Oscillator Selection bits
  1533                           ;	FOSC = XT, XT oscillator
  1534                           ;	Watchdog Timer Enable bit
  1535                           ;	WDTE = OFF, WDT disabled
  1536                           ;	Power-up Timer Enable bit
  1537                           ;	PWRTE = ON, PWRT enabled
  1538                           ;	Brown-out Reset Enable bit
  1539                           ;	BOREN = ON, BOR enabled
  1540                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1541                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1542                           ;	Data EEPROM Memory Code Protection bit
  1543                           ;	CPD = OFF, Data EEPROM code protection off
  1544                           ;	Flash Program Memory Write Enable bits
  1545                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1546                           ;	In-Circuit Debugger Mode bit
  1547                           ;	DEBUG = 0x1, unprogrammed default
  1548                           ;	Flash Program Memory Code Protection bit
  1549                           ;	CP = OFF, Code protection off
  1550  2007                     	org	8199
  1551  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     11      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1783
                                              7 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     767
                                              8 COMMON     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 05 02:20:06 2020

                      pc 0002                       l78 0062                       fsr 0004  
                    l100 01B6                      l102 01CB                      l103 01E0  
                    l104 01F5                      l465 0266                      l475 02A2  
                    l931 022E                      l941 0254                      l933 0235  
                    l925 0221                      l943 0255                      l935 0239  
                    l927 0225                      l951 0267                      l945 025C  
                    l937 023D                      l929 022B                      l961 0281  
                    l953 026F                      l939 024E                      l947 0262  
                    l963 028B                      l955 0272                      l965 0291  
                    l957 0279                      l981 0028                      l967 0298  
                    l959 027D                      l991 0030                      l983 002A  
                    l969 029E                      l993 0032                      l985 002D  
                    l995 003C                      l987 002E                      l979 0025  
                    _GIE 005F                      l997 003D                      l989 002F  
                    l999 003E                      _RA2 002A                      _RB0 0030  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
                    u400 026F                      u401 026E                      u330 022B  
                    u331 022A                      u420 0281                      u500 0092  
                    u421 0280                      u501 0091                      u350 023D  
                    u430 028B                      u510 00A0                      u351 023C  
                    u431 028A                      u415 0273                      u511 009F  
                    u600 0105                      u520 00A9                      u345 022F  
                    u601 0104                      u521 00A8                      u370 024E  
                    u450 029E                      u610 0113                      u530 00B7  
                    u371 024D                      u451 029D                      u435 0287  
                    u611 0112                      u531 00B6                      u620 011C  
                    u540 00C0                      _ISR 02A3                      u365 023E  
                    u445 0292                      u621 011B                      u541 00BF  
                    u390 0262                      u630 012A                      u550 00CE  
                    u470 0066                      u391 0261                      u375 024A  
                    u631 0129                      u551 00CD                      u471 0065  
                    u640 0133                      u560 00D7                      u480 007B  
                    u385 0256                      u641 0132                      u561 00D6  
                    u481 007A                      u570 00E5                      u490 0089  
                    u571 00E4                      u491 0088                      u580 00EE  
                    u581 00ED                      u590 00FC                      u591 00FB  
                    u657 0053                      _SSD 0020               _SSD_status 002E  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
                   l1001 003F                     l1011 0048                     l1003 0040  
                   l1101 01E8                     l1021 005A                     l1013 0049  
                   l1005 0041                     l1103 01F0                     l1031 0089  
                   l1023 0066                     l1015 004B                     l1007 0044  
                   l1105 01F9                     l1113 0208                     l1041 00AE  
                   l1033 0092                     l1025 0072                     l1017 004F  
                   l1009 0047                     l1107 01FD                     l1051 00D7  
                   l1043 00B7                     l1035 0097                     l1027 007B  
                   l1019 0059                     l1109 0205                     l1061 00FC  
                   l1053 00DC                     l1045 00C0                     l1037 00A0  
                   l1029 0080                     l1151 0210                     l1071 0121  
                   l1063 0105                     l1055 00E5                     l1047 00C5  
                   l1039 00A9                     l1081 014F                     l1073 012A  
                   l1065 010A                     l1057 00EE                     l1049 00CE  
                   l1091 01C6                     l1083 0171                     l1075 0133  
                   l1067 0113                     l1059 00F3                     l1093 01CF  
                   l1085 0193                     l1077 0138                     l1069 011C  
                   l1095 01D3                     l1087 01BA                     l1079 013C  
                   l1097 01DB                     l1089 01BE                     l1099 01E4  
                   _PEIE 005E                     i1l72 02BA                     _TMR1 000E  
                   _main 0025                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070          __end_of___lwdiv 0267  
        __end_of___lwmod 02A3                    i1l973 02A3                    i1l975 02A9  
                  i1l977 02B9                    _PORTB 0006                    _PORTD 0008  
                  u46_20 02A9                    u46_21 02A8                    _TRISA 0085  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E            main@adc_value 0038          __initialization 000F  
           __end_of_main 0221                   ??_main 0036                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR1ON 0080                ??___lwdiv 0078                ??___lwmod 0078  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 02D4               __pbssBANK0 003A               __pmaintext 0025  
             __pintentry 0004                  _T1CKPS0 0084                  _T1CKPS1 0085  
                _GO_DONE 00FA                  _Counter 002C             _Display_Rate 002A  
                ___lwdiv 0221                  ___lwmod 0267                  __ptext1 0267  
                __ptext2 0221                  __ptext3 02A3             __size_of_ISR 001E  
   end_of_initialization 0021      start_initialization 000F              __end_of_ISR 02C1  
             init_fetch0 02C1              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002F         ___lwdiv@dividend 0076                 ?___lwdiv 0074  
               ?___lwmod 0032         ___lwdiv@quotient 002F        interrupt_function 0004  
             _ADCON0bits 001F         __size_of___lwdiv 0046         __size_of___lwmod 003C  
        ___lwdiv@divisor 0074          ___lwdiv@counter 0031            __size_of_main 01FC  
           _SSD1_counter 003D             _SSD2_counter 003C             _SSD3_counter 003B  
           _SSD4_counter 003A                 init_ram0 02C5                 intlevel1 0000  
       ___lwmod@dividend 0034          ___lwmod@divisor 0032          ___lwmod@counter 0078  
