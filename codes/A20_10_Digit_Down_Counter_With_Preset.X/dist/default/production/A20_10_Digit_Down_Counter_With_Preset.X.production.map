Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\A20_10_Digit_Down_Counter_With_Preset.X.production.sym \
  --cmf=dist/default/production\A20_10_Digit_Down_Counter_With_Preset.X.production.cmf \
  -z -Q16F877A -oC:\Users\Louda\AppData\Local\Temp\s9vg.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/A20_10_Digit_Down_Counter_With_Preset.X.production.map \
  -E1 -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Louda\AppData\Local\Temp\s9vg.o \
  dist/default/production\A20_10_Digit_Down_Counter_With_Preset.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Louda\AppData\Local\Temp\s9vg.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\A20_10_Digit_Down_Counter_With_Preset.X.production.o
                cinit                                15       15       13        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        1        0       4
                text8                               26A      26A       47        8       0
                text7                               207      207       63        8       0
                text6                               30C      30C       22        8       0
                text5                               1A4      1A4       63        8       0
                text4                               34C      34C       1A        8       0
                text3                               366      366       16        8       0
                text2                               32E      32E       1E        8       0
                text1                               2B1      2B1       30        8       0
                maintext                             28       28      17C        8       0
                cstackBANK0                          4B       4B        A       20       1
                cstackCOMMON                         70       70        8       70       1
                inittext                            37C      37C       13        8       0
                dataBANK0                            20       20       2B       20       1
                bssBANK0                             55       55        1       20       1
                strings                             38F      38F       11      71E       0
                idataBANK0                          2E1      2E1       2B        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       13         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text8                               26A      26A       47         0
                text7                               207      207       63         0
                text6                               30C      30C       22         0
                text5                               1A4      1A4       63         0
                text4                               34C      34C       1A         0
                text3                               366      366       16         0
                text2                               32E      32E       1E         0
                text1                               2B1      2B1       30         0
                maintext                             28       28      17C         0
                inittext                            37C      37C       13         0
                idataBANK0                          2E1      2E1       2B         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             38F      38F       11         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1

        CLASS   BANK0          
                cstackBANK0                          4B       4B        A         1
                dataBANK0                            20       20       2B         1
                bssBANK0                             55       55        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00038B  00038F         8       0  CODE        2
                dataBANK0                      000020  000036  000056        20       1  BANK0       1
                cstackCOMMON                   000070  000008  000078        70       1  COMMON      1
                strings                        00038F  000011  0003A0       71E       0  STRING      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0056-006F             1A           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         03A0-1FFF            800
        COMMON           0078-007D              6           1
        CONST            0003-0003              1           2
                         03A0-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         03A0-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0056-006F             1A           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         03A0-1FFF           1C60
        STRING           0003-0003              1           2
                         03A0-1FFF            100

                                  Symbol Table

?_strcmp                 cstackCOMMON 0076
LCD_DisChar@DATA         cstackBANK0  004B
LCD_DisStr@i             cstackBANK0  004E
LCD_DisStr@str           cstackBANK0  004D
LCD_DisStrRC@column      cstackBANK0  0050
LCD_DisStrRC@row         cstackBANK0  004F
LCD_DisStrRC@str         cstackBANK0  0051
LCD_GotoRC@column        cstackBANK0  004C
LCD_GotoRC@row           cstackBANK0  004D
LCD_SendCMD@COMMAND      cstackBANK0  004B
_Counter                 dataBANK0    0041
_Field_Offset            bssBANK0     0055
_First_Row_Massage       dataBANK0    0031
_GIE                     (abs)        005F
_INTE                    (abs)        005C
_INTEDG                  (abs)        040E
_INTF                    (abs)        0059
_ISR                     text8        026A
_LCD_DisChar             text7        0207
_LCD_DisStr              text6        030C
_LCD_DisStrRC            text3        0366
_LCD_GotoRC              text4        034C
_LCD_Init                text2        032E
_LCD_SendCMD             text5        01A4
_PEIE                    (abs)        005E
_PORTD                   (abs)        0008
_RB3                     (abs)        0033
_RB4                     (abs)        0034
_RE1                     (abs)        0049
_RE2                     (abs)        004A
_Second_Row_Massage      dataBANK0    0021
_Start_Preset_Status     dataBANK0    0020
_TRISBbits               (abs)        0086
_TRISD                   (abs)        0088
_TRISEbits               (abs)        0089
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        0028
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0015
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__Hinit                  init         0012
__Hinittext              inittext     0000
__Hintentry              intentry     0012
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        03A0
__Hspace_1               (abs)        0078
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        400F
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        0015
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0012
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__Linit                  init         0012
__Linittext              inittext     0000
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        03A0
__S1                     (abs)        0078
__S2                     (abs)        0000
__S3                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
__end_of_ISR             text8        02B1
__end_of_LCD_DisChar     text7        026A
__end_of_LCD_DisStr      text6        032E
__end_of_LCD_DisStrRC    text3        037C
__end_of_LCD_GotoRC      text4        0366
__end_of_LCD_Init        text2        034C
__end_of_LCD_SendCMD     text5        0207
__end_of__initialization cinit        0024
__end_of__stringtab      strings      0395
__end_of_main            maintext     01A4
__end_of_strcmp          text1        02E1
__initialization         cinit        0015
__pbssBANK0              bssBANK0     0055
__pcstackBANK0           cstackBANK0  004B
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    0020
__pidataBANK0            idataBANK0   02E1
__pintentry              intentry     0004
__pmaintext              maintext     0028
__pstrings               strings      038F
__ptext1                 text1        02B1
__ptext2                 text2        032E
__ptext3                 text3        0366
__ptext4                 text4        034C
__ptext5                 text5        01A4
__ptext6                 text6        030C
__ptext7                 text7        0207
__ptext8                 text8        026A
__size_of_ISR            (abs)        0000
__size_of_LCD_DisChar    (abs)        0000
__size_of_LCD_DisStr     (abs)        0000
__size_of_LCD_DisStrRC   (abs)        0000
__size_of_LCD_GotoRC     (abs)        0000
__size_of_LCD_Init       (abs)        0000
__size_of_LCD_SendCMD    (abs)        0000
__size_of_main           (abs)        0000
__size_of_strcmp         (abs)        0000
__stringbase             strings      0394
__stringtab              strings      038F
_main                    maintext     0028
_strcmp                  text1        02B1
btemp                    (abs)        007E
end_of_initialization    cinit        0024
init_fetch0              inittext     037C
init_ram0                inittext     0380
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
main@i                   cstackBANK0  0054
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
start                    init         0012
start_initialization     cinit        0015
strcmp@r                 cstackBANK0  004D
strcmp@s1                cstackBANK0  004E
strcmp@s2                cstackCOMMON 0076
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 35 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_DisChar
		_LCD_DisStrRC
		_LCD_GotoRC
		_LCD_Init
		_LCD_SendCMD
		_strcmp
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _strcmp *****************
 Defined at:
		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
 Parameters:    Size  Location     Type
  s1              1    wreg     PTR const unsigned char 
		 -> Counter(10), 
  s2              1    6[COMMON] PTR const unsigned char 
		 -> STR_1(11), 
 Auto vars:     Size  Location     Type
  s1              1    3[BANK0 ] PTR const unsigned char 
		 -> Counter(10), 
  r               1    2[BANK0 ] char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_DisStrRC *****************
 Defined at:
		line 181 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
  row             1    4[BANK0 ] unsigned char 
  column          1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  str             1    6[BANK0 ] PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_DisStr
		_LCD_GotoRC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_GotoRC *****************
 Defined at:
		line 170 in file "LCD.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_main
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_SendCMD *****************
 Defined at:
		line 31 in file "LCD.c"
 Parameters:    Size  Location     Type
  COMMAND         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  COMMAND         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_Init
		_LCD_GotoRC
 This function uses a non-reentrant model


 *************** function _LCD_DisStr *****************
 Defined at:
		line 116 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
 Auto vars:     Size  Location     Type
  str             1    2[BANK0 ] PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_DisChar
 This function is called by:
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_DisChar *****************
 Defined at:
		line 74 in file "LCD.c"
 Parameters:    Size  Location     Type
  DATA            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DATA            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_DisStr
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 17 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          6       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c
		_strcmp        		CODE           	02B1	0000	49

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c estimated size: 49

shared
		__stringtab    		STRING         	038F	0000	7
		__initialization		CODE           	0015	0000	16

shared estimated size: 23

main.c
		_ISR           		CODE           	026A	0000	72
		_main          		CODE           	0028	0000	381

main.c estimated size: 453

LCD.c
		_LCD_Init      		CODE           	032E	0000	31
		_LCD_SendCMD   		CODE           	01A4	0000	100
		_LCD_DisStr    		CODE           	030C	0000	35
		_LCD_DisChar   		CODE           	0207	0000	100
		_LCD_DisStrRC  		CODE           	0366	0000	23
		_LCD_GotoRC    		CODE           	034C	0000	27

LCD.c estimated size: 316



FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 35 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_DisChar
		_LCD_DisStrRC
		_LCD_GotoRC
		_LCD_Init
		_LCD_SendCMD
		_strcmp
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _strcmp *****************
 Defined at:
		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
 Parameters:    Size  Location     Type
  s1              1    wreg     PTR const unsigned char 
		 -> Counter(10), 
  s2              1    6[COMMON] PTR const unsigned char 
		 -> STR_1(11), 
 Auto vars:     Size  Location     Type
  s1              1    3[BANK0 ] PTR const unsigned char 
		 -> Counter(10), 
  r               1    2[BANK0 ] char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_DisStrRC *****************
 Defined at:
		line 181 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
  row             1    4[BANK0 ] unsigned char 
  column          1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  str             1    6[BANK0 ] PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_DisStr
		_LCD_GotoRC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_GotoRC *****************
 Defined at:
		line 170 in file "LCD.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_main
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_SendCMD *****************
 Defined at:
		line 31 in file "LCD.c"
 Parameters:    Size  Location     Type
  COMMAND         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  COMMAND         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_Init
		_LCD_GotoRC
 This function uses a non-reentrant model


 *************** function _LCD_DisStr *****************
 Defined at:
		line 116 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
 Auto vars:     Size  Location     Type
  str             1    2[BANK0 ] PTR unsigned char 
		 -> Second_Row_Massage(16), First_Row_Massage(16), 
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_DisChar
 This function is called by:
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_DisChar *****************
 Defined at:
		line 74 in file "LCD.c"
 Parameters:    Size  Location     Type
  DATA            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DATA            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_DisStr
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 17 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          6       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c
		_strcmp        		CODE           	02B1	0000	49

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c estimated size: 49

shared
		__stringtab    		STRING         	038F	0000	7
		__initialization		CODE           	0015	0000	16

shared estimated size: 23

main.c
		_ISR           		CODE           	026A	0000	72
		_main          		CODE           	0028	0000	381

main.c estimated size: 453

LCD.c
		_LCD_Init      		CODE           	032E	0000	31
		_LCD_SendCMD   		CODE           	01A4	0000	100
		_LCD_DisStr    		CODE           	030C	0000	35
		_LCD_DisChar   		CODE           	0207	0000	100
		_LCD_DisStrRC  		CODE           	0366	0000	23
		_LCD_GotoRC    		CODE           	034C	0000	27

LCD.c estimated size: 316

