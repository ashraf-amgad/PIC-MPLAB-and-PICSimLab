

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 05 00:17:39 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233                           
   234                           	psect	idataBANK0
   235  06A6                     __pidataBANK0:
   236                           
   237                           ;initializer for _Second_Row_Massage
   238  06A6  3443               	retlw	67
   239  06A7  346F               	retlw	111
   240  06A8  3475               	retlw	117
   241  06A9  346E               	retlw	110
   242  06AA  3474               	retlw	116
   243  06AB  343A               	retlw	58
   244  06AC  3400               	retlw	0
   245  06AD  3400               	retlw	0
   246  06AE  3400               	retlw	0
   247  06AF  3400               	retlw	0
   248  06B0  3400               	retlw	0
   249  06B1  3400               	retlw	0
   250  06B2  3400               	retlw	0
   251  06B3  3400               	retlw	0
   252  06B4  3400               	retlw	0
   253  06B5  3400               	retlw	0
   254                           
   255                           ;initializer for _First_Row_Massage
   256  06B6  3431               	retlw	49
   257  06B7  3430               	retlw	48
   258  06B8  3420               	retlw	32
   259  06B9  3444               	retlw	68
   260  06BA  3469               	retlw	105
   261  06BB  3467               	retlw	103
   262  06BC  3469               	retlw	105
   263  06BD  3474               	retlw	116
   264  06BE  3420               	retlw	32
   265  06BF  3443               	retlw	67
   266  06C0  346F               	retlw	111
   267  06C1  3475               	retlw	117
   268  06C2  346E               	retlw	110
   269  06C3  3474               	retlw	116
   270  06C4  3465               	retlw	101
   271  06C5  3472               	retlw	114
   272                           
   273                           ;initializer for _Counter
   274  06C6  3430               	retlw	48
   275  06C7  3430               	retlw	48
   276  06C8  3430               	retlw	48
   277  06C9  3430               	retlw	48
   278  06CA  3430               	retlw	48
   279  06CB  3430               	retlw	48
   280  06CC  3430               	retlw	48
   281  06CD  3430               	retlw	48
   282  06CE  3430               	retlw	48
   283  06CF  3430               	retlw	48
   284  06D0  3400               	retlw	0
   285  0008                     _PORTD	set	8
   286  0049                     _RE1	set	73
   287  004A                     _RE2	set	74
   288  0089                     _TRISEbits	set	137
   289  0088                     _TRISD	set	136
   290                           
   291                           	psect	cinit
   292  07EE                     start_initialization:	
   293                           ; #config settings
   294                           
   295  07EE                     __initialization:
   296                           
   297                           ; Initialize objects allocated to BANK0
   298  07EE  1383               	bcf	3,7	;select IRP bank0
   299  07EF  304B               	movlw	low (__pdataBANK0+43)
   300  07F0  00FD               	movwf	btemp+-1
   301  07F1  3006               	movlw	high __pidataBANK0
   302  07F2  00FE               	movwf	btemp
   303  07F3  30A6               	movlw	low __pidataBANK0
   304  07F4  00FF               	movwf	btemp+1
   305  07F5  3020               	movlw	low __pdataBANK0
   306  07F6  0084               	movwf	4
   307  07F7  120A  118A  2643  120A  118A  	fcall	init_ram0
   308  07FC                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  07FC                     __end_of__initialization:
   312  07FC  0183               	clrf	3
   313  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	dataBANK0
   316  0020                     __pdataBANK0:
   317  0020                     _Second_Row_Massage:
   318  0020                     	ds	16
   319  0030                     _First_Row_Massage:
   320  0030                     	ds	16
   321  0040                     _Counter:
   322  0040                     	ds	11
   323                           
   324                           	psect	inittext
   325  063F                     init_fetch0:	
   326                           ;	Called with low address in FSR and high address in W
   327                           
   328  063F  087E               	movf	btemp,w
   329  0640  008A               	movwf	10
   330  0641  087F               	movf	btemp+1,w
   331  0642  0082               	movwf	2
   332  0643                     init_ram0:	
   333                           ;Called with:
   334                           ;	high address of idata address in btemp 
   335                           ;	low address of idata address in btemp+1 
   336                           ;	low address of data in FSR
   337                           ;	high address + 1 of data in btemp-1
   338                           
   339  0643  120A  118A  263F  120A  118A  	fcall	init_fetch0
   340  0648  0080               	movwf	0
   341  0649  0A84               	incf	4,f
   342  064A  0804               	movf	4,w
   343  064B  067D               	xorwf	btemp+-1,w
   344  064C  1903               	btfsc	3,2
   345  064D  3400               	retlw	0
   346  064E  0AFF               	incf	btemp+1,f
   347  064F  1903               	btfsc	3,2
   348  0650  0AFE               	incf	btemp,f
   349  0651  2E43               	goto	init_ram0
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:
   353  0070                     ?_LCD_Init:
   354  0070                     ?_LCD_SendCMD:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_LCD_SendCMD:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_LCD_DisChar:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ??_LCD_DisChar:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_LCD_DisStr:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 1 bytes @ 0x0
   374  0070                     	ds	2
   375  0072                     LCD_SendCMD@COMMAND:
   376  0072                     LCD_DisChar@DATA:	
   377                           ; 1 bytes @ 0x2
   378                           
   379                           
   380                           ; 1 bytes @ 0x2
   381  0072                     	ds	1
   382  0073                     ??_LCD_Init:
   383  0073                     ??_LCD_DisStr:	
   384                           ; 1 bytes @ 0x3
   385                           
   386  0073                     ?_LCD_GotoRC:	
   387                           ; 1 bytes @ 0x3
   388                           
   389  0073                     LCD_GotoRC@column:	
   390                           ; 1 bytes @ 0x3
   391                           
   392                           
   393                           ; 1 bytes @ 0x3
   394  0073                     	ds	1
   395  0074                     ??_LCD_GotoRC:
   396  0074                     LCD_DisStr@str:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0074                     LCD_GotoRC@row:	
   400                           ; 1 bytes @ 0x4
   401                           
   402                           
   403                           ; 1 bytes @ 0x4
   404  0074                     	ds	1
   405  0075                     LCD_DisStr@i:
   406                           
   407                           ; 1 bytes @ 0x5
   408  0075                     	ds	1
   409  0076                     ?_LCD_DisStrRC:
   410  0076                     LCD_DisStrRC@row:	
   411                           ; 1 bytes @ 0x6
   412                           
   413                           
   414                           ; 1 bytes @ 0x6
   415  0076                     	ds	1
   416  0077                     LCD_DisStrRC@column:
   417                           
   418                           ; 1 bytes @ 0x7
   419  0077                     	ds	1
   420  0078                     ??_LCD_DisStrRC:
   421  0078                     LCD_DisStrRC@str:	
   422                           ; 1 bytes @ 0x8
   423                           
   424                           
   425                           ; 1 bytes @ 0x8
   426  0078                     	ds	1
   427  0079                     ??_main:
   428  0079                     main@i:	
   429                           ; 1 bytes @ 0x9
   430                           
   431                           
   432                           ; 1 bytes @ 0x9
   433  0079                     	ds	1
   434                           
   435                           	psect	maintext
   436  06D1                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 11 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  i               1    9[COMMON] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         1       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         1       0       0       0       0
   460 ;;Total ram usage:        1 bytes
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		_LCD_DisStrRC
   464 ;;		_LCD_Init
   465 ;;		_LCD_SendCMD
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  06D1                     _main:
   474  06D1                     l846:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   477                           
   478                           
   479                           ;main.c: 13:     LCD_Init();
   480  06D1  120A  118A  2688  120A  118A  	fcall	_LCD_Init
   481  06D6                     l848:
   482                           
   483                           ;main.c: 14:     LCD_DisStrRC(First_Row_Massage, 0, 0);
   484  06D6  01F6               	clrf	LCD_DisStrRC@row
   485  06D7  01F7               	clrf	LCD_DisStrRC@column
   486  06D8  3030               	movlw	(low (_First_Row_Massage| 0))& (0+255)
   487  06D9  120A  118A  262D  120A  118A  	fcall	_LCD_DisStrRC
   488  06DE                     l850:
   489                           
   490                           ;main.c: 15:     LCD_DisStrRC(Second_Row_Massage, 1, 0);
   491  06DE  01F6               	clrf	LCD_DisStrRC@row
   492  06DF  0AF6               	incf	LCD_DisStrRC@row,f
   493  06E0  01F7               	clrf	LCD_DisStrRC@column
   494  06E1  3020               	movlw	(low (_Second_Row_Massage| 0))& (0+255)
   495  06E2  120A  118A  262D  120A  118A  	fcall	_LCD_DisStrRC
   496                           
   497                           ;main.c: 17:     LCD_SendCMD((0x04));
   498  06E7  3004               	movlw	4
   499  06E8  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   500  06ED                     l852:
   501  06ED                     l854:
   502                           
   503                           ;main.c: 25:         Counter[0]++;
   504  06ED  3001               	movlw	1
   505  06EE  00FF               	movwf	btemp+1
   506  06EF  087F               	movf	btemp+1,w
   507  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   508  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   509  06F2  07C0               	addwf	_Counter,f
   510  06F3                     l856:
   511                           
   512                           ;main.c: 26:         for (i = 0; i < 10; i++) {
   513  06F3  01F9               	clrf	main@i
   514  06F4                     l862:
   515                           
   516                           ;main.c: 27:             if (Counter[i] > '9'){
   517  06F4  0879               	movf	main@i,w
   518  06F5  3E40               	addlw	(low (_Counter| 0))& (0+255)
   519  06F6  0084               	movwf	4
   520  06F7  303A               	movlw	58
   521  06F8  1383               	bcf	3,7	;select IRP bank0
   522  06F9  0200               	subwf	0,w
   523  06FA  1C03               	skipc
   524  06FB  2EFD               	goto	u111
   525  06FC  2EFE               	goto	u110
   526  06FD                     u111:
   527  06FD  2F0C               	goto	l866
   528  06FE                     u110:
   529  06FE                     l864:
   530                           
   531                           ;main.c: 28:                 Counter[i+1]++;
   532  06FE  3001               	movlw	1
   533  06FF  00FF               	movwf	btemp+1
   534  0700  0879               	movf	main@i,w
   535  0701  3E41               	addlw	(low ((_Counter| 0+1)))& (0+255)
   536  0702  0084               	movwf	4
   537  0703  087F               	movf	btemp+1,w
   538  0704  0780               	addwf	0,f
   539                           
   540                           ;main.c: 29:                 Counter[i]='0';
   541  0705  3030               	movlw	48
   542  0706  00FF               	movwf	btemp+1
   543  0707  0879               	movf	main@i,w
   544  0708  3E40               	addlw	(low (_Counter| 0))& (0+255)
   545  0709  0084               	movwf	4
   546  070A  087F               	movf	btemp+1,w
   547  070B  0080               	movwf	0
   548  070C                     l866:
   549                           
   550                           ;main.c: 31:         }
   551  070C  3001               	movlw	1
   552  070D  00FF               	movwf	btemp+1
   553  070E  087F               	movf	btemp+1,w
   554  070F  07F9               	addwf	main@i,f
   555  0710                     l868:
   556  0710  300A               	movlw	10
   557  0711  0279               	subwf	main@i,w
   558  0712  1C03               	skipc
   559  0713  2F15               	goto	u121
   560  0714  2F16               	goto	u120
   561  0715                     u121:
   562  0715  2EF4               	goto	l862
   563  0716                     u120:
   564  0716                     l870:
   565                           
   566                           ;main.c: 33:         LCD_DisStrRC(Counter, 2, 15);
   567  0716  3002               	movlw	2
   568  0717  00FF               	movwf	btemp+1
   569  0718  087F               	movf	btemp+1,w
   570  0719  00F6               	movwf	LCD_DisStrRC@row
   571  071A  300F               	movlw	15
   572  071B  00FF               	movwf	btemp+1
   573  071C  087F               	movf	btemp+1,w
   574  071D  00F7               	movwf	LCD_DisStrRC@column
   575  071E  3040               	movlw	(low (_Counter| 0))& (0+255)
   576  071F  120A  118A  262D  120A  118A  	fcall	_LCD_DisStrRC
   577  0724  2EED               	goto	l854
   578  0725  120A  118A  2800   	ljmp	start
   579  0728                     __end_of_main:
   580                           
   581                           	psect	text1
   582  0688                     __ptext1:	
   583 ;; *************** function _LCD_Init *****************
   584 ;; Defined at:
   585 ;;		line 6 in file "LCD.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    1
   606 ;; This function calls:
   607 ;;		_LCD_SendCMD
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _LCD_Init
   615  0688                     _LCD_Init:
   616  0688                     l828:	
   617                           ;incstack = 0
   618                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   619                           
   620                           
   621                           ;LCD.c: 9:     TRISD = 0;
   622  0688  1683               	bsf	3,5	;RP0=1, select bank1
   623  0689  1303               	bcf	3,6	;RP1=0, select bank1
   624  068A  0188               	clrf	8	;volatile
   625  068B                     l830:
   626                           
   627                           ;LCD.c: 10:     TRISEbits.TRISE2 = 0;
   628  068B  1109               	bcf	9,2	;volatile
   629  068C                     l832:
   630                           
   631                           ;LCD.c: 11:     TRISEbits.TRISE1 = 0;
   632  068C  1089               	bcf	9,1	;volatile
   633  068D                     l834:
   634                           
   635                           ;LCD.c: 14:  LCD_SendCMD((0x02));
   636  068D  3002               	movlw	2
   637  068E  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   638  0693                     l836:
   639                           
   640                           ;LCD.c: 17:   LCD_SendCMD((0x28));
   641  0693  3028               	movlw	40
   642  0694  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   643  0699                     l838:
   644                           
   645                           ;LCD.c: 22:  LCD_SendCMD((0x0C));
   646  0699  300C               	movlw	12
   647  069A  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   648  069F                     l840:
   649                           
   650                           ;LCD.c: 23:  LCD_SendCMD((0x01));
   651  069F  3001               	movlw	1
   652  06A0  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   653  06A5                     l40:
   654  06A5  0008               	return
   655  06A6                     __end_of_LCD_Init:
   656                           
   657                           	psect	text2
   658  062D                     __ptext2:	
   659 ;; *************** function _LCD_DisStrRC *****************
   660 ;; Defined at:
   661 ;;		line 181 in file "LCD.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  str             1    wreg     PTR unsigned char 
   664 ;;		 -> Counter(11), Second_Row_Massage(16), First_Row_Massage(16), 
   665 ;;  row             1    6[COMMON] unsigned char 
   666 ;;  column          1    7[COMMON] unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  str             1    8[COMMON] PTR unsigned char 
   669 ;;		 -> Counter(11), Second_Row_Massage(16), First_Row_Massage(16), 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         2       0       0       0       0
   680 ;;      Locals:         1       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         3       0       0       0       0
   683 ;;Total ram usage:        3 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    2
   686 ;; This function calls:
   687 ;;		_LCD_DisStr
   688 ;;		_LCD_GotoRC
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _LCD_DisStrRC
   696  062D                     _LCD_DisStrRC:
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _LCD_DisStrRC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   700                           ;LCD_DisStrRC@str stored from wreg
   701  062D  00F8               	movwf	LCD_DisStrRC@str
   702  062E                     l842:
   703                           
   704                           ;LCD.c: 181: void LCD_DisStrRC(uint8_t* str ,uint8_t row ,uint8_t column);LCD.c: 182: {;
      +                          LCD.c: 183:  LCD_GotoRC(row ,column);
   705  062E  0877               	movf	LCD_DisStrRC@column,w
   706  062F  00FF               	movwf	btemp+1
   707  0630  087F               	movf	btemp+1,w
   708  0631  00F3               	movwf	LCD_GotoRC@column
   709  0632  0876               	movf	LCD_DisStrRC@row,w
   710  0633  120A  118A  2652  120A  118A  	fcall	_LCD_GotoRC
   711  0638                     l844:
   712                           
   713                           ;LCD.c: 184:  LCD_DisStr(str);
   714  0638  0878               	movf	LCD_DisStrRC@str,w
   715  0639  120A  118A  266A  120A  118A  	fcall	_LCD_DisStr
   716  063E                     l60:
   717  063E  0008               	return
   718  063F                     __end_of_LCD_DisStrRC:
   719                           
   720                           	psect	text3
   721  0652                     __ptext3:	
   722 ;; *************** function _LCD_GotoRC *****************
   723 ;; Defined at:
   724 ;;		line 170 in file "LCD.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  row             1    wreg     unsigned char 
   727 ;;  column          1    3[COMMON] unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  row             1    4[COMMON] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         1       0       0       0       0
   740 ;;      Locals:         1       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         2       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    1
   746 ;; This function calls:
   747 ;;		_LCD_SendCMD
   748 ;; This function is called by:
   749 ;;		_LCD_DisStrRC
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _LCD_GotoRC
   755  0652                     _LCD_GotoRC:
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _LCD_GotoRC: [wreg+status,2+status,0+pclath+cstack]
   759                           ;LCD_GotoRC@row stored from wreg
   760  0652  00F4               	movwf	LCD_GotoRC@row
   761  0653                     l822:
   762                           
   763                           ;LCD.c: 170: void LCD_GotoRC(uint8_t row ,uint8_t column);LCD.c: 171: {;LCD.c: 172:   if
      +                          (row == 0)
   764  0653  0874               	movf	LCD_GotoRC@row,w
   765  0654  1D03               	btfss	3,2
   766  0655  2E57               	goto	u101
   767  0656  2E58               	goto	u100
   768  0657                     u101:
   769  0657  2E61               	goto	l826
   770  0658                     u100:
   771  0658                     l824:
   772                           
   773                           ;LCD.c: 173:    LCD_SendCMD( (0x80) | (row + column) );
   774  0658  0873               	movf	LCD_GotoRC@column,w
   775  0659  0774               	addwf	LCD_GotoRC@row,w
   776  065A  3880               	iorlw	128
   777  065B  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   778  0660  2E69               	goto	l57
   779  0661                     l826:
   780                           
   781                           ;LCD.c: 176:    LCD_SendCMD( (0x80) | (column + 0x40) );
   782  0661  0873               	movf	LCD_GotoRC@column,w
   783  0662  3E40               	addlw	64
   784  0663  3880               	iorlw	128
   785  0664  120A  118A  278B  120A  118A  	fcall	_LCD_SendCMD
   786  0669                     l57:
   787  0669  0008               	return
   788  066A                     __end_of_LCD_GotoRC:
   789                           
   790                           	psect	text4
   791  078B                     __ptext4:	
   792 ;; *************** function _LCD_SendCMD *****************
   793 ;; Defined at:
   794 ;;		line 31 in file "LCD.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  COMMAND         1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  COMMAND         1    2[COMMON] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          2       0       0       0       0
   811 ;;      Totals:         3       0       0       0       0
   812 ;;Total ram usage:        3 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;;		_LCD_Init
   819 ;;		_LCD_GotoRC
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _LCD_SendCMD
   825  078B                     _LCD_SendCMD:
   826                           
   827                           ;incstack = 0
   828                           ; Regs used in _LCD_SendCMD: [wreg+status,2+status,0]
   829                           ;LCD_SendCMD@COMMAND stored from wreg
   830  078B  00F2               	movwf	LCD_SendCMD@COMMAND
   831  078C                     l762:
   832                           
   833                           ;LCD.c: 31: void LCD_SendCMD(uint8_t COMMAND);LCD.c: 32: {;LCD.c: 34:     RE2 = 0;
   834  078C  1283               	bcf	3,5	;RP0=0, select bank0
   835  078D  1303               	bcf	3,6	;RP1=0, select bank0
   836  078E  1109               	bcf	9,2	;volatile
   837  078F                     l764:
   838                           
   839                           ;LCD.c: 35:  _delay((unsigned long)((1)*(8000000UL/4000.0)));
   840  078F  3003               	movlw	3
   841  0790  00F1               	movwf	??_LCD_SendCMD+1
   842  0791  3097               	movlw	151
   843  0792  00F0               	movwf	??_LCD_SendCMD
   844  0793                     u137:
   845  0793  0BF0               	decfsz	??_LCD_SendCMD,f
   846  0794  2F93               	goto	u137
   847  0795  0BF1               	decfsz	??_LCD_SendCMD+1,f
   848  0796  2F93               	goto	u137
   849  0797  2F98               	nop2
   850  0798                     l766:
   851                           
   852                           ;LCD.c: 39:         RE1 = 1;
   853  0798  1283               	bcf	3,5	;RP0=0, select bank0
   854  0799  1303               	bcf	3,6	;RP1=0, select bank0
   855  079A  1489               	bsf	9,1	;volatile
   856                           
   857                           ;LCD.c: 40:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   858  079B  3003               	movlw	3
   859  079C  00F1               	movwf	??_LCD_SendCMD+1
   860  079D  3097               	movlw	151
   861  079E  00F0               	movwf	??_LCD_SendCMD
   862  079F                     u147:
   863  079F  0BF0               	decfsz	??_LCD_SendCMD,f
   864  07A0  2F9F               	goto	u147
   865  07A1  0BF1               	decfsz	??_LCD_SendCMD+1,f
   866  07A2  2F9F               	goto	u147
   867  07A3  2FA4               	nop2
   868  07A4                     l768:
   869                           
   870                           ;LCD.c: 42:         PORTD = (COMMAND & 0xF0);
   871  07A4  0872               	movf	LCD_SendCMD@COMMAND,w
   872  07A5  39F0               	andlw	240
   873  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   874  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   875  07A8  0088               	movwf	8	;volatile
   876  07A9                     l770:
   877                           
   878                           ;LCD.c: 43:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
   879  07A9  3003               	movlw	3
   880  07AA  00F1               	movwf	??_LCD_SendCMD+1
   881  07AB  3097               	movlw	151
   882  07AC  00F0               	movwf	??_LCD_SendCMD
   883  07AD                     u157:
   884  07AD  0BF0               	decfsz	??_LCD_SendCMD,f
   885  07AE  2FAD               	goto	u157
   886  07AF  0BF1               	decfsz	??_LCD_SendCMD+1,f
   887  07B0  2FAD               	goto	u157
   888  07B1  2FB2               	nop2
   889  07B2                     l772:
   890                           
   891                           ;LCD.c: 45:   RE1 = 0;
   892  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   893  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   894  07B4  1089               	bcf	9,1	;volatile
   895  07B5                     l774:
   896                           
   897                           ;LCD.c: 46:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   898  07B5  3003               	movlw	3
   899  07B6  00F1               	movwf	??_LCD_SendCMD+1
   900  07B7  3097               	movlw	151
   901  07B8  00F0               	movwf	??_LCD_SendCMD
   902  07B9                     u167:
   903  07B9  0BF0               	decfsz	??_LCD_SendCMD,f
   904  07BA  2FB9               	goto	u167
   905  07BB  0BF1               	decfsz	??_LCD_SendCMD+1,f
   906  07BC  2FB9               	goto	u167
   907  07BD  2FBE               	nop2
   908  07BE                     l776:
   909                           
   910                           ;LCD.c: 49:         RE1 = 1;
   911  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   912  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   913  07C0  1489               	bsf	9,1	;volatile
   914  07C1                     l778:
   915                           
   916                           ;LCD.c: 50:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   917  07C1  3003               	movlw	3
   918  07C2  00F1               	movwf	??_LCD_SendCMD+1
   919  07C3  3097               	movlw	151
   920  07C4  00F0               	movwf	??_LCD_SendCMD
   921  07C5                     u177:
   922  07C5  0BF0               	decfsz	??_LCD_SendCMD,f
   923  07C6  2FC5               	goto	u177
   924  07C7  0BF1               	decfsz	??_LCD_SendCMD+1,f
   925  07C8  2FC5               	goto	u177
   926  07C9  2FCA               	nop2
   927  07CA                     l780:
   928                           
   929                           ;LCD.c: 52:         PORTD = ((COMMAND << 4) & 0xF0);
   930  07CA  0872               	movf	LCD_SendCMD@COMMAND,w
   931  07CB  00F0               	movwf	??_LCD_SendCMD
   932  07CC  3003               	movlw	3
   933  07CD                     u75:
   934  07CD  1003               	clrc
   935  07CE  0DF0               	rlf	??_LCD_SendCMD,f
   936  07CF  3EFF               	addlw	-1
   937  07D0  1D03               	skipz
   938  07D1  2FCD               	goto	u75
   939  07D2  1003               	clrc
   940  07D3  0D70               	rlf	??_LCD_SendCMD,w
   941  07D4  39F0               	andlw	240
   942  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   943  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   944  07D7  0088               	movwf	8	;volatile
   945  07D8                     l782:
   946                           
   947                           ;LCD.c: 53:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   948  07D8  3003               	movlw	3
   949  07D9  00F1               	movwf	??_LCD_SendCMD+1
   950  07DA  3097               	movlw	151
   951  07DB  00F0               	movwf	??_LCD_SendCMD
   952  07DC                     u187:
   953  07DC  0BF0               	decfsz	??_LCD_SendCMD,f
   954  07DD  2FDC               	goto	u187
   955  07DE  0BF1               	decfsz	??_LCD_SendCMD+1,f
   956  07DF  2FDC               	goto	u187
   957  07E0  2FE1               	nop2
   958  07E1                     l784:
   959                           
   960                           ;LCD.c: 55:   RE1 = 0;
   961  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   962  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   963  07E3  1089               	bcf	9,1	;volatile
   964  07E4                     l786:
   965                           
   966                           ;LCD.c: 56:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   967  07E4  3003               	movlw	3
   968  07E5  00F1               	movwf	??_LCD_SendCMD+1
   969  07E6  3097               	movlw	151
   970  07E7  00F0               	movwf	??_LCD_SendCMD
   971  07E8                     u197:
   972  07E8  0BF0               	decfsz	??_LCD_SendCMD,f
   973  07E9  2FE8               	goto	u197
   974  07EA  0BF1               	decfsz	??_LCD_SendCMD+1,f
   975  07EB  2FE8               	goto	u197
   976  07EC  2FED               	nop2
   977  07ED                     l43:
   978  07ED  0008               	return
   979  07EE                     __end_of_LCD_SendCMD:
   980                           
   981                           	psect	text5
   982  066A                     __ptext5:	
   983 ;; *************** function _LCD_DisStr *****************
   984 ;; Defined at:
   985 ;;		line 116 in file "LCD.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  str             1    wreg     PTR unsigned char 
   988 ;;		 -> Counter(11), Second_Row_Massage(16), First_Row_Massage(16), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  str             1    4[COMMON] PTR unsigned char 
   991 ;;		 -> Counter(11), Second_Row_Massage(16), First_Row_Massage(16), 
   992 ;;  i               1    5[COMMON] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         2       0       0       0       0
  1004 ;;      Temps:          1       0       0       0       0
  1005 ;;      Totals:         3       0       0       0       0
  1006 ;;Total ram usage:        3 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    1
  1009 ;; This function calls:
  1010 ;;		_LCD_DisChar
  1011 ;; This function is called by:
  1012 ;;		_LCD_DisStrRC
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _LCD_DisStr
  1018  066A                     _LCD_DisStr:
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _LCD_DisStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1022                           ;LCD_DisStr@str stored from wreg
  1023  066A  00F4               	movwf	LCD_DisStr@str
  1024  066B                     l814:
  1025                           
  1026                           ;LCD.c: 116: void LCD_DisStr(uint8_t* str);LCD.c: 117: {;LCD.c: 118:  uint8_t i=0;
  1027  066B  01F5               	clrf	LCD_DisStr@i
  1028                           
  1029                           ;LCD.c: 120:  while(str[i] != 0)
  1030  066C  2E7C               	goto	l820
  1031  066D                     l816:
  1032                           
  1033                           ;LCD.c: 121:  {;LCD.c: 122:   LCD_DisChar(str[i]);
  1034  066D  0875               	movf	LCD_DisStr@i,w
  1035  066E  0774               	addwf	LCD_DisStr@str,w
  1036  066F  00F3               	movwf	??_LCD_DisStr
  1037  0670  0873               	movf	??_LCD_DisStr,w
  1038  0671  0084               	movwf	4
  1039  0672  0800               	movf	0,w
  1040  0673  120A  118A  2728  120A  118A  	fcall	_LCD_DisChar
  1041  0678                     l818:
  1042                           
  1043                           ;LCD.c: 123:   i++;
  1044  0678  3001               	movlw	1
  1045  0679  00FF               	movwf	btemp+1
  1046  067A  087F               	movf	btemp+1,w
  1047  067B  07F5               	addwf	LCD_DisStr@i,f
  1048  067C                     l820:
  1049                           
  1050                           ;LCD.c: 120:  while(str[i] != 0)
  1051  067C  0875               	movf	LCD_DisStr@i,w
  1052  067D  0774               	addwf	LCD_DisStr@str,w
  1053  067E  00F3               	movwf	??_LCD_DisStr
  1054  067F  0873               	movf	??_LCD_DisStr,w
  1055  0680  0084               	movwf	4
  1056  0681  1383               	bcf	3,7	;select IRP bank0
  1057  0682  0800               	movf	0,w
  1058  0683  1D03               	btfss	3,2
  1059  0684  2E86               	goto	u91
  1060  0685  2E87               	goto	u90
  1061  0686                     u91:
  1062  0686  2E6D               	goto	l816
  1063  0687                     u90:
  1064  0687                     l52:
  1065  0687  0008               	return
  1066  0688                     __end_of_LCD_DisStr:
  1067                           
  1068                           	psect	text6
  1069  0728                     __ptext6:	
  1070 ;; *************** function _LCD_DisChar *****************
  1071 ;; Defined at:
  1072 ;;		line 74 in file "LCD.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  DATA            1    wreg     unsigned char 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  DATA            1    2[COMMON] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         1       0       0       0       0
  1088 ;;      Temps:          2       0       0       0       0
  1089 ;;      Totals:         3       0       0       0       0
  1090 ;;Total ram usage:        3 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_LCD_DisStr
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _LCD_DisChar
  1101  0728                     _LCD_DisChar:
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _LCD_DisChar: [wreg+status,2+status,0]
  1105                           ;LCD_DisChar@DATA stored from wreg
  1106  0728  00F2               	movwf	LCD_DisChar@DATA
  1107  0729                     l788:
  1108                           
  1109                           ;LCD.c: 74: void LCD_DisChar(uint8_t DATA);LCD.c: 75: {;LCD.c: 76:     RE2 = 1;
  1110  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1111  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1112  072B  1509               	bsf	9,2	;volatile
  1113  072C                     l790:
  1114                           
  1115                           ;LCD.c: 77:  _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1116  072C  3003               	movlw	3
  1117  072D  00F1               	movwf	??_LCD_DisChar+1
  1118  072E  3097               	movlw	151
  1119  072F  00F0               	movwf	??_LCD_DisChar
  1120  0730                     u207:
  1121  0730  0BF0               	decfsz	??_LCD_DisChar,f
  1122  0731  2F30               	goto	u207
  1123  0732  0BF1               	decfsz	??_LCD_DisChar+1,f
  1124  0733  2F30               	goto	u207
  1125  0734  2F35               	nop2
  1126  0735                     l792:
  1127                           
  1128                           ;LCD.c: 81:         RE1 = 1;
  1129  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0737  1489               	bsf	9,1	;volatile
  1132                           
  1133                           ;LCD.c: 82:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1134  0738  3003               	movlw	3
  1135  0739  00F1               	movwf	??_LCD_DisChar+1
  1136  073A  3097               	movlw	151
  1137  073B  00F0               	movwf	??_LCD_DisChar
  1138  073C                     u217:
  1139  073C  0BF0               	decfsz	??_LCD_DisChar,f
  1140  073D  2F3C               	goto	u217
  1141  073E  0BF1               	decfsz	??_LCD_DisChar+1,f
  1142  073F  2F3C               	goto	u217
  1143  0740  2F41               	nop2
  1144  0741                     l794:
  1145                           
  1146                           ;LCD.c: 84:         PORTD = (DATA & 0xF0);
  1147  0741  0872               	movf	LCD_DisChar@DATA,w
  1148  0742  39F0               	andlw	240
  1149  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0745  0088               	movwf	8	;volatile
  1152  0746                     l796:
  1153                           
  1154                           ;LCD.c: 85:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1155  0746  3003               	movlw	3
  1156  0747  00F1               	movwf	??_LCD_DisChar+1
  1157  0748  3097               	movlw	151
  1158  0749  00F0               	movwf	??_LCD_DisChar
  1159  074A                     u227:
  1160  074A  0BF0               	decfsz	??_LCD_DisChar,f
  1161  074B  2F4A               	goto	u227
  1162  074C  0BF1               	decfsz	??_LCD_DisChar+1,f
  1163  074D  2F4A               	goto	u227
  1164  074E  2F4F               	nop2
  1165  074F                     l798:
  1166                           
  1167                           ;LCD.c: 87:         RE1 = 0;
  1168  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0751  1089               	bcf	9,1	;volatile
  1171  0752                     l800:
  1172                           
  1173                           ;LCD.c: 88:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1174  0752  3003               	movlw	3
  1175  0753  00F1               	movwf	??_LCD_DisChar+1
  1176  0754  3097               	movlw	151
  1177  0755  00F0               	movwf	??_LCD_DisChar
  1178  0756                     u237:
  1179  0756  0BF0               	decfsz	??_LCD_DisChar,f
  1180  0757  2F56               	goto	u237
  1181  0758  0BF1               	decfsz	??_LCD_DisChar+1,f
  1182  0759  2F56               	goto	u237
  1183  075A  2F5B               	nop2
  1184  075B                     l802:
  1185                           
  1186                           ;LCD.c: 90:         RE1 = 1;
  1187  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1188  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1189  075D  1489               	bsf	9,1	;volatile
  1190  075E                     l804:
  1191                           
  1192                           ;LCD.c: 91:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1193  075E  3003               	movlw	3
  1194  075F  00F1               	movwf	??_LCD_DisChar+1
  1195  0760  3097               	movlw	151
  1196  0761  00F0               	movwf	??_LCD_DisChar
  1197  0762                     u247:
  1198  0762  0BF0               	decfsz	??_LCD_DisChar,f
  1199  0763  2F62               	goto	u247
  1200  0764  0BF1               	decfsz	??_LCD_DisChar+1,f
  1201  0765  2F62               	goto	u247
  1202  0766  2F67               	nop2
  1203  0767                     l806:
  1204                           
  1205                           ;LCD.c: 93:   PORTD = ((DATA << 4) & 0xF0);
  1206  0767  0872               	movf	LCD_DisChar@DATA,w
  1207  0768  00F0               	movwf	??_LCD_DisChar
  1208  0769  3003               	movlw	3
  1209  076A                     u85:
  1210  076A  1003               	clrc
  1211  076B  0DF0               	rlf	??_LCD_DisChar,f
  1212  076C  3EFF               	addlw	-1
  1213  076D  1D03               	skipz
  1214  076E  2F6A               	goto	u85
  1215  076F  1003               	clrc
  1216  0770  0D70               	rlf	??_LCD_DisChar,w
  1217  0771  39F0               	andlw	240
  1218  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0774  0088               	movwf	8	;volatile
  1221  0775                     l808:
  1222                           
  1223                           ;LCD.c: 94:   _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1224  0775  3003               	movlw	3
  1225  0776  00F1               	movwf	??_LCD_DisChar+1
  1226  0777  3097               	movlw	151
  1227  0778  00F0               	movwf	??_LCD_DisChar
  1228  0779                     u257:
  1229  0779  0BF0               	decfsz	??_LCD_DisChar,f
  1230  077A  2F79               	goto	u257
  1231  077B  0BF1               	decfsz	??_LCD_DisChar+1,f
  1232  077C  2F79               	goto	u257
  1233  077D  2F7E               	nop2
  1234  077E                     l810:
  1235                           
  1236                           ;LCD.c: 96:   RE1 = 0;
  1237  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0780  1089               	bcf	9,1	;volatile
  1240  0781                     l812:
  1241                           
  1242                           ;LCD.c: 97:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1243  0781  3003               	movlw	3
  1244  0782  00F1               	movwf	??_LCD_DisChar+1
  1245  0783  3097               	movlw	151
  1246  0784  00F0               	movwf	??_LCD_DisChar
  1247  0785                     u267:
  1248  0785  0BF0               	decfsz	??_LCD_DisChar,f
  1249  0786  2F85               	goto	u267
  1250  0787  0BF1               	decfsz	??_LCD_DisChar+1,f
  1251  0788  2F85               	goto	u267
  1252  0789  2F8A               	nop2
  1253  078A                     l46:
  1254  078A  0008               	return
  1255  078B                     __end_of_LCD_DisChar:
  1256  007E                     btemp	set	126	;btemp
  1257  007E                     wtemp0	set	126
  1258                           
  1259                           	psect	config
  1260                           
  1261                           ;Config register CONFIG @ 0x2007
  1262                           ;	Oscillator Selection bits
  1263                           ;	FOSC = XT, XT oscillator
  1264                           ;	Watchdog Timer Enable bit
  1265                           ;	WDTE = OFF, WDT disabled
  1266                           ;	Power-up Timer Enable bit
  1267                           ;	PWRTE = ON, PWRT enabled
  1268                           ;	Brown-out Reset Enable bit
  1269                           ;	BOREN = ON, BOR enabled
  1270                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1271                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1272                           ;	Data EEPROM Memory Code Protection bit
  1273                           ;	CPD = OFF, Data EEPROM code protection off
  1274                           ;	Flash Program Memory Write Enable bits
  1275                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1276                           ;	In-Circuit Debugger Mode bit
  1277                           ;	DEBUG = 0x1, unprogrammed default
  1278                           ;	Flash Program Memory Code Protection bit
  1279                           ;	CP = OFF, Code protection off
  1280  2007                     	org	8199
  1281  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        43
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_DisStrRC@str	PTR unsigned char  size(1) Largest target is 16
		 -> Counter(BANK0[11]), Second_Row_Massage(BANK0[16]), First_Row_Massage(BANK0[16]), 

    LCD_DisStr@str	PTR unsigned char  size(1) Largest target is 16
		 -> Counter(BANK0[11]), Second_Row_Massage(BANK0[16]), First_Row_Massage(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_DisStrRC
    _LCD_Init->_LCD_SendCMD
    _LCD_DisStrRC->_LCD_DisStr
    _LCD_GotoRC->_LCD_SendCMD
    _LCD_DisStr->_LCD_DisChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1197
                                              9 COMMON     1     1      0
                       _LCD_DisStrRC
                           _LCD_Init
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_DisStrRC                                         3     1      2     996
                                              6 COMMON     3     1      2
                         _LCD_DisStr
                         _LCD_GotoRC
 ---------------------------------------------------------------------------------
 (2) _LCD_GotoRC                                           2     1      1     208
                                              3 COMMON     2     1      1
                        _LCD_SendCMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SendCMD                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_DisStr                                           3     3      0     167
                                              3 COMMON     3     3      0
                        _LCD_DisChar
 ---------------------------------------------------------------------------------
 (3) _LCD_DisChar                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisStrRC
     _LCD_DisStr
       _LCD_DisChar
     _LCD_GotoRC
       _LCD_SendCMD
   _LCD_Init
     _LCD_SendCMD
   _LCD_SendCMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 05 00:17:39 2020

            ?_LCD_DisStr 0070             ?_LCD_DisChar 0070                        pc 0002  
            ?_LCD_GotoRC 0073                       l40 06A5                       l43 07ED  
                     l52 0687                       l60 063E                       l46 078A  
                     l57 0669                       u90 0687                       u91 0686  
                     u75 07CD                       u85 076A                       fsr 0004  
          ?_LCD_DisStrRC 0076             ?_LCD_SendCMD 0070                      l800 0752  
                    l810 077E                      l802 075B                      l812 0781  
                    l804 075E                      l820 067C                      l806 0767  
                    l814 066B                      l822 0653                      l830 068B  
                    l808 0775                      l816 066D                      l824 0658  
                    l840 069F                      l832 068C                      l818 0678  
                    l770 07A9                      l762 078C                      l826 0661  
                    l842 062E                      l834 068D                      l850 06DE  
                    l780 07CA                      l772 07B2                      l764 078F  
                    l844 0638                      l836 0693                      l828 0688  
                    l852 06ED                      l790 072C                      l782 07D8  
                    l774 07B5                      l766 0798                      l838 0699  
                    l870 0716                      l862 06F4                      l854 06ED  
                    l846 06D1                      l792 0735                      l784 07E1  
                    l776 07BE                      l768 07A4                      l864 06FE  
                    l856 06F3                      l848 06D6                      l794 0741  
                    l786 07E4                      l778 07C1                      l866 070C  
                    l796 0746                      l788 0729                      l868 0710  
                    l798 074F                      _RE1 0049                      u100 0658  
                    _RE2 004A                      u101 0657                      u110 06FE  
                    u111 06FD                      u120 0716                      u121 0715  
                    u207 0730                      u217 073C                      u137 0793  
                    u227 074A                      u147 079F                      u237 0756  
                    u157 07AD                      u247 0762                      u167 07B9  
                    u257 0779                      u177 07C5                      u267 0785  
                    u187 07DC                      u197 07E8                      fsr0 0004  
                    indf 0000         LCD_GotoRC@column 0073              LCD_DisStr@i 0075  
                   _main 06D1                     btemp 007E                     start 0000  
         ??_LCD_DisStrRC 0078         __end_of_LCD_Init 06A6                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088      __size_of_LCD_DisStr 001E  
                  main@i 0079      __size_of_LCD_GotoRC 0018                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 0728                   ??_main 0079            LCD_DisStr@str 0074  
   __size_of_LCD_DisChar 0063     __size_of_LCD_SendCMD 0063     __end_of_LCD_DisStrRC 063F  
__end_of__initialization 07FC                ?_LCD_Init 0070            LCD_GotoRC@row 0074  
         __pcstackCOMMON 0070             ??_LCD_DisStr 0073             __pidataBANK0 06A6  
           ??_LCD_GotoRC 0074        _First_Row_Massage 0030       __end_of_LCD_DisStr 0688  
     __end_of_LCD_GotoRC 066A               ??_LCD_Init 0073               __pmaintext 06D1  
                _Counter 0040                  __ptext1 0688                  __ptext2 062D  
                __ptext3 0652                  __ptext4 078B                  __ptext5 066A  
                __ptext6 0728    __size_of_LCD_DisStrRC 0012     end_of_initialization 07FC  
     LCD_DisStrRC@column 0077             _LCD_DisStrRC 062D                _TRISEbits 0089  
      __size_of_LCD_Init 001E            ??_LCD_DisChar 0070            ??_LCD_SendCMD 0070  
    start_initialization 07EE               init_fetch0 063F              __pdataBANK0 0020  
    __end_of_LCD_DisChar 078B                ___latbits 0002      __end_of_LCD_SendCMD 07EE  
        LCD_DisChar@DATA 0072                 _LCD_Init 0688       _Second_Row_Massage 0020  
            _LCD_DisChar 0728              _LCD_SendCMD 078B          LCD_DisStrRC@row 0076  
        LCD_DisStrRC@str 0078            __size_of_main 0057               _LCD_DisStr 066A  
             _LCD_GotoRC 0652                 init_ram0 0643       LCD_SendCMD@COMMAND 0072  
