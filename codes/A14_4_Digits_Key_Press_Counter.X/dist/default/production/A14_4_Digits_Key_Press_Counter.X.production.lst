

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 05 02:32:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	idataCOMMON
   177  0250                     __pidataCOMMON:
   178                           
   179                           ;initializer for _SSD_status
   180  0250  3401               	retlw	1
   181                           
   182                           	psect	idataBANK0
   183  0246                     __pidataBANK0:
   184                           
   185                           ;initializer for _SSD
   186  0246  343F               	retlw	63
   187  0247  3406               	retlw	6
   188  0248  345B               	retlw	91
   189  0249  344F               	retlw	79
   190  024A  3466               	retlw	102
   191  024B  346D               	retlw	109
   192  024C  347D               	retlw	125
   193  024D  3407               	retlw	7
   194  024E  347F               	retlw	127
   195  024F  346F               	retlw	111
   196  000E                     _TMR1	set	14
   197  0008                     _PORTD	set	8
   198  0033                     _RB3	set	51
   199  005F                     _GIE	set	95
   200  005E                     _PEIE	set	94
   201  0080                     _TMR1ON	set	128
   202  0030                     _RB0	set	48
   203  0085                     _T1CKPS1	set	133
   204  0084                     _T1CKPS0	set	132
   205  0081                     _TMR1CS	set	129
   206  002D                     _RA5	set	45
   207  002C                     _RA4	set	44
   208  002B                     _RA3	set	43
   209  002A                     _RA2	set	42
   210  0060                     _TMR1IF	set	96
   211  0086                     _TRISBbits	set	134
   212  0085                     _TRISA	set	133
   213  0088                     _TRISD	set	136
   214  0460                     _TMR1IE	set	1120
   215                           
   216                           	psect	cinit
   217  0015                     start_initialization:	
   218                           ; #config settings
   219                           
   220  0015                     __initialization:
   221                           
   222                           ; Initialize objects allocated to BANK0
   223  0015  1383               	bcf	3,7	;select IRP bank0
   224  0016  303F               	movlw	low (__pdataBANK0+10)
   225  0017  00FD               	movwf	btemp+-1
   226  0018  3002               	movlw	high __pidataBANK0
   227  0019  00FE               	movwf	btemp
   228  001A  3046               	movlw	low __pidataBANK0
   229  001B  00FF               	movwf	btemp+1
   230  001C  3035               	movlw	low __pdataBANK0
   231  001D  0084               	movwf	4
   232  001E  120A  118A  2237  120A  118A  	fcall	init_ram0
   233                           
   234                           ; Initialize objects allocated to COMMON
   235  0023  120A  118A  2250  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   236  0028  00F7               	movwf	__pdataCOMMON& (0+127)
   237                           
   238                           ; Clear objects allocated to BANK0
   239  0029  01AB               	clrf	__pbssBANK0& (0+127)
   240  002A  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   241  002B  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   242  002C  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   243  002D  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   244  002E  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   245  002F  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   246  0030  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   247  0031  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   248  0032  01B4               	clrf	(__pbssBANK0+9)& (0+127)
   249  0033                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  0033                     __end_of__initialization:
   253  0033  0183               	clrf	3
   254  0034  120A  118A  2837   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	dataCOMMON
   257  0077                     __pdataCOMMON:
   258  0077                     _SSD_status:
   259  0077                     	ds	1
   260                           
   261                           	psect	bssBANK0
   262  002B                     __pbssBANK0:
   263  002B                     _counter:
   264  002B                     	ds	4
   265  002F                     _Display_Counter:
   266  002F                     	ds	2
   267  0031                     _SSD4_counter:
   268  0031                     	ds	1
   269  0032                     _SSD3_counter:
   270  0032                     	ds	1
   271  0033                     _SSD2_counter:
   272  0033                     	ds	1
   273  0034                     _SSD1_counter:
   274  0034                     	ds	1
   275                           
   276                           	psect	dataBANK0
   277  0035                     __pdataBANK0:
   278  0035                     _SSD:
   279  0035                     	ds	10
   280                           
   281                           	psect	inittext
   282  0233                     init_fetch0:	
   283                           ;	Called with low address in FSR and high address in W
   284                           
   285  0233  087E               	movf	btemp,w
   286  0234  008A               	movwf	10
   287  0235  087F               	movf	btemp+1,w
   288  0236  0082               	movwf	2
   289  0237                     init_ram0:	
   290                           ;Called with:
   291                           ;	high address of idata address in btemp 
   292                           ;	low address of idata address in btemp+1 
   293                           ;	low address of data in FSR
   294                           ;	high address + 1 of data in btemp-1
   295                           
   296  0237  120A  118A  2233  120A  118A  	fcall	init_fetch0
   297  023C  0080               	movwf	0
   298  023D  0A84               	incf	4,f
   299  023E  0804               	movf	4,w
   300  023F  067D               	xorwf	btemp+-1,w
   301  0240  1903               	btfsc	3,2
   302  0241  3400               	retlw	0
   303  0242  0AFF               	incf	btemp+1,f
   304  0243  1903               	btfsc	3,2
   305  0244  0AFE               	incf	btemp,f
   306  0245  2A37               	goto	init_ram0
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:
   310  0070                     ?_ISR:
   311  0070                     ??_ISR:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 1 bytes @ 0x0
   319  0070                     	ds	6
   320  0076                     ??___lwdiv:
   321  0076                     ??___lwmod:	
   322                           ; 1 bytes @ 0x6
   323                           
   324  0076                     ___lwmod@counter:	
   325                           ; 1 bytes @ 0x6
   326                           
   327                           
   328                           ; 1 bytes @ 0x6
   329  0076                     	ds	1
   330  0077                     ??_main:
   331                           
   332                           	psect	cstackBANK0
   333  0020                     __pcstackBANK0:	
   334                           ; 1 bytes @ 0x7
   335                           
   336  0020                     ?___lwdiv:
   337  0020                     ___lwdiv@divisor:	
   338                           ; 2 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342  0020                     	ds	2
   343  0022                     ___lwdiv@dividend:
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	2
   347  0024                     ___lwdiv@quotient:
   348                           
   349                           ; 2 bytes @ 0x4
   350  0024                     	ds	2
   351  0026                     ___lwdiv@counter:
   352                           
   353                           ; 1 bytes @ 0x6
   354  0026                     	ds	1
   355  0027                     ?___lwmod:
   356  0027                     ___lwmod@divisor:	
   357                           ; 2 bytes @ 0x7
   358                           
   359                           
   360                           ; 2 bytes @ 0x7
   361  0027                     	ds	2
   362  0029                     ___lwmod@dividend:
   363                           
   364                           ; 2 bytes @ 0x9
   365  0029                     	ds	2
   366                           
   367                           	psect	maintext
   368  0037                     __pmaintext:	
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 94 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels required when called:    2
   394 ;; This function calls:
   395 ;;		___lwdiv
   396 ;;		___lwmod
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  0037                     _main:
   405  0037                     l924:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   408                           
   409                           
   410                           ;main.c: 98:     TRISD = 0x00;
   411  0037  1683               	bsf	3,5	;RP0=1, select bank1
   412  0038  1303               	bcf	3,6	;RP1=0, select bank1
   413  0039  0188               	clrf	8	;volatile
   414  003A                     l926:
   415                           
   416                           ;main.c: 99:     TRISA = 0x01;
   417  003A  3001               	movlw	1
   418  003B  0085               	movwf	5	;volatile
   419  003C                     l928:
   420                           
   421                           ;main.c: 100:     RA2 = 0;
   422  003C  1283               	bcf	3,5	;RP0=0, select bank0
   423  003D  1303               	bcf	3,6	;RP1=0, select bank0
   424  003E  1105               	bcf	5,2	;volatile
   425  003F                     l930:
   426                           
   427                           ;main.c: 101:     RA3 = 0;
   428  003F  1185               	bcf	5,3	;volatile
   429  0040                     l932:
   430                           
   431                           ;main.c: 102:     RA4 = 0;
   432  0040  1205               	bcf	5,4	;volatile
   433  0041                     l934:
   434                           
   435                           ;main.c: 103:     RA5 = 0;
   436  0041  1285               	bcf	5,5	;volatile
   437  0042                     l936:
   438                           
   439                           ;main.c: 104:     PORTD = SSD[0];
   440  0042  0835               	movf	_SSD,w
   441  0043  0088               	movwf	8	;volatile
   442  0044                     l938:
   443                           
   444                           ;main.c: 105:     TRISBbits.TRISB3 = 1;
   445  0044  1683               	bsf	3,5	;RP0=1, select bank1
   446  0045  1303               	bcf	3,6	;RP1=0, select bank1
   447  0046  1586               	bsf	6,3	;volatile
   448  0047                     l940:
   449                           
   450                           ;main.c: 109:     TMR1 = 65536-1000;
   451  0047  30FC               	movlw	252
   452  0048  1283               	bcf	3,5	;RP0=0, select bank0
   453  0049  1303               	bcf	3,6	;RP1=0, select bank0
   454  004A  008F               	movwf	15	;volatile
   455  004B  3018               	movlw	24
   456  004C  008E               	movwf	14	;volatile
   457  004D                     l942:
   458                           
   459                           ;main.c: 111:     TMR1CS = 0;
   460  004D  1090               	bcf	16,1	;volatile
   461  004E                     l944:
   462                           
   463                           ;main.c: 113:     T1CKPS0 = 0;
   464  004E  1210               	bcf	16,4	;volatile
   465  004F                     l946:
   466                           
   467                           ;main.c: 114:     T1CKPS1 = 0;
   468  004F  1290               	bcf	16,5	;volatile
   469  0050                     l948:
   470                           
   471                           ;main.c: 116:     RB0 = 1;
   472  0050  1406               	bsf	6,0	;volatile
   473  0051                     l950:
   474                           
   475                           ;main.c: 118:     TMR1ON = 1;
   476  0051  1410               	bsf	16,0	;volatile
   477  0052                     l952:
   478                           
   479                           ;main.c: 120:     TMR1IE = 1;
   480  0052  1683               	bsf	3,5	;RP0=1, select bank1
   481  0053  1303               	bcf	3,6	;RP1=0, select bank1
   482  0054  140C               	bsf	12,0	;volatile
   483  0055                     l954:
   484                           
   485                           ;main.c: 121:     TMR1IF = 0;
   486  0055  1283               	bcf	3,5	;RP0=0, select bank0
   487  0056  1303               	bcf	3,6	;RP1=0, select bank0
   488  0057  100C               	bcf	12,0	;volatile
   489  0058                     l956:
   490                           
   491                           ;main.c: 122:     PEIE = 1;
   492  0058  170B               	bsf	11,6	;volatile
   493  0059                     l958:
   494                           
   495                           ;main.c: 123:     GIE = 1;
   496  0059  178B               	bsf	11,7	;volatile
   497  005A  2869               	goto	l962
   498  005B                     l960:
   499                           
   500                           ;main.c: 128:             counter++;
   501  005B  3001               	movlw	1
   502  005C  07AB               	addwf	_counter,f
   503  005D  3000               	movlw	0
   504  005E  1803               	skipnc
   505  005F  3001               	movlw	1
   506  0060  07AC               	addwf	_counter+1,f
   507  0061  3000               	movlw	0
   508  0062  1803               	skipnc
   509  0063  3001               	movlw	1
   510  0064  07AD               	addwf	_counter+2,f
   511  0065  3000               	movlw	0
   512  0066  1803               	skipnc
   513  0067  3001               	movlw	1
   514  0068  07AE               	addwf	_counter+3,f
   515  0069                     l962:
   516                           
   517                           ;main.c: 127:         while (RB3 == 0) {
   518  0069  1D86               	btfss	6,3	;volatile
   519  006A  286C               	goto	u341
   520  006B  286D               	goto	u340
   521  006C                     u341:
   522  006C  285B               	goto	l960
   523  006D                     u340:
   524  006D                     l964:
   525                           
   526                           ;main.c: 130:         if (counter > 100000){
   527  006D  082E               	movf	_counter+3,w
   528  006E  1D03               	btfss	3,2
   529  006F  2880               	goto	u350
   530  0070  3001               	movlw	1
   531  0071  022D               	subwf	_counter+2,w
   532  0072  1D03               	skipz
   533  0073  287C               	goto	u353
   534  0074  3086               	movlw	134
   535  0075  022C               	subwf	_counter+1,w
   536  0076  1D03               	skipz
   537  0077  287C               	goto	u353
   538  0078  30A1               	movlw	161
   539  0079  022B               	subwf	_counter,w
   540  007A  1D03               	skipz
   541  007B  287C               	goto	u353
   542  007C                     u353:
   543  007C  1C03               	btfss	3,0
   544  007D  287F               	goto	u351
   545  007E  2880               	goto	u350
   546  007F                     u351:
   547  007F  2883               	goto	l968
   548  0080                     u350:
   549  0080                     l966:
   550                           
   551                           ;main.c: 131:             Display_Counter = 0;
   552  0080  01AF               	clrf	_Display_Counter
   553  0081  01B0               	clrf	_Display_Counter+1
   554                           
   555                           ;main.c: 132:         }
   556  0082  28A4               	goto	l974
   557  0083                     l968:
   558  0083  082E               	movf	_counter+3,w
   559  0084  1D03               	btfss	3,2
   560  0085  2895               	goto	u361
   561  0086  3001               	movlw	1
   562  0087  022D               	subwf	_counter+2,w
   563  0088  1D03               	skipz
   564  0089  2892               	goto	u363
   565  008A  3086               	movlw	134
   566  008B  022C               	subwf	_counter+1,w
   567  008C  1D03               	skipz
   568  008D  2892               	goto	u363
   569  008E  30A0               	movlw	160
   570  008F  022B               	subwf	_counter,w
   571  0090  1D03               	skipz
   572  0091  2892               	goto	u363
   573  0092                     u363:
   574  0092  1803               	btfsc	3,0
   575  0093  2895               	goto	u361
   576  0094  2896               	goto	u360
   577  0095                     u361:
   578  0095  28A4               	goto	l974
   579  0096                     u360:
   580  0096                     l970:
   581  0096  082E               	movf	_counter+3,w
   582  0097  042D               	iorwf	_counter+2,w
   583  0098  042C               	iorwf	_counter+1,w
   584  0099  042B               	iorwf	_counter,w
   585  009A  1903               	skipnz
   586  009B  289D               	goto	u371
   587  009C  289E               	goto	u370
   588  009D                     u371:
   589  009D  28A4               	goto	l974
   590  009E                     u370:
   591  009E                     l972:
   592                           
   593                           ;main.c: 135:             Display_Counter++;
   594  009E  3001               	movlw	1
   595  009F  07AF               	addwf	_Display_Counter,f
   596  00A0  1803               	skipnc
   597  00A1  0AB0               	incf	_Display_Counter+1,f
   598  00A2  3000               	movlw	0
   599  00A3  07B0               	addwf	_Display_Counter+1,f
   600  00A4                     l974:	
   601                           ;main.c: 136:         }
   602                           
   603                           
   604                           ;main.c: 140:         counter = 0;
   605  00A4  3000               	movlw	0
   606  00A5  00AE               	movwf	_counter+3
   607  00A6  3000               	movlw	0
   608  00A7  00AD               	movwf	_counter+2
   609  00A8  3000               	movlw	0
   610  00A9  00AC               	movwf	_counter+1
   611  00AA  3000               	movlw	0
   612  00AB  00AB               	movwf	_counter
   613  00AC                     l976:
   614                           
   615                           ;main.c: 142:         SSD1_counter = (Display_Counter % 10);
   616  00AC  300A               	movlw	10
   617  00AD  00A7               	movwf	___lwmod@divisor
   618  00AE  3000               	movlw	0
   619  00AF  00A8               	movwf	___lwmod@divisor+1
   620  00B0  0830               	movf	_Display_Counter+1,w
   621  00B1  00AA               	movwf	___lwmod@dividend+1
   622  00B2  082F               	movf	_Display_Counter,w
   623  00B3  00A9               	movwf	___lwmod@dividend
   624  00B4  120A  118A  21F7  120A  118A  	fcall	___lwmod
   625  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   626  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   627  00BB  0827               	movf	?___lwmod,w
   628  00BC  00FF               	movwf	btemp+1
   629  00BD  087F               	movf	btemp+1,w
   630  00BE  00B4               	movwf	_SSD1_counter
   631  00BF                     l978:
   632                           
   633                           ;main.c: 143:         SSD2_counter = ((Display_Counter / 10) % 10);
   634  00BF  300A               	movlw	10
   635  00C0  00A7               	movwf	___lwmod@divisor
   636  00C1  3000               	movlw	0
   637  00C2  00A8               	movwf	___lwmod@divisor+1
   638  00C3  300A               	movlw	10
   639  00C4  00A0               	movwf	___lwdiv@divisor
   640  00C5  3000               	movlw	0
   641  00C6  00A1               	movwf	___lwdiv@divisor+1
   642  00C7  0830               	movf	_Display_Counter+1,w
   643  00C8  00A3               	movwf	___lwdiv@dividend+1
   644  00C9  082F               	movf	_Display_Counter,w
   645  00CA  00A2               	movwf	___lwdiv@dividend
   646  00CB  120A  118A  21B1  120A  118A  	fcall	___lwdiv
   647  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   648  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   649  00D2  0821               	movf	?___lwdiv+1,w
   650  00D3  00AA               	movwf	___lwmod@dividend+1
   651  00D4  0820               	movf	?___lwdiv,w
   652  00D5  00A9               	movwf	___lwmod@dividend
   653  00D6  120A  118A  21F7  120A  118A  	fcall	___lwmod
   654  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   655  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   656  00DD  0827               	movf	?___lwmod,w
   657  00DE  00FF               	movwf	btemp+1
   658  00DF  087F               	movf	btemp+1,w
   659  00E0  00B3               	movwf	_SSD2_counter
   660  00E1                     l980:
   661                           
   662                           ;main.c: 144:         SSD3_counter = ((Display_Counter / 100) % 10);
   663  00E1  300A               	movlw	10
   664  00E2  00A7               	movwf	___lwmod@divisor
   665  00E3  3000               	movlw	0
   666  00E4  00A8               	movwf	___lwmod@divisor+1
   667  00E5  3064               	movlw	100
   668  00E6  00A0               	movwf	___lwdiv@divisor
   669  00E7  3000               	movlw	0
   670  00E8  00A1               	movwf	___lwdiv@divisor+1
   671  00E9  0830               	movf	_Display_Counter+1,w
   672  00EA  00A3               	movwf	___lwdiv@dividend+1
   673  00EB  082F               	movf	_Display_Counter,w
   674  00EC  00A2               	movwf	___lwdiv@dividend
   675  00ED  120A  118A  21B1  120A  118A  	fcall	___lwdiv
   676  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   677  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   678  00F4  0821               	movf	?___lwdiv+1,w
   679  00F5  00AA               	movwf	___lwmod@dividend+1
   680  00F6  0820               	movf	?___lwdiv,w
   681  00F7  00A9               	movwf	___lwmod@dividend
   682  00F8  120A  118A  21F7  120A  118A  	fcall	___lwmod
   683  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   684  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   685  00FF  0827               	movf	?___lwmod,w
   686  0100  00FF               	movwf	btemp+1
   687  0101  087F               	movf	btemp+1,w
   688  0102  00B2               	movwf	_SSD3_counter
   689  0103                     l982:
   690                           
   691                           ;main.c: 145:         SSD4_counter = ((Display_Counter / 1000) % 10);
   692  0103  300A               	movlw	10
   693  0104  00A7               	movwf	___lwmod@divisor
   694  0105  3000               	movlw	0
   695  0106  00A8               	movwf	___lwmod@divisor+1
   696  0107  30E8               	movlw	232
   697  0108  00A0               	movwf	___lwdiv@divisor
   698  0109  3003               	movlw	3
   699  010A  00A1               	movwf	___lwdiv@divisor+1
   700  010B  0830               	movf	_Display_Counter+1,w
   701  010C  00A3               	movwf	___lwdiv@dividend+1
   702  010D  082F               	movf	_Display_Counter,w
   703  010E  00A2               	movwf	___lwdiv@dividend
   704  010F  120A  118A  21B1  120A  118A  	fcall	___lwdiv
   705  0114  1283               	bcf	3,5	;RP0=0, select bank0
   706  0115  1303               	bcf	3,6	;RP1=0, select bank0
   707  0116  0821               	movf	?___lwdiv+1,w
   708  0117  00AA               	movwf	___lwmod@dividend+1
   709  0118  0820               	movf	?___lwdiv,w
   710  0119  00A9               	movwf	___lwmod@dividend
   711  011A  120A  118A  21F7  120A  118A  	fcall	___lwmod
   712  011F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0120  1303               	bcf	3,6	;RP1=0, select bank0
   714  0121  0827               	movf	?___lwmod,w
   715  0122  00FF               	movwf	btemp+1
   716  0123  087F               	movf	btemp+1,w
   717  0124  00B1               	movwf	_SSD4_counter
   718                           
   719                           ;main.c: 147:         if(Display_Counter > 9999){
   720  0125  3027               	movlw	39
   721  0126  0230               	subwf	_Display_Counter+1,w
   722  0127  3010               	movlw	16
   723  0128  1903               	skipnz
   724  0129  022F               	subwf	_Display_Counter,w
   725  012A  1C03               	skipc
   726  012B  292D               	goto	u381
   727  012C  292E               	goto	u380
   728  012D                     u381:
   729  012D  2869               	goto	l962
   730  012E                     u380:
   731  012E                     l984:
   732                           
   733                           ;main.c: 148:             Display_Counter=0;
   734  012E  01AF               	clrf	_Display_Counter
   735  012F  01B0               	clrf	_Display_Counter+1
   736  0130  2869               	goto	l962
   737  0131  120A  118A  2812   	ljmp	start
   738  0134                     __end_of_main:
   739                           
   740                           	psect	text1
   741  01F7                     __ptext1:	
   742 ;; *************** function ___lwmod *****************
   743 ;; Defined at:
   744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  divisor         2    7[BANK0 ] unsigned int 
   747 ;;  dividend        2    9[BANK0 ] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  counter         1    6[COMMON] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  2    7[BANK0 ] unsigned int 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, btemp+1
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       4       0       0       0
   760 ;;      Locals:         1       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0
   762 ;;      Totals:         1       4       0       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function ___lwmod
   775  01F7                     ___lwmod:
   776  01F7                     l866:	
   777                           ;incstack = 0
   778                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   779                           
   780  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   781  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   782  01F9  0827               	movf	___lwmod@divisor,w
   783  01FA  0428               	iorwf	___lwmod@divisor+1,w
   784  01FB  1903               	btfsc	3,2
   785  01FC  29FE               	goto	u271
   786  01FD  29FF               	goto	u270
   787  01FE                     u271:
   788  01FE  2A2E               	goto	l884
   789  01FF                     u270:
   790  01FF                     l868:
   791  01FF  01F6               	clrf	___lwmod@counter
   792  0200  0AF6               	incf	___lwmod@counter,f
   793  0201  2A0D               	goto	l874
   794  0202                     l870:
   795  0202  3001               	movlw	1
   796  0203                     u285:
   797  0203  1003               	clrc
   798  0204  0DA7               	rlf	___lwmod@divisor,f
   799  0205  0DA8               	rlf	___lwmod@divisor+1,f
   800  0206  3EFF               	addlw	-1
   801  0207  1D03               	skipz
   802  0208  2A03               	goto	u285
   803  0209                     l872:
   804  0209  3001               	movlw	1
   805  020A  00FF               	movwf	btemp+1
   806  020B  087F               	movf	btemp+1,w
   807  020C  07F6               	addwf	___lwmod@counter,f
   808  020D                     l874:
   809  020D  1FA8               	btfss	___lwmod@divisor+1,7
   810  020E  2A10               	goto	u291
   811  020F  2A11               	goto	u290
   812  0210                     u291:
   813  0210  2A02               	goto	l870
   814  0211                     u290:
   815  0211                     l876:
   816  0211  0828               	movf	___lwmod@divisor+1,w
   817  0212  022A               	subwf	___lwmod@dividend+1,w
   818  0213  1D03               	skipz
   819  0214  2A17               	goto	u305
   820  0215  0827               	movf	___lwmod@divisor,w
   821  0216  0229               	subwf	___lwmod@dividend,w
   822  0217                     u305:
   823  0217  1C03               	skipc
   824  0218  2A1A               	goto	u301
   825  0219  2A1B               	goto	u300
   826  021A                     u301:
   827  021A  2A21               	goto	l880
   828  021B                     u300:
   829  021B                     l878:
   830  021B  0827               	movf	___lwmod@divisor,w
   831  021C  02A9               	subwf	___lwmod@dividend,f
   832  021D  0828               	movf	___lwmod@divisor+1,w
   833  021E  1C03               	skipc
   834  021F  03AA               	decf	___lwmod@dividend+1,f
   835  0220  02AA               	subwf	___lwmod@dividend+1,f
   836  0221                     l880:
   837  0221  3001               	movlw	1
   838  0222                     u315:
   839  0222  1003               	clrc
   840  0223  0CA8               	rrf	___lwmod@divisor+1,f
   841  0224  0CA7               	rrf	___lwmod@divisor,f
   842  0225  3EFF               	addlw	-1
   843  0226  1D03               	skipz
   844  0227  2A22               	goto	u315
   845  0228                     l882:
   846  0228  3001               	movlw	1
   847  0229  02F6               	subwf	___lwmod@counter,f
   848  022A  1D03               	btfss	3,2
   849  022B  2A2D               	goto	u321
   850  022C  2A2E               	goto	u320
   851  022D                     u321:
   852  022D  2A11               	goto	l876
   853  022E                     u320:
   854  022E                     l884:
   855  022E  082A               	movf	___lwmod@dividend+1,w
   856  022F  00A8               	movwf	?___lwmod+1
   857  0230  0829               	movf	___lwmod@dividend,w
   858  0231  00A7               	movwf	?___lwmod
   859  0232                     l450:
   860  0232  0008               	return
   861  0233                     __end_of___lwmod:
   862                           
   863                           	psect	text2
   864  01B1                     __ptext2:	
   865 ;; *************** function ___lwdiv *****************
   866 ;; Defined at:
   867 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  divisor         2    0[BANK0 ] unsigned int 
   870 ;;  dividend        2    2[BANK0 ] unsigned int 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  quotient        2    4[BANK0 ] unsigned int 
   873 ;;  counter         1    6[BANK0 ] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  2    0[BANK0 ] unsigned int 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, btemp+1
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       4       0       0       0
   884 ;;      Locals:         0       3       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       7       0       0       0
   887 ;;Total ram usage:        7 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function ___lwdiv
   899  01B1                     ___lwdiv:
   900  01B1                     l840:	
   901                           ;incstack = 0
   902                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   903                           
   904  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   905  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   906  01B3  01A4               	clrf	___lwdiv@quotient
   907  01B4  01A5               	clrf	___lwdiv@quotient+1
   908  01B5                     l842:
   909  01B5  0820               	movf	___lwdiv@divisor,w
   910  01B6  0421               	iorwf	___lwdiv@divisor+1,w
   911  01B7  1903               	btfsc	3,2
   912  01B8  29BA               	goto	u201
   913  01B9  29BB               	goto	u200
   914  01BA                     u201:
   915  01BA  29F2               	goto	l862
   916  01BB                     u200:
   917  01BB                     l844:
   918  01BB  01A6               	clrf	___lwdiv@counter
   919  01BC  0AA6               	incf	___lwdiv@counter,f
   920  01BD  29C9               	goto	l850
   921  01BE                     l846:
   922  01BE  3001               	movlw	1
   923  01BF                     u215:
   924  01BF  1003               	clrc
   925  01C0  0DA0               	rlf	___lwdiv@divisor,f
   926  01C1  0DA1               	rlf	___lwdiv@divisor+1,f
   927  01C2  3EFF               	addlw	-1
   928  01C3  1D03               	skipz
   929  01C4  29BF               	goto	u215
   930  01C5                     l848:
   931  01C5  3001               	movlw	1
   932  01C6  00FF               	movwf	btemp+1
   933  01C7  087F               	movf	btemp+1,w
   934  01C8  07A6               	addwf	___lwdiv@counter,f
   935  01C9                     l850:
   936  01C9  1FA1               	btfss	___lwdiv@divisor+1,7
   937  01CA  29CC               	goto	u221
   938  01CB  29CD               	goto	u220
   939  01CC                     u221:
   940  01CC  29BE               	goto	l846
   941  01CD                     u220:
   942  01CD                     l852:
   943  01CD  3001               	movlw	1
   944  01CE                     u235:
   945  01CE  1003               	clrc
   946  01CF  0DA4               	rlf	___lwdiv@quotient,f
   947  01D0  0DA5               	rlf	___lwdiv@quotient+1,f
   948  01D1  3EFF               	addlw	-1
   949  01D2  1D03               	skipz
   950  01D3  29CE               	goto	u235
   951  01D4  0821               	movf	___lwdiv@divisor+1,w
   952  01D5  0223               	subwf	___lwdiv@dividend+1,w
   953  01D6  1D03               	skipz
   954  01D7  29DA               	goto	u245
   955  01D8  0820               	movf	___lwdiv@divisor,w
   956  01D9  0222               	subwf	___lwdiv@dividend,w
   957  01DA                     u245:
   958  01DA  1C03               	skipc
   959  01DB  29DD               	goto	u241
   960  01DC  29DE               	goto	u240
   961  01DD                     u241:
   962  01DD  29E5               	goto	l858
   963  01DE                     u240:
   964  01DE                     l854:
   965  01DE  0820               	movf	___lwdiv@divisor,w
   966  01DF  02A2               	subwf	___lwdiv@dividend,f
   967  01E0  0821               	movf	___lwdiv@divisor+1,w
   968  01E1  1C03               	skipc
   969  01E2  03A3               	decf	___lwdiv@dividend+1,f
   970  01E3  02A3               	subwf	___lwdiv@dividend+1,f
   971  01E4                     l856:
   972  01E4  1424               	bsf	___lwdiv@quotient,0
   973  01E5                     l858:
   974  01E5  3001               	movlw	1
   975  01E6                     u255:
   976  01E6  1003               	clrc
   977  01E7  0CA1               	rrf	___lwdiv@divisor+1,f
   978  01E8  0CA0               	rrf	___lwdiv@divisor,f
   979  01E9  3EFF               	addlw	-1
   980  01EA  1D03               	skipz
   981  01EB  29E6               	goto	u255
   982  01EC                     l860:
   983  01EC  3001               	movlw	1
   984  01ED  02A6               	subwf	___lwdiv@counter,f
   985  01EE  1D03               	btfss	3,2
   986  01EF  29F1               	goto	u261
   987  01F0  29F2               	goto	u260
   988  01F1                     u261:
   989  01F1  29CD               	goto	l852
   990  01F2                     u260:
   991  01F2                     l862:
   992  01F2  0825               	movf	___lwdiv@quotient+1,w
   993  01F3  00A1               	movwf	?___lwdiv+1
   994  01F4  0824               	movf	___lwdiv@quotient,w
   995  01F5  00A0               	movwf	?___lwdiv
   996  01F6                     l440:
   997  01F6  0008               	return
   998  01F7                     __end_of___lwdiv:
   999                           
  1000                           	psect	text3
  1001  0134                     __ptext3:	
  1002 ;; *************** function _ISR *****************
  1003 ;; Defined at:
  1004 ;;		line 37 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          6       0       0       0       0
  1021 ;;      Totals:         6       0       0       0       0
  1022 ;;Total ram usage:        6 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		Interrupt level 1
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _ISR
  1033  0134                     _ISR:
  1034  0134                     i1l888:
  1035                           
  1036                           ;main.c: 41:     if (TMR1IF) {
  1037  0134  1C0C               	btfss	12,0	;volatile
  1038  0135  2937               	goto	u33_21
  1039  0136  2938               	goto	u33_20
  1040  0137                     u33_21:
  1041  0137  29A6               	goto	i1l66
  1042  0138                     u33_20:
  1043  0138  298B               	goto	i1l918
  1044  0139                     i1l61:	
  1045                           ;main.c: 43:             case 1:
  1046                           
  1047                           
  1048                           ;main.c: 44:                 RA2 = 0;
  1049  0139  1105               	bcf	5,2	;volatile
  1050                           
  1051                           ;main.c: 45:                 RA3 = 0;
  1052  013A  1185               	bcf	5,3	;volatile
  1053                           
  1054                           ;main.c: 46:                 RA4 = 0;
  1055  013B  1205               	bcf	5,4	;volatile
  1056                           
  1057                           ;main.c: 47:                 RA5 = 1;
  1058  013C  1685               	bsf	5,5	;volatile
  1059  013D                     i1l892:
  1060                           
  1061                           ;main.c: 48:                 PORTD &= ~0x7F;
  1062  013D  3080               	movlw	128
  1063  013E  00FF               	movwf	btemp+1
  1064  013F  087F               	movf	btemp+1,w
  1065  0140  0588               	andwf	8,f	;volatile
  1066  0141                     i1l894:
  1067                           
  1068                           ;main.c: 49:                 PORTD |= SSD[SSD1_counter];
  1069  0141  0834               	movf	_SSD1_counter,w
  1070  0142  3E35               	addlw	(low (_SSD| 0))& (0+255)
  1071  0143  0084               	movwf	4
  1072  0144  1383               	bcf	3,7	;select IRP bank0
  1073  0145  0800               	movf	0,w
  1074  0146  00FF               	movwf	btemp+1
  1075  0147  087F               	movf	btemp+1,w
  1076  0148  0488               	iorwf	8,f	;volatile
  1077  0149                     i1l896:
  1078                           
  1079                           ;main.c: 50:                 SSD_status = 2;
  1080  0149  3002               	movlw	2
  1081  014A  00FF               	movwf	btemp+1
  1082  014B  087F               	movf	btemp+1,w
  1083  014C  00F7               	movwf	_SSD_status
  1084                           
  1085                           ;main.c: 52:                 break;
  1086  014D  29A1               	goto	i1l62
  1087  014E                     i1l63:	
  1088                           ;main.c: 54:             case 2:
  1089                           
  1090                           
  1091                           ;main.c: 55:                 RA2 = 0;
  1092  014E  1105               	bcf	5,2	;volatile
  1093                           
  1094                           ;main.c: 56:                 RA3 = 0;
  1095  014F  1185               	bcf	5,3	;volatile
  1096                           
  1097                           ;main.c: 57:                 RA4 = 1;
  1098  0150  1605               	bsf	5,4	;volatile
  1099                           
  1100                           ;main.c: 58:                 RA5 = 0;
  1101  0151  1285               	bcf	5,5	;volatile
  1102  0152                     i1l898:
  1103                           
  1104                           ;main.c: 59:                 PORTD &= ~0x7F;
  1105  0152  3080               	movlw	128
  1106  0153  00FF               	movwf	btemp+1
  1107  0154  087F               	movf	btemp+1,w
  1108  0155  0588               	andwf	8,f	;volatile
  1109  0156                     i1l900:
  1110                           
  1111                           ;main.c: 60:                 PORTD |= SSD[SSD2_counter];
  1112  0156  0833               	movf	_SSD2_counter,w
  1113  0157  3E35               	addlw	(low (_SSD| 0))& (0+255)
  1114  0158  0084               	movwf	4
  1115  0159  1383               	bcf	3,7	;select IRP bank0
  1116  015A  0800               	movf	0,w
  1117  015B  00FF               	movwf	btemp+1
  1118  015C  087F               	movf	btemp+1,w
  1119  015D  0488               	iorwf	8,f	;volatile
  1120  015E                     i1l902:
  1121                           
  1122                           ;main.c: 61:                 SSD_status = 3;
  1123  015E  3003               	movlw	3
  1124  015F  00FF               	movwf	btemp+1
  1125  0160  087F               	movf	btemp+1,w
  1126  0161  00F7               	movwf	_SSD_status
  1127                           
  1128                           ;main.c: 63:                 break;
  1129  0162  29A1               	goto	i1l62
  1130  0163                     i1l64:	
  1131                           ;main.c: 65:             case 3:
  1132                           
  1133                           
  1134                           ;main.c: 66:                 RA2 = 0;
  1135  0163  1105               	bcf	5,2	;volatile
  1136                           
  1137                           ;main.c: 67:                 RA3 = 1;
  1138  0164  1585               	bsf	5,3	;volatile
  1139                           
  1140                           ;main.c: 68:                 RA4 = 0;
  1141  0165  1205               	bcf	5,4	;volatile
  1142                           
  1143                           ;main.c: 69:                 RA5 = 0;
  1144  0166  1285               	bcf	5,5	;volatile
  1145  0167                     i1l904:
  1146                           
  1147                           ;main.c: 70:                 PORTD &= ~0x7F;
  1148  0167  3080               	movlw	128
  1149  0168  00FF               	movwf	btemp+1
  1150  0169  087F               	movf	btemp+1,w
  1151  016A  0588               	andwf	8,f	;volatile
  1152  016B                     i1l906:
  1153                           
  1154                           ;main.c: 71:                 PORTD |= SSD[SSD3_counter];
  1155  016B  0832               	movf	_SSD3_counter,w
  1156  016C  3E35               	addlw	(low (_SSD| 0))& (0+255)
  1157  016D  0084               	movwf	4
  1158  016E  1383               	bcf	3,7	;select IRP bank0
  1159  016F  0800               	movf	0,w
  1160  0170  00FF               	movwf	btemp+1
  1161  0171  087F               	movf	btemp+1,w
  1162  0172  0488               	iorwf	8,f	;volatile
  1163  0173                     i1l908:
  1164                           
  1165                           ;main.c: 74:                 SSD_status = 4;
  1166  0173  3004               	movlw	4
  1167  0174  00FF               	movwf	btemp+1
  1168  0175  087F               	movf	btemp+1,w
  1169  0176  00F7               	movwf	_SSD_status
  1170                           
  1171                           ;main.c: 75:                 break;
  1172  0177  29A1               	goto	i1l62
  1173  0178                     i1l65:	
  1174                           ;main.c: 77:             case 4:
  1175                           
  1176                           
  1177                           ;main.c: 78:                 RA2 = 1;
  1178  0178  1505               	bsf	5,2	;volatile
  1179                           
  1180                           ;main.c: 79:                 RA3 = 0;
  1181  0179  1185               	bcf	5,3	;volatile
  1182                           
  1183                           ;main.c: 80:                 RA4 = 0;
  1184  017A  1205               	bcf	5,4	;volatile
  1185                           
  1186                           ;main.c: 81:                 RA5 = 0;
  1187  017B  1285               	bcf	5,5	;volatile
  1188  017C                     i1l910:
  1189                           
  1190                           ;main.c: 82:                 PORTD &= ~0x7F;
  1191  017C  3080               	movlw	128
  1192  017D  00FF               	movwf	btemp+1
  1193  017E  087F               	movf	btemp+1,w
  1194  017F  0588               	andwf	8,f	;volatile
  1195  0180                     i1l912:
  1196                           
  1197                           ;main.c: 83:                 PORTD |= SSD[SSD4_counter];
  1198  0180  0831               	movf	_SSD4_counter,w
  1199  0181  3E35               	addlw	(low (_SSD| 0))& (0+255)
  1200  0182  0084               	movwf	4
  1201  0183  1383               	bcf	3,7	;select IRP bank0
  1202  0184  0800               	movf	0,w
  1203  0185  00FF               	movwf	btemp+1
  1204  0186  087F               	movf	btemp+1,w
  1205  0187  0488               	iorwf	8,f	;volatile
  1206  0188                     i1l914:
  1207                           
  1208                           ;main.c: 84:                 SSD_status = 1;
  1209  0188  01F7               	clrf	_SSD_status
  1210  0189  0AF7               	incf	_SSD_status,f
  1211                           
  1212                           ;main.c: 86:                 break;
  1213  018A  29A1               	goto	i1l62
  1214  018B                     i1l918:
  1215  018B  0877               	movf	_SSD_status,w
  1216  018C  00F0               	movwf	??_ISR
  1217  018D  01F1               	clrf	??_ISR+1
  1218                           
  1219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 1, Range of values is 0 to 0
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte            4     3 (average)
  1225                           ; direct_byte           11     8 (fixed)
  1226                           ; jumptable            260     6 (fixed)
  1227                           ;	Chosen strategy is simple_byte
  1228  018E  0871               	movf	??_ISR+1,w
  1229  018F  3A00               	xorlw	0	; case 0
  1230  0190  1903               	skipnz
  1231  0191  2993               	goto	i1l1006
  1232  0192  29A1               	goto	i1l62
  1233  0193                     i1l1006:
  1234                           
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 4, Range of values is 1 to 4
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte           13     7 (average)
  1240                           ; direct_byte           23    11 (fixed)
  1241                           ; jumptable            263     9 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243  0193  0870               	movf	??_ISR,w
  1244  0194  3A01               	xorlw	1	; case 1
  1245  0195  1903               	skipnz
  1246  0196  2939               	goto	i1l61
  1247  0197  3A03               	xorlw	3	; case 2
  1248  0198  1903               	skipnz
  1249  0199  294E               	goto	i1l63
  1250  019A  3A01               	xorlw	1	; case 3
  1251  019B  1903               	skipnz
  1252  019C  2963               	goto	i1l64
  1253  019D  3A07               	xorlw	7	; case 4
  1254  019E  1903               	skipnz
  1255  019F  2978               	goto	i1l65
  1256  01A0  29A1               	goto	i1l62
  1257  01A1                     i1l62:
  1258                           
  1259                           ;main.c: 89:         TMR1 = 65536-1000;
  1260  01A1  30FC               	movlw	252
  1261  01A2  008F               	movwf	15	;volatile
  1262  01A3  3018               	movlw	24
  1263  01A4  008E               	movwf	14	;volatile
  1264                           
  1265                           ;main.c: 90:         TMR1IF = 0;
  1266  01A5  100C               	bcf	12,0	;volatile
  1267  01A6                     i1l66:
  1268  01A6  0875               	movf	??_ISR+5,w
  1269  01A7  00FF               	movwf	btemp+1
  1270  01A8  0874               	movf	??_ISR+4,w
  1271  01A9  008A               	movwf	10
  1272  01AA  0873               	movf	??_ISR+3,w
  1273  01AB  0084               	movwf	4
  1274  01AC  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  1275  01AD  0083               	movwf	3
  1276  01AE  0EFE               	swapf	btemp,f
  1277  01AF  0E7E               	swapf	btemp,w
  1278  01B0  0009               	retfie
  1279  01B1                     __end_of_ISR:
  1280  007E                     btemp	set	126	;btemp
  1281  007E                     wtemp0	set	126
  1282                           
  1283                           	psect	intentry
  1284  0004                     __pintentry:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  1287                           
  1288  0004                     interrupt_function:
  1289  007E                     saved_w	set	btemp
  1290  0004  00FE               	movwf	btemp
  1291  0005  0E03               	swapf	3,w
  1292  0006  00F2               	movwf	??_ISR+2
  1293  0007  0804               	movf	4,w
  1294  0008  00F3               	movwf	??_ISR+3
  1295  0009  080A               	movf	10,w
  1296  000A  00F4               	movwf	??_ISR+4
  1297  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1298  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1299  000D  087F               	movf	btemp+1,w
  1300  000E  00F5               	movwf	??_ISR+5
  1301  000F  120A  118A  2934   	ljmp	_ISR
  1302                           
  1303                           	psect	config
  1304                           
  1305                           ;Config register CONFIG @ 0x2007
  1306                           ;	Oscillator Selection bits
  1307                           ;	FOSC = XT, XT oscillator
  1308                           ;	Watchdog Timer Enable bit
  1309                           ;	WDTE = OFF, WDT disabled
  1310                           ;	Power-up Timer Enable bit
  1311                           ;	PWRTE = ON, PWRT enabled
  1312                           ;	Brown-out Reset Enable bit
  1313                           ;	BOREN = ON, BOR enabled
  1314                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1315                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1316                           ;	Data EEPROM Memory Code Protection bit
  1317                           ;	CPD = OFF, Data EEPROM code protection off
  1318                           ;	Flash Program Memory Write Enable bits
  1319                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1320                           ;	In-Circuit Debugger Mode bit
  1321                           ;	DEBUG = 0x1, unprogrammed default
  1322                           ;	Flash Program Memory Code Protection bit
  1323                           ;	CP = OFF, Code protection off
  1324  2007                     	org	8199
  1325  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     11      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1385
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     767
                                              6 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 05 02:32:35 2020

                      pc 0002                       fsr 0004                      l440 01F6  
                    l450 0232                      l840 01B1                      l850 01C9  
                    l842 01B5                      l930 003F                      l860 01EC  
                    l852 01CD                      l844 01BB                      l940 0047  
                    l932 0040                      l924 0037                      l854 01DE  
                    l846 01BE                      l862 01F2                      l870 0202  
                    l950 0051                      l942 004D                      l934 0041  
                    l926 003A                      l856 01E4                      l848 01C5  
                    l880 0221                      l872 0209                      l960 005B  
                    l952 0052                      l944 004E                      l936 0042  
                    l928 003C                      l858 01E5                      l882 0228  
                    l874 020D                      l866 01F7                      l970 0096  
                    l962 0069                      l954 0055                      l946 004F  
                    l938 0044                      l876 0211                      l868 01FF  
                    l884 022E                      l980 00E1                      l972 009E  
                    l964 006D                      l956 0058                      l948 0050  
                    l878 021B                      l982 0103                      l974 00A4  
                    l966 0080                      l958 0059                      l984 012E  
                    l976 00AC                      l968 0083                      l978 00BF  
                    _GIE 005F                      _RA2 002A                      _RB0 0030  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
                    _RB3 0033                      u200 01BB                      u201 01BA  
                    u220 01CD                      u300 021B                      u221 01CC  
                    u301 021A                      u215 01BF                      u240 01DE  
                    u320 022E                      u241 01DD                      u321 022D  
                    u305 0217                      u235 01CE                      u315 0222  
                    u260 01F2                      u340 006D                      u261 01F1  
                    u245 01DA                      u341 006C                      u270 01FF  
                    u350 0080                      u255 01E6                      u271 01FE  
                    u351 007F                      u360 0096                      u361 0095  
                    u353 007C                      u290 0211                      u370 009E  
                    u291 0210                      u371 009D                      u363 0092  
                    u380 012E                      _ISR 0134                      u285 0203  
                    u381 012D                      _SSD 0035               _SSD_status 0077  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
                   _PEIE 005E                     i1l61 0139                     i1l62 01A1  
                   i1l63 014E                     i1l64 0163                     i1l65 0178  
                   i1l66 01A6                     _TMR1 000E                     _main 0037  
                   btemp 007E                     start 0012                    ??_ISR 0070  
                  ?_main 0070          __end_of___lwdiv 01F7          __end_of___lwmod 0233  
                  i1l900 0156                    i1l910 017C                    i1l902 015E  
                  i1l912 0180                    i1l904 0167                    i1l914 0188  
                  i1l906 016B                    i1l908 0173                    i1l918 018B  
                  i1l892 013D                    i1l894 0141                    i1l896 0149  
                  i1l888 0134                    i1l898 0152                    u33_20 0138  
                  u33_21 0137                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 0134  
                 ??_main 0077                   i1l1006 0193                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
              ??___lwdiv 0076                ??___lwmod 0076          _Display_Counter 002F  
           __pdataCOMMON 0077                   saved_w 007E  __end_of__initialization 0033  
         __pcstackCOMMON 0070             __pidataBANK0 0246               __pbssBANK0 002B  
             __pmaintext 0037               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085                  ___lwdiv 01B1                  ___lwmod 01F7  
                __ptext1 01F7                  __ptext2 01B1                  __ptext3 0134  
           __size_of_ISR 007D                  _counter 002B     end_of_initialization 0033  
              _TRISBbits 0086            __pidataCOMMON 0250      start_initialization 0015  
            __end_of_ISR 01B1               init_fetch0 0233              __pdataBANK0 0035  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0022  
               ?___lwdiv 0020                 ?___lwmod 0027         ___lwdiv@quotient 0024  
      interrupt_function 0004         __size_of___lwdiv 0046         __size_of___lwmod 003C  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0026            __size_of_main 00FD  
           _SSD1_counter 0034             _SSD2_counter 0033             _SSD3_counter 0032  
           _SSD4_counter 0031                 init_ram0 0237                 intlevel1 0000  
       ___lwmod@dividend 0029          ___lwmod@divisor 0027          ___lwmod@counter 0076  
