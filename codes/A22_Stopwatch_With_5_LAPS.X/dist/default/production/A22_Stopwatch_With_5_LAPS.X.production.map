Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\A22_Stopwatch_With_5_LAPS.X.production.sym \
  --cmf=dist/default/production\A22_Stopwatch_With_5_LAPS.X.production.cmf \
  -z -Q16F877A -oC:\Users\Louda\AppData\Local\Temp\s8e8.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/A22_Stopwatch_With_5_LAPS.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Louda\AppData\Local\Temp\s8e8.o \
  dist/default/production\A22_Stopwatch_With_5_LAPS.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Louda\AppData\Local\Temp\s8e8.o
                end_init                             10       10        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\A22_Stopwatch_With_5_LAPS.X.production.o
                cinit                                13       13       26        8       0
                intentry                              4        4        C        8       0
                config                             2007     2007        1        0       4
                text12                              789      789       1A        8       0
                text11                              6A2      6A2       6F        8       0
                text10                              711      711       2E        8       0
                text9                               633      633       6F        8       0
                text8                               7BB      7BB       18        8       0
                text7                               7A3      7A3       18        8       0
                text6                               768      768       21        8       0
                text5                               50F      50F       9D        8       0
                text4                               5AC      5AC       87        8       0
                text3                               45F      45F       B0        8       0
                text2                               FED      FED       13     1FDA       0
                text1                               7D3      7D3       15        8       0
                maintext                             39       39      426        8       0
                cstackBANK0                          49       49       1A       20       1
                cstackCOMMON                         70       70        8       70       1
                cstackBANK3                         190      190       56      190       1
                inittext                            7E8      7E8       13        8       0
                dataBANK3                           1EF      1EF        1      190       1
                bssBANK3                            1E6      1E6        9      190       1
                dataBANK0                            20       20       29       20       1
                bssCOMMON                            78       78        3       70       1
                idataBANK3                          7FB      7FB        1        8       0
                idataBANK0                          73F      73F       29        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        3         0
                cinit                                13       13       26         0
                intentry                              4        4        C         0
                reset_vec                             0        0        3         0
                text12                              789      789       1A         0
                text11                              6A2      6A2       6F         0
                text10                              711      711       2E         0
                text9                               633      633       6F         0
                text8                               7BB      7BB       18         0
                text7                               7A3      7A3       18         0
                text6                               768      768       21         0
                text5                               50F      50F       9D         0
                text4                               5AC      5AC       87         0
                text3                               45F      45F       B0         0
                text2                               FED      FED       13         0
                text1                               7D3      7D3       15         0
                maintext                             39       39      426         0
                inittext                            7E8      7E8       13         0
                idataBANK3                          7FB      7FB        1         0
                idataBANK0                          73F      73F       29         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          49       49       1A         1
                dataBANK0                            20       20       29         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          
                cstackBANK3                         190      190       56         1
                dataBANK3                           1EF      1EF        1         1
                bssBANK3                            1E6      1E6        9         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007F8  0007FC         8       0  CODE        2
                dataBANK0                      000020  000043  000063        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                cstackBANK3                    000190  000060  0001F0       190       1  BANK3       1
                text2                          000FED  000013  001000      1FDA       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0063-006F              D           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        CODE             0003-0003              1           2
                         07FC-0FEC              4
                         1000-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         07FC-0FEC            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FC-0FEC            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0063-006F              D           1
                         00A0-00EF             50
                         0110-016F             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FC-0FEC            7F1
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FC-0FEC            100
                         1000-1FFF            100

                                  Symbol Table

?___aldiv                cstackBANK0  0049
?___almod                cstackBANK0  0049
LCD_DisChar@DATA         cstackCOMMON 0075
LCD_DisStr@i             cstackBANK0  004B
LCD_DisStr@str           cstackCOMMON 0076
LCD_DisStrRC@column      cstackBANK0  004F
LCD_DisStrRC@row         cstackBANK0  004E
LCD_DisStrRC@str         cstackBANK0  004C
LCD_GotoRC@column        cstackCOMMON 0076
LCD_GotoRC@row           cstackCOMMON 0077
LCD_Int2Str@Integer      cstackBANK0  0057
LCD_Int2Str@i            cstackBANK0  005E
LCD_Int2Str@j            cstackBANK0  005D
LCD_Int2Str@str          cstackBANK0  005B
LCD_Int2Str@temp         cstackBANK0  005C
LCD_SendCMD@COMMAND      cstackCOMMON 0075
_GIE                     (abs)        005F
_INIT_DONE               bssBANK3     01E6
_ISR                     text12       0789
_LAP_flag                bssBANK3     01E7
_LCD_DisChar             text11       06A2
_LCD_DisStr              text10       0711
_LCD_DisStrRC            text7        07A3
_LCD_GotoRC              text8        07BB
_LCD_Init                text6        0768
_LCD_Int2Str             text3        045F
_LCD_SendCMD             text9        0633
_Lap_Hours               bssBANK3     01EA
_Lap_MilliSeconds        bssBANK3     01ED
_Lap_Minutes             bssBANK3     01EB
_Lap_Seconds             bssBANK3     01EC
_Lap_counter             bssBANK3     01E9
_Massage1                dataBANK0    0030
_Massage2                dataBANK0    0020
_Massage3                dataBANK0    0042
_Massage4                dataBANK0    003B
_PEIE                    (abs)        005E
_PORTD                   (abs)        0008
_RB0                     (abs)        0030
_RB3                     (abs)        0033
_RB4                     (abs)        0034
_RB5                     (abs)        0035
_RE1                     (abs)        0049
_RE2                     (abs)        004A
_Reset_flag              dataBANK3    01EF
_Start_Stop_Status       bssBANK3     01EE
_T1CKPS0                 (abs)        0084
_T1CKPS1                 (abs)        0085
_TMR1                    (abs)        000E
_TMR1CS                  (abs)        0081
_TMR1IE                  (abs)        0460
_TMR1IF                  (abs)        0060
_TMR1ON                  (abs)        0080
_TRISBbits               (abs)        0086
_TRISD                   (abs)        0088
_TRISEbits               (abs)        0089
_Timer1_Init             text2        0FED
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK3              bssBANK3     0000
__HbssCOMMON             bssCOMMON    0000
__Hcinit                 cinit        0039
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackBANK3           cstackBANK3  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__HdataBANK3             dataBANK3    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0013
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__HidataBANK3            idataBANK3   0000
__Hinit                  init         0010
__Hinittext              inittext     0000
__Hintentry              intentry     0010
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        1000
__Hspace_1               (abs)        01F0
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        400F
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK3              bssBANK3     0000
__LbssCOMMON             bssCOMMON    0000
__Lcinit                 cinit        0013
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackBANK3           cstackBANK3  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__LdataBANK3             dataBANK3    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0010
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__LidataBANK3            idataBANK3   0000
__Linit                  init         0010
__Linittext              inittext     0000
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        1000
__S1                     (abs)        01F0
__S2                     (abs)        0000
__S3                     (abs)        0000
___aldiv                 text5        050F
___aldiv@counter         cstackBANK0  0051
___aldiv@dividend        cstackBANK0  004D
___aldiv@divisor         cstackBANK0  0049
___aldiv@quotient        cstackBANK0  0053
___aldiv@sign            cstackBANK0  0052
___almod                 text4        05AC
___almod@counter         cstackCOMMON 0074
___almod@dividend        cstackBANK0  004D
___almod@divisor         cstackBANK0  0049
___almod@sign            cstackCOMMON 0075
___bmul                  text1        07D3
___bmul@multiplicand     cstackCOMMON 0073
___bmul@multiplier       cstackCOMMON 0075
___bmul@product          cstackCOMMON 0074
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
__end_of_ISR             text12       07A3
__end_of_LCD_DisChar     text11       0711
__end_of_LCD_DisStr      text10       073F
__end_of_LCD_DisStrRC    text7        07BB
__end_of_LCD_GotoRC      text8        07D3
__end_of_LCD_Init        text6        0789
__end_of_LCD_Int2Str     text3        050F
__end_of_LCD_SendCMD     text9        06A2
__end_of_Timer1_Init     text2        1000
__end_of___aldiv         text5        05AC
__end_of___almod         text4        0633
__end_of___bmul          text1        07E8
__end_of__initialization cinit        0035
__end_of_main            maintext     045F
__initialization         cinit        0013
__pbssBANK3              bssBANK3     01E6
__pbssCOMMON             bssCOMMON    0078
__pcstackBANK0           cstackBANK0  0049
__pcstackBANK3           cstackBANK3  0190
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    0020
__pdataBANK3             dataBANK3    01EF
__pidataBANK0            idataBANK0   073F
__pidataBANK3            idataBANK3   07FB
__pintentry              intentry     0004
__pmaintext              maintext     0039
__ptext1                 text1        07D3
__ptext10                text10       0711
__ptext11                text11       06A2
__ptext12                text12       0789
__ptext2                 text2        0FED
__ptext3                 text3        045F
__ptext4                 text4        05AC
__ptext5                 text5        050F
__ptext6                 text6        0768
__ptext7                 text7        07A3
__ptext8                 text8        07BB
__ptext9                 text9        0633
__size_of_ISR            (abs)        0000
__size_of_LCD_DisChar    (abs)        0000
__size_of_LCD_DisStr     (abs)        0000
__size_of_LCD_DisStrRC   (abs)        0000
__size_of_LCD_GotoRC     (abs)        0000
__size_of_LCD_Init       (abs)        0000
__size_of_LCD_Int2Str    (abs)        0000
__size_of_LCD_SendCMD    (abs)        0000
__size_of_Timer1_Init    (abs)        0000
__size_of___aldiv        (abs)        0000
__size_of___almod        (abs)        0000
__size_of___bmul         (abs)        0000
__size_of_main           (abs)        0000
_first_lap               bssCOMMON    007A
_main                    maintext     0039
_scroll_counter          bssBANK3     01E8
btemp                    (abs)        007E
end_of_initialization    cinit        0035
init_fetch0              inittext     07E8
init_ram0                inittext     07EC
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
main@Laps                cstackBANK3  019E
main@i                   cstackBANK3  0191
main@save_counter        cstackBANK3  0190
main@temp                cstackBANK3  0192
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
start                    init         0010
start_initialization     cinit        0013
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 79 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    1[BANK3 ] unsigned char 
  Laps           72   14[BANK3 ] struct .
  temp           12    2[BANK3 ] struct .
  save_counter    1    0[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0      86       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0      86       0
Total ram usage:       90 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_DisStrRC
		_LCD_Init
		_LCD_Int2Str
		_LCD_SendCMD
		_Timer1_Init
		___bmul
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    5[COMMON] unsigned char 
  product         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Timer1_Init *****************
 Defined at:
		line 268 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Int2Str *****************
 Defined at:
		line 134 in file "LCD.c"
 Parameters:    Size  Location     Type
  Integer         4   14[BANK0 ] long 
  str             1   18[BANK0 ] PTR unsigned char 
		 -> main@temp(12), Laps.Laps(72), main@Laps(72), 
 Auto vars:     Size  Location     Type
  temp            1   19[BANK0 ] unsigned char 
  i               1   21[BANK0 ] unsigned char 
  j               1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       5       0       0       0
      Locals:         0       3       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       8       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
		___almod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___almod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\almod.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] long 
  dividend        4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1    5[COMMON] unsigned char 
  counter         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       8       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Int2Str
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] long 
  dividend        4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   10[BANK0 ] long 
  sign            1    9[BANK0 ] unsigned char 
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      14       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Int2Str
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_DisStrRC *****************
 Defined at:
		line 192 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             2    3[BANK0 ] PTR unsigned char 
		 -> Massage4(7), main@temp(12), Laps.Laps(72), main@Laps(72), 
		 -> Massage3(7), Massage2(16), Massage1(11), 
  row             1    5[BANK0 ] unsigned char 
  column          1    6[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_DisStr
		_LCD_GotoRC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_GotoRC *****************
 Defined at:
		line 181 in file "LCD.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    6[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_SendCMD
 This function is called by:
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_SendCMD *****************
 Defined at:
		line 31 in file "LCD.c"
 Parameters:    Size  Location     Type
  COMMAND         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  COMMAND         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_Init
		_LCD_GotoRC
 This function uses a non-reentrant model


 *************** function _LCD_DisStr *****************
 Defined at:
		line 120 in file "LCD.c"
 Parameters:    Size  Location     Type
  str             2    6[COMMON] PTR unsigned char 
		 -> Massage4(7), main@temp(12), Laps.Laps(72), main@Laps(72), 
		 -> Massage3(7), Massage2(16), Massage1(11), 
 Auto vars:     Size  Location     Type
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         2       3       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_DisChar
 This function is called by:
		_LCD_DisStrRC
 This function uses a non-reentrant model


 *************** function _LCD_DisChar *****************
 Defined at:
		line 76 in file "LCD.c"
 Parameters:    Size  Location     Type
  DATA            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DATA            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_DisStr
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 63 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	050F	0000	158

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c estimated size: 158

shared
		__initialization		CODE           	0013	0000	35

shared estimated size: 35

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\almod.c
		___almod       		CODE           	05AC	0000	136

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\almod.c estimated size: 136

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	07D3	0000	22

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c estimated size: 22

main.c
		_ISR           		CODE           	0789	0000	27
		_main          		CODE           	0039	0000	1063
		_Timer1_Init   		CODE           	0FED	0000	20

main.c estimated size: 1110

LCD.c
		_LCD_Init      		CODE           	0768	0000	34
		_LCD_SendCMD   		CODE           	0633	0000	112
		_LCD_DisStr    		CODE           	0711	0000	47
		_LCD_DisChar   		CODE           	06A2	0000	112
		_LCD_DisStrRC  		CODE           	07A3	0000	25
		_LCD_GotoRC    		CODE           	07BB	0000	25
		_LCD_Int2Str   		CODE           	045F	0000	177

LCD.c estimated size: 532

